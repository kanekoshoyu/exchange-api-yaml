# coding: utf-8

"""
    Binance Public Spot API

    OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictBool, StrictFloat, StrictInt, StrictStr, field_validator
from typing import List, Optional, Union
from typing_extensions import Annotated
from openapi_client.models.sapi_v1_loan_adjust_ltv_post200_response import SapiV1LoanAdjustLtvPost200Response
from openapi_client.models.sapi_v1_loan_borrow_history_get200_response import SapiV1LoanBorrowHistoryGet200Response
from openapi_client.models.sapi_v1_loan_borrow_post200_response import SapiV1LoanBorrowPost200Response
from openapi_client.models.sapi_v1_loan_collateral_data_get200_response import SapiV1LoanCollateralDataGet200Response
from openapi_client.models.sapi_v1_loan_customize_margin_call_post200_response import SapiV1LoanCustomizeMarginCallPost200Response
from openapi_client.models.sapi_v1_loan_income_get200_response_inner import SapiV1LoanIncomeGet200ResponseInner
from openapi_client.models.sapi_v1_loan_loanable_data_get200_response import SapiV1LoanLoanableDataGet200Response
from openapi_client.models.sapi_v1_loan_ltv_adjustment_history_get200_response import SapiV1LoanLtvAdjustmentHistoryGet200Response
from openapi_client.models.sapi_v1_loan_ongoing_orders_get200_response import SapiV1LoanOngoingOrdersGet200Response
from openapi_client.models.sapi_v1_loan_repay_collateral_rate_get200_response import SapiV1LoanRepayCollateralRateGet200Response
from openapi_client.models.sapi_v1_loan_repay_history_get200_response import SapiV1LoanRepayHistoryGet200Response
from openapi_client.models.sapi_v1_loan_repay_post200_response import SapiV1LoanRepayPost200Response
from openapi_client.models.sapi_v2_loan_flexible_adjust_ltv_post200_response import SapiV2LoanFlexibleAdjustLtvPost200Response
from openapi_client.models.sapi_v2_loan_flexible_borrow_history_get200_response import SapiV2LoanFlexibleBorrowHistoryGet200Response
from openapi_client.models.sapi_v2_loan_flexible_borrow_post200_response import SapiV2LoanFlexibleBorrowPost200Response
from openapi_client.models.sapi_v2_loan_flexible_collateral_data_get200_response import SapiV2LoanFlexibleCollateralDataGet200Response
from openapi_client.models.sapi_v2_loan_flexible_loanable_data_get200_response import SapiV2LoanFlexibleLoanableDataGet200Response
from openapi_client.models.sapi_v2_loan_flexible_ltv_adjustment_history_get200_response import SapiV2LoanFlexibleLtvAdjustmentHistoryGet200Response
from openapi_client.models.sapi_v2_loan_flexible_ongoing_orders_get200_response import SapiV2LoanFlexibleOngoingOrdersGet200Response
from openapi_client.models.sapi_v2_loan_flexible_repay_history_get200_response import SapiV2LoanFlexibleRepayHistoryGet200Response
from openapi_client.models.sapi_v2_loan_flexible_repay_post200_response import SapiV2LoanFlexibleRepayPost200Response

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class CryptoLoansApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def sapi_v1_loan_adjust_ltv_post(
        self,
        order_id: Annotated[StrictInt, Field(description="Order ID")],
        amount: Annotated[Union[StrictFloat, StrictInt], Field(description="Amount")],
        direction: Annotated[StrictStr, Field(description="'ADDITIONAL', 'REDUCED'")],
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SapiV1LoanAdjustLtvPost200Response:
        """Crypto Loan Adjust LTV (TRADE)

        Weight(UID): 6000

        :param order_id: Order ID (required)
        :type order_id: int
        :param amount: Amount (required)
        :type amount: float
        :param direction: 'ADDITIONAL', 'REDUCED' (required)
        :type direction: str
        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_adjust_ltv_post_serialize(
            order_id=order_id,
            amount=amount,
            direction=direction,
            timestamp=timestamp,
            signature=signature,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanAdjustLtvPost200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sapi_v1_loan_adjust_ltv_post_with_http_info(
        self,
        order_id: Annotated[StrictInt, Field(description="Order ID")],
        amount: Annotated[Union[StrictFloat, StrictInt], Field(description="Amount")],
        direction: Annotated[StrictStr, Field(description="'ADDITIONAL', 'REDUCED'")],
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SapiV1LoanAdjustLtvPost200Response]:
        """Crypto Loan Adjust LTV (TRADE)

        Weight(UID): 6000

        :param order_id: Order ID (required)
        :type order_id: int
        :param amount: Amount (required)
        :type amount: float
        :param direction: 'ADDITIONAL', 'REDUCED' (required)
        :type direction: str
        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_adjust_ltv_post_serialize(
            order_id=order_id,
            amount=amount,
            direction=direction,
            timestamp=timestamp,
            signature=signature,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanAdjustLtvPost200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sapi_v1_loan_adjust_ltv_post_without_preload_content(
        self,
        order_id: Annotated[StrictInt, Field(description="Order ID")],
        amount: Annotated[Union[StrictFloat, StrictInt], Field(description="Amount")],
        direction: Annotated[StrictStr, Field(description="'ADDITIONAL', 'REDUCED'")],
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Crypto Loan Adjust LTV (TRADE)

        Weight(UID): 6000

        :param order_id: Order ID (required)
        :type order_id: int
        :param amount: Amount (required)
        :type amount: float
        :param direction: 'ADDITIONAL', 'REDUCED' (required)
        :type direction: str
        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_adjust_ltv_post_serialize(
            order_id=order_id,
            amount=amount,
            direction=direction,
            timestamp=timestamp,
            signature=signature,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanAdjustLtvPost200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sapi_v1_loan_adjust_ltv_post_serialize(
        self,
        order_id,
        amount,
        direction,
        timestamp,
        signature,
        recv_window,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if order_id is not None:
            
            _query_params.append(('orderId', order_id))
            
        if amount is not None:
            
            _query_params.append(('amount', amount))
            
        if direction is not None:
            
            _query_params.append(('direction', direction))
            
        if recv_window is not None:
            
            _query_params.append(('recvWindow', recv_window))
            
        if timestamp is not None:
            
            _query_params.append(('timestamp', timestamp))
            
        if signature is not None:
            
            _query_params.append(('signature', signature))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'ApiKeyAuth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/sapi/v1/loan/adjust/ltv',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def sapi_v1_loan_borrow_history_get(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        order_id: Annotated[Optional[StrictInt], Field(description="orderId in POST /sapi/v1/loan/borrow")] = None,
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        start_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        end_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        current: Annotated[Optional[StrictInt], Field(description="Current querying page. Start from 1. Default:1")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="default 10, max 100")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SapiV1LoanBorrowHistoryGet200Response:
        """Get Crypto Loans Borrow History (USER_DATA)

        - If startTime and endTime are not sent, the recent 90-day data will be returned. - The max interval between startTime and endTime is 180 days.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param order_id: orderId in POST /sapi/v1/loan/borrow
        :type order_id: int
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param start_time: UTC timestamp in ms
        :type start_time: int
        :param end_time: UTC timestamp in ms
        :type end_time: int
        :param current: Current querying page. Start from 1. Default:1
        :type current: int
        :param limit: default 10, max 100
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_borrow_history_get_serialize(
            timestamp=timestamp,
            signature=signature,
            order_id=order_id,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            start_time=start_time,
            end_time=end_time,
            current=current,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanBorrowHistoryGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sapi_v1_loan_borrow_history_get_with_http_info(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        order_id: Annotated[Optional[StrictInt], Field(description="orderId in POST /sapi/v1/loan/borrow")] = None,
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        start_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        end_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        current: Annotated[Optional[StrictInt], Field(description="Current querying page. Start from 1. Default:1")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="default 10, max 100")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SapiV1LoanBorrowHistoryGet200Response]:
        """Get Crypto Loans Borrow History (USER_DATA)

        - If startTime and endTime are not sent, the recent 90-day data will be returned. - The max interval between startTime and endTime is 180 days.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param order_id: orderId in POST /sapi/v1/loan/borrow
        :type order_id: int
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param start_time: UTC timestamp in ms
        :type start_time: int
        :param end_time: UTC timestamp in ms
        :type end_time: int
        :param current: Current querying page. Start from 1. Default:1
        :type current: int
        :param limit: default 10, max 100
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_borrow_history_get_serialize(
            timestamp=timestamp,
            signature=signature,
            order_id=order_id,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            start_time=start_time,
            end_time=end_time,
            current=current,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanBorrowHistoryGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sapi_v1_loan_borrow_history_get_without_preload_content(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        order_id: Annotated[Optional[StrictInt], Field(description="orderId in POST /sapi/v1/loan/borrow")] = None,
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        start_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        end_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        current: Annotated[Optional[StrictInt], Field(description="Current querying page. Start from 1. Default:1")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="default 10, max 100")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get Crypto Loans Borrow History (USER_DATA)

        - If startTime and endTime are not sent, the recent 90-day data will be returned. - The max interval between startTime and endTime is 180 days.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param order_id: orderId in POST /sapi/v1/loan/borrow
        :type order_id: int
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param start_time: UTC timestamp in ms
        :type start_time: int
        :param end_time: UTC timestamp in ms
        :type end_time: int
        :param current: Current querying page. Start from 1. Default:1
        :type current: int
        :param limit: default 10, max 100
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_borrow_history_get_serialize(
            timestamp=timestamp,
            signature=signature,
            order_id=order_id,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            start_time=start_time,
            end_time=end_time,
            current=current,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanBorrowHistoryGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sapi_v1_loan_borrow_history_get_serialize(
        self,
        timestamp,
        signature,
        order_id,
        loan_coin,
        collateral_coin,
        start_time,
        end_time,
        current,
        limit,
        recv_window,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if order_id is not None:
            
            _query_params.append(('orderId', order_id))
            
        if loan_coin is not None:
            
            _query_params.append(('loanCoin', loan_coin))
            
        if collateral_coin is not None:
            
            _query_params.append(('collateralCoin', collateral_coin))
            
        if start_time is not None:
            
            _query_params.append(('startTime', start_time))
            
        if end_time is not None:
            
            _query_params.append(('endTime', end_time))
            
        if current is not None:
            
            _query_params.append(('current', current))
            
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        if recv_window is not None:
            
            _query_params.append(('recvWindow', recv_window))
            
        if timestamp is not None:
            
            _query_params.append(('timestamp', timestamp))
            
        if signature is not None:
            
            _query_params.append(('signature', signature))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'ApiKeyAuth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/sapi/v1/loan/borrow/history',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def sapi_v1_loan_borrow_post(
        self,
        loan_coin: Annotated[StrictStr, Field(description="Coin loaned")],
        collateral_coin: Annotated[StrictStr, Field(description="Coin used as collateral")],
        loan_term: Annotated[StrictInt, Field(description="7/14/30/90/180 days")],
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_amount: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Loan amount")] = None,
        collateral_amount: Optional[Union[StrictFloat, StrictInt]] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SapiV1LoanBorrowPost200Response:
        """Crypto Loan Borrow (TRADE)

        Weight(UID): 6000

        :param loan_coin: Coin loaned (required)
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral (required)
        :type collateral_coin: str
        :param loan_term: 7/14/30/90/180 days (required)
        :type loan_term: int
        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_amount: Loan amount
        :type loan_amount: float
        :param collateral_amount:
        :type collateral_amount: float
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_borrow_post_serialize(
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            loan_term=loan_term,
            timestamp=timestamp,
            signature=signature,
            loan_amount=loan_amount,
            collateral_amount=collateral_amount,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanBorrowPost200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sapi_v1_loan_borrow_post_with_http_info(
        self,
        loan_coin: Annotated[StrictStr, Field(description="Coin loaned")],
        collateral_coin: Annotated[StrictStr, Field(description="Coin used as collateral")],
        loan_term: Annotated[StrictInt, Field(description="7/14/30/90/180 days")],
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_amount: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Loan amount")] = None,
        collateral_amount: Optional[Union[StrictFloat, StrictInt]] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SapiV1LoanBorrowPost200Response]:
        """Crypto Loan Borrow (TRADE)

        Weight(UID): 6000

        :param loan_coin: Coin loaned (required)
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral (required)
        :type collateral_coin: str
        :param loan_term: 7/14/30/90/180 days (required)
        :type loan_term: int
        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_amount: Loan amount
        :type loan_amount: float
        :param collateral_amount:
        :type collateral_amount: float
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_borrow_post_serialize(
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            loan_term=loan_term,
            timestamp=timestamp,
            signature=signature,
            loan_amount=loan_amount,
            collateral_amount=collateral_amount,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanBorrowPost200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sapi_v1_loan_borrow_post_without_preload_content(
        self,
        loan_coin: Annotated[StrictStr, Field(description="Coin loaned")],
        collateral_coin: Annotated[StrictStr, Field(description="Coin used as collateral")],
        loan_term: Annotated[StrictInt, Field(description="7/14/30/90/180 days")],
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_amount: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Loan amount")] = None,
        collateral_amount: Optional[Union[StrictFloat, StrictInt]] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Crypto Loan Borrow (TRADE)

        Weight(UID): 6000

        :param loan_coin: Coin loaned (required)
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral (required)
        :type collateral_coin: str
        :param loan_term: 7/14/30/90/180 days (required)
        :type loan_term: int
        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_amount: Loan amount
        :type loan_amount: float
        :param collateral_amount:
        :type collateral_amount: float
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_borrow_post_serialize(
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            loan_term=loan_term,
            timestamp=timestamp,
            signature=signature,
            loan_amount=loan_amount,
            collateral_amount=collateral_amount,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanBorrowPost200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sapi_v1_loan_borrow_post_serialize(
        self,
        loan_coin,
        collateral_coin,
        loan_term,
        timestamp,
        signature,
        loan_amount,
        collateral_amount,
        recv_window,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if loan_coin is not None:
            
            _query_params.append(('loanCoin', loan_coin))
            
        if loan_amount is not None:
            
            _query_params.append(('loanAmount', loan_amount))
            
        if collateral_coin is not None:
            
            _query_params.append(('collateralCoin', collateral_coin))
            
        if collateral_amount is not None:
            
            _query_params.append(('collateralAmount', collateral_amount))
            
        if loan_term is not None:
            
            _query_params.append(('loanTerm', loan_term))
            
        if recv_window is not None:
            
            _query_params.append(('recvWindow', recv_window))
            
        if timestamp is not None:
            
            _query_params.append(('timestamp', timestamp))
            
        if signature is not None:
            
            _query_params.append(('signature', signature))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'ApiKeyAuth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/sapi/v1/loan/borrow',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def sapi_v1_loan_collateral_data_get(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        vip_level: Annotated[Optional[StrictInt], Field(description="Defaults to user's vip level")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SapiV1LoanCollateralDataGet200Response:
        """Get Collateral Assets Data (USER_DATA)

        Get LTV information and collateral limit of collateral assets. The collateral limit is shown in USD value.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param vip_level: Defaults to user's vip level
        :type vip_level: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_collateral_data_get_serialize(
            timestamp=timestamp,
            signature=signature,
            collateral_coin=collateral_coin,
            vip_level=vip_level,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanCollateralDataGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sapi_v1_loan_collateral_data_get_with_http_info(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        vip_level: Annotated[Optional[StrictInt], Field(description="Defaults to user's vip level")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SapiV1LoanCollateralDataGet200Response]:
        """Get Collateral Assets Data (USER_DATA)

        Get LTV information and collateral limit of collateral assets. The collateral limit is shown in USD value.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param vip_level: Defaults to user's vip level
        :type vip_level: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_collateral_data_get_serialize(
            timestamp=timestamp,
            signature=signature,
            collateral_coin=collateral_coin,
            vip_level=vip_level,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanCollateralDataGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sapi_v1_loan_collateral_data_get_without_preload_content(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        vip_level: Annotated[Optional[StrictInt], Field(description="Defaults to user's vip level")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get Collateral Assets Data (USER_DATA)

        Get LTV information and collateral limit of collateral assets. The collateral limit is shown in USD value.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param vip_level: Defaults to user's vip level
        :type vip_level: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_collateral_data_get_serialize(
            timestamp=timestamp,
            signature=signature,
            collateral_coin=collateral_coin,
            vip_level=vip_level,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanCollateralDataGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sapi_v1_loan_collateral_data_get_serialize(
        self,
        timestamp,
        signature,
        collateral_coin,
        vip_level,
        recv_window,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if collateral_coin is not None:
            
            _query_params.append(('collateralCoin', collateral_coin))
            
        if vip_level is not None:
            
            _query_params.append(('vipLevel', vip_level))
            
        if recv_window is not None:
            
            _query_params.append(('recvWindow', recv_window))
            
        if timestamp is not None:
            
            _query_params.append(('timestamp', timestamp))
            
        if signature is not None:
            
            _query_params.append(('signature', signature))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'ApiKeyAuth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/sapi/v1/loan/collateral/data',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def sapi_v1_loan_customize_margin_call_post(
        self,
        margin_call: Union[StrictFloat, StrictInt],
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        order_id: Annotated[Optional[StrictInt], Field(description="Mandatory when collateralCoin is empty. Send either orderId or collateralCoin, if both parameters are sent, take orderId only.")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SapiV1LoanCustomizeMarginCallPost200Response:
        """Crypto Loan Customize Margin Call (TRADE)

        Customize margin call for ongoing orders only.  Weight(UID): 6000

        :param margin_call: (required)
        :type margin_call: float
        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param order_id: Mandatory when collateralCoin is empty. Send either orderId or collateralCoin, if both parameters are sent, take orderId only.
        :type order_id: int
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_customize_margin_call_post_serialize(
            margin_call=margin_call,
            timestamp=timestamp,
            signature=signature,
            order_id=order_id,
            collateral_coin=collateral_coin,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanCustomizeMarginCallPost200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sapi_v1_loan_customize_margin_call_post_with_http_info(
        self,
        margin_call: Union[StrictFloat, StrictInt],
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        order_id: Annotated[Optional[StrictInt], Field(description="Mandatory when collateralCoin is empty. Send either orderId or collateralCoin, if both parameters are sent, take orderId only.")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SapiV1LoanCustomizeMarginCallPost200Response]:
        """Crypto Loan Customize Margin Call (TRADE)

        Customize margin call for ongoing orders only.  Weight(UID): 6000

        :param margin_call: (required)
        :type margin_call: float
        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param order_id: Mandatory when collateralCoin is empty. Send either orderId or collateralCoin, if both parameters are sent, take orderId only.
        :type order_id: int
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_customize_margin_call_post_serialize(
            margin_call=margin_call,
            timestamp=timestamp,
            signature=signature,
            order_id=order_id,
            collateral_coin=collateral_coin,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanCustomizeMarginCallPost200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sapi_v1_loan_customize_margin_call_post_without_preload_content(
        self,
        margin_call: Union[StrictFloat, StrictInt],
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        order_id: Annotated[Optional[StrictInt], Field(description="Mandatory when collateralCoin is empty. Send either orderId or collateralCoin, if both parameters are sent, take orderId only.")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Crypto Loan Customize Margin Call (TRADE)

        Customize margin call for ongoing orders only.  Weight(UID): 6000

        :param margin_call: (required)
        :type margin_call: float
        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param order_id: Mandatory when collateralCoin is empty. Send either orderId or collateralCoin, if both parameters are sent, take orderId only.
        :type order_id: int
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_customize_margin_call_post_serialize(
            margin_call=margin_call,
            timestamp=timestamp,
            signature=signature,
            order_id=order_id,
            collateral_coin=collateral_coin,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanCustomizeMarginCallPost200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sapi_v1_loan_customize_margin_call_post_serialize(
        self,
        margin_call,
        timestamp,
        signature,
        order_id,
        collateral_coin,
        recv_window,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if order_id is not None:
            
            _query_params.append(('orderId', order_id))
            
        if collateral_coin is not None:
            
            _query_params.append(('collateralCoin', collateral_coin))
            
        if margin_call is not None:
            
            _query_params.append(('marginCall', margin_call))
            
        if recv_window is not None:
            
            _query_params.append(('recvWindow', recv_window))
            
        if timestamp is not None:
            
            _query_params.append(('timestamp', timestamp))
            
        if signature is not None:
            
            _query_params.append(('signature', signature))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'ApiKeyAuth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/sapi/v1/loan/customize/margin_call',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def sapi_v1_loan_income_get(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        asset: Optional[StrictStr] = None,
        type: Annotated[Optional[StrictStr], Field(description="All types will be returned by default.   * `borrowIn`   * `collateralSpent`   * `repayAmount`   * `collateralReturn` - Collateral return after repayment   * `addCollateral`   * `removeCollateral`   * `collateralReturnAfterLiquidation`")] = None,
        start_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        end_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="default 20, max 100")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> List[SapiV1LoanIncomeGet200ResponseInner]:
        """Get Crypto Loans Income History (USER_DATA)

        - If startTime and endTime are not sent, the recent 7-day data will be returned. - The max interval between startTime and endTime is 30 days.  Weight(UID): 6000

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param asset:
        :type asset: str
        :param type: All types will be returned by default.   * `borrowIn`   * `collateralSpent`   * `repayAmount`   * `collateralReturn` - Collateral return after repayment   * `addCollateral`   * `removeCollateral`   * `collateralReturnAfterLiquidation`
        :type type: str
        :param start_time: UTC timestamp in ms
        :type start_time: int
        :param end_time: UTC timestamp in ms
        :type end_time: int
        :param limit: default 20, max 100
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_income_get_serialize(
            timestamp=timestamp,
            signature=signature,
            asset=asset,
            type=type,
            start_time=start_time,
            end_time=end_time,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[SapiV1LoanIncomeGet200ResponseInner]",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sapi_v1_loan_income_get_with_http_info(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        asset: Optional[StrictStr] = None,
        type: Annotated[Optional[StrictStr], Field(description="All types will be returned by default.   * `borrowIn`   * `collateralSpent`   * `repayAmount`   * `collateralReturn` - Collateral return after repayment   * `addCollateral`   * `removeCollateral`   * `collateralReturnAfterLiquidation`")] = None,
        start_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        end_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="default 20, max 100")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[List[SapiV1LoanIncomeGet200ResponseInner]]:
        """Get Crypto Loans Income History (USER_DATA)

        - If startTime and endTime are not sent, the recent 7-day data will be returned. - The max interval between startTime and endTime is 30 days.  Weight(UID): 6000

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param asset:
        :type asset: str
        :param type: All types will be returned by default.   * `borrowIn`   * `collateralSpent`   * `repayAmount`   * `collateralReturn` - Collateral return after repayment   * `addCollateral`   * `removeCollateral`   * `collateralReturnAfterLiquidation`
        :type type: str
        :param start_time: UTC timestamp in ms
        :type start_time: int
        :param end_time: UTC timestamp in ms
        :type end_time: int
        :param limit: default 20, max 100
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_income_get_serialize(
            timestamp=timestamp,
            signature=signature,
            asset=asset,
            type=type,
            start_time=start_time,
            end_time=end_time,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[SapiV1LoanIncomeGet200ResponseInner]",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sapi_v1_loan_income_get_without_preload_content(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        asset: Optional[StrictStr] = None,
        type: Annotated[Optional[StrictStr], Field(description="All types will be returned by default.   * `borrowIn`   * `collateralSpent`   * `repayAmount`   * `collateralReturn` - Collateral return after repayment   * `addCollateral`   * `removeCollateral`   * `collateralReturnAfterLiquidation`")] = None,
        start_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        end_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="default 20, max 100")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get Crypto Loans Income History (USER_DATA)

        - If startTime and endTime are not sent, the recent 7-day data will be returned. - The max interval between startTime and endTime is 30 days.  Weight(UID): 6000

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param asset:
        :type asset: str
        :param type: All types will be returned by default.   * `borrowIn`   * `collateralSpent`   * `repayAmount`   * `collateralReturn` - Collateral return after repayment   * `addCollateral`   * `removeCollateral`   * `collateralReturnAfterLiquidation`
        :type type: str
        :param start_time: UTC timestamp in ms
        :type start_time: int
        :param end_time: UTC timestamp in ms
        :type end_time: int
        :param limit: default 20, max 100
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_income_get_serialize(
            timestamp=timestamp,
            signature=signature,
            asset=asset,
            type=type,
            start_time=start_time,
            end_time=end_time,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[SapiV1LoanIncomeGet200ResponseInner]",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sapi_v1_loan_income_get_serialize(
        self,
        timestamp,
        signature,
        asset,
        type,
        start_time,
        end_time,
        limit,
        recv_window,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if asset is not None:
            
            _query_params.append(('asset', asset))
            
        if type is not None:
            
            _query_params.append(('type', type))
            
        if start_time is not None:
            
            _query_params.append(('startTime', start_time))
            
        if end_time is not None:
            
            _query_params.append(('endTime', end_time))
            
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        if recv_window is not None:
            
            _query_params.append(('recvWindow', recv_window))
            
        if timestamp is not None:
            
            _query_params.append(('timestamp', timestamp))
            
        if signature is not None:
            
            _query_params.append(('signature', signature))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'ApiKeyAuth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/sapi/v1/loan/income',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def sapi_v1_loan_loanable_data_get(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        vip_level: Annotated[Optional[StrictInt], Field(description="Defaults to user's vip level")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SapiV1LoanLoanableDataGet200Response:
        """Get Loanable Assets Data (USER_DATA)

        Get interest rate and borrow limit of loanable assets. The borrow limit is shown in USD value.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param vip_level: Defaults to user's vip level
        :type vip_level: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_loanable_data_get_serialize(
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            vip_level=vip_level,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanLoanableDataGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sapi_v1_loan_loanable_data_get_with_http_info(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        vip_level: Annotated[Optional[StrictInt], Field(description="Defaults to user's vip level")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SapiV1LoanLoanableDataGet200Response]:
        """Get Loanable Assets Data (USER_DATA)

        Get interest rate and borrow limit of loanable assets. The borrow limit is shown in USD value.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param vip_level: Defaults to user's vip level
        :type vip_level: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_loanable_data_get_serialize(
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            vip_level=vip_level,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanLoanableDataGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sapi_v1_loan_loanable_data_get_without_preload_content(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        vip_level: Annotated[Optional[StrictInt], Field(description="Defaults to user's vip level")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get Loanable Assets Data (USER_DATA)

        Get interest rate and borrow limit of loanable assets. The borrow limit is shown in USD value.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param vip_level: Defaults to user's vip level
        :type vip_level: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_loanable_data_get_serialize(
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            vip_level=vip_level,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanLoanableDataGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sapi_v1_loan_loanable_data_get_serialize(
        self,
        timestamp,
        signature,
        loan_coin,
        vip_level,
        recv_window,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if loan_coin is not None:
            
            _query_params.append(('loanCoin', loan_coin))
            
        if vip_level is not None:
            
            _query_params.append(('vipLevel', vip_level))
            
        if recv_window is not None:
            
            _query_params.append(('recvWindow', recv_window))
            
        if timestamp is not None:
            
            _query_params.append(('timestamp', timestamp))
            
        if signature is not None:
            
            _query_params.append(('signature', signature))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'ApiKeyAuth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/sapi/v1/loan/loanable/data',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def sapi_v1_loan_ltv_adjustment_history_get(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        order_id: Annotated[Optional[StrictInt], Field(description="Order ID")] = None,
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        start_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        end_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        current: Annotated[Optional[StrictInt], Field(description="Current querying page. Start from 1. Default:1")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="default 10, max 100")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SapiV1LoanLtvAdjustmentHistoryGet200Response:
        """Get Loan LTV Adjustment History (USER_DATA)

        If startTime and endTime are not sent, the recent 90-day data will be returned. The max interval between startTime and endTime is 180 days.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param order_id: Order ID
        :type order_id: int
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param start_time: UTC timestamp in ms
        :type start_time: int
        :param end_time: UTC timestamp in ms
        :type end_time: int
        :param current: Current querying page. Start from 1. Default:1
        :type current: int
        :param limit: default 10, max 100
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_ltv_adjustment_history_get_serialize(
            timestamp=timestamp,
            signature=signature,
            order_id=order_id,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            start_time=start_time,
            end_time=end_time,
            current=current,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanLtvAdjustmentHistoryGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sapi_v1_loan_ltv_adjustment_history_get_with_http_info(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        order_id: Annotated[Optional[StrictInt], Field(description="Order ID")] = None,
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        start_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        end_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        current: Annotated[Optional[StrictInt], Field(description="Current querying page. Start from 1. Default:1")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="default 10, max 100")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SapiV1LoanLtvAdjustmentHistoryGet200Response]:
        """Get Loan LTV Adjustment History (USER_DATA)

        If startTime and endTime are not sent, the recent 90-day data will be returned. The max interval between startTime and endTime is 180 days.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param order_id: Order ID
        :type order_id: int
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param start_time: UTC timestamp in ms
        :type start_time: int
        :param end_time: UTC timestamp in ms
        :type end_time: int
        :param current: Current querying page. Start from 1. Default:1
        :type current: int
        :param limit: default 10, max 100
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_ltv_adjustment_history_get_serialize(
            timestamp=timestamp,
            signature=signature,
            order_id=order_id,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            start_time=start_time,
            end_time=end_time,
            current=current,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanLtvAdjustmentHistoryGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sapi_v1_loan_ltv_adjustment_history_get_without_preload_content(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        order_id: Annotated[Optional[StrictInt], Field(description="Order ID")] = None,
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        start_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        end_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        current: Annotated[Optional[StrictInt], Field(description="Current querying page. Start from 1. Default:1")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="default 10, max 100")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get Loan LTV Adjustment History (USER_DATA)

        If startTime and endTime are not sent, the recent 90-day data will be returned. The max interval between startTime and endTime is 180 days.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param order_id: Order ID
        :type order_id: int
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param start_time: UTC timestamp in ms
        :type start_time: int
        :param end_time: UTC timestamp in ms
        :type end_time: int
        :param current: Current querying page. Start from 1. Default:1
        :type current: int
        :param limit: default 10, max 100
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_ltv_adjustment_history_get_serialize(
            timestamp=timestamp,
            signature=signature,
            order_id=order_id,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            start_time=start_time,
            end_time=end_time,
            current=current,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanLtvAdjustmentHistoryGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sapi_v1_loan_ltv_adjustment_history_get_serialize(
        self,
        timestamp,
        signature,
        order_id,
        loan_coin,
        collateral_coin,
        start_time,
        end_time,
        current,
        limit,
        recv_window,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if order_id is not None:
            
            _query_params.append(('orderId', order_id))
            
        if loan_coin is not None:
            
            _query_params.append(('loanCoin', loan_coin))
            
        if collateral_coin is not None:
            
            _query_params.append(('collateralCoin', collateral_coin))
            
        if start_time is not None:
            
            _query_params.append(('startTime', start_time))
            
        if end_time is not None:
            
            _query_params.append(('endTime', end_time))
            
        if current is not None:
            
            _query_params.append(('current', current))
            
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        if recv_window is not None:
            
            _query_params.append(('recvWindow', recv_window))
            
        if timestamp is not None:
            
            _query_params.append(('timestamp', timestamp))
            
        if signature is not None:
            
            _query_params.append(('signature', signature))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'ApiKeyAuth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/sapi/v1/loan/ltv/adjustment/history',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def sapi_v1_loan_ongoing_orders_get(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        order_id: Annotated[Optional[StrictInt], Field(description="orderId in POST /sapi/v1/loan/borrow")] = None,
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        current: Annotated[Optional[StrictInt], Field(description="Current querying page. Start from 1; default:1, max:1000")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="default 10, max 100")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SapiV1LoanOngoingOrdersGet200Response:
        """Get Loan Ongoing Orders (USER_DATA)

        Weight(IP): 300

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param order_id: orderId in POST /sapi/v1/loan/borrow
        :type order_id: int
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param current: Current querying page. Start from 1; default:1, max:1000
        :type current: int
        :param limit: default 10, max 100
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_ongoing_orders_get_serialize(
            timestamp=timestamp,
            signature=signature,
            order_id=order_id,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            current=current,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanOngoingOrdersGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sapi_v1_loan_ongoing_orders_get_with_http_info(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        order_id: Annotated[Optional[StrictInt], Field(description="orderId in POST /sapi/v1/loan/borrow")] = None,
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        current: Annotated[Optional[StrictInt], Field(description="Current querying page. Start from 1; default:1, max:1000")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="default 10, max 100")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SapiV1LoanOngoingOrdersGet200Response]:
        """Get Loan Ongoing Orders (USER_DATA)

        Weight(IP): 300

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param order_id: orderId in POST /sapi/v1/loan/borrow
        :type order_id: int
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param current: Current querying page. Start from 1; default:1, max:1000
        :type current: int
        :param limit: default 10, max 100
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_ongoing_orders_get_serialize(
            timestamp=timestamp,
            signature=signature,
            order_id=order_id,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            current=current,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanOngoingOrdersGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sapi_v1_loan_ongoing_orders_get_without_preload_content(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        order_id: Annotated[Optional[StrictInt], Field(description="orderId in POST /sapi/v1/loan/borrow")] = None,
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        current: Annotated[Optional[StrictInt], Field(description="Current querying page. Start from 1; default:1, max:1000")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="default 10, max 100")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get Loan Ongoing Orders (USER_DATA)

        Weight(IP): 300

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param order_id: orderId in POST /sapi/v1/loan/borrow
        :type order_id: int
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param current: Current querying page. Start from 1; default:1, max:1000
        :type current: int
        :param limit: default 10, max 100
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_ongoing_orders_get_serialize(
            timestamp=timestamp,
            signature=signature,
            order_id=order_id,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            current=current,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanOngoingOrdersGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sapi_v1_loan_ongoing_orders_get_serialize(
        self,
        timestamp,
        signature,
        order_id,
        loan_coin,
        collateral_coin,
        current,
        limit,
        recv_window,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if order_id is not None:
            
            _query_params.append(('orderId', order_id))
            
        if loan_coin is not None:
            
            _query_params.append(('loanCoin', loan_coin))
            
        if collateral_coin is not None:
            
            _query_params.append(('collateralCoin', collateral_coin))
            
        if current is not None:
            
            _query_params.append(('current', current))
            
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        if recv_window is not None:
            
            _query_params.append(('recvWindow', recv_window))
            
        if timestamp is not None:
            
            _query_params.append(('timestamp', timestamp))
            
        if signature is not None:
            
            _query_params.append(('signature', signature))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'ApiKeyAuth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/sapi/v1/loan/ongoing/orders',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def sapi_v1_loan_repay_collateral_rate_get(
        self,
        loan_coin: Annotated[StrictStr, Field(description="Coin loaned")],
        collateral_coin: Annotated[StrictStr, Field(description="Coin used as collateral")],
        repay_amount: Annotated[Union[StrictFloat, StrictInt], Field(description="repay amount of loanCoin")],
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SapiV1LoanRepayCollateralRateGet200Response:
        """Check Collateral Repay Rate (USER_DATA)

        Get the the rate of collateral coin / loan coin when using collateral repay, the rate will be valid within 8 second.  Weight(IP): 6000

        :param loan_coin: Coin loaned (required)
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral (required)
        :type collateral_coin: str
        :param repay_amount: repay amount of loanCoin (required)
        :type repay_amount: float
        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_repay_collateral_rate_get_serialize(
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            repay_amount=repay_amount,
            timestamp=timestamp,
            signature=signature,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanRepayCollateralRateGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sapi_v1_loan_repay_collateral_rate_get_with_http_info(
        self,
        loan_coin: Annotated[StrictStr, Field(description="Coin loaned")],
        collateral_coin: Annotated[StrictStr, Field(description="Coin used as collateral")],
        repay_amount: Annotated[Union[StrictFloat, StrictInt], Field(description="repay amount of loanCoin")],
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SapiV1LoanRepayCollateralRateGet200Response]:
        """Check Collateral Repay Rate (USER_DATA)

        Get the the rate of collateral coin / loan coin when using collateral repay, the rate will be valid within 8 second.  Weight(IP): 6000

        :param loan_coin: Coin loaned (required)
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral (required)
        :type collateral_coin: str
        :param repay_amount: repay amount of loanCoin (required)
        :type repay_amount: float
        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_repay_collateral_rate_get_serialize(
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            repay_amount=repay_amount,
            timestamp=timestamp,
            signature=signature,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanRepayCollateralRateGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sapi_v1_loan_repay_collateral_rate_get_without_preload_content(
        self,
        loan_coin: Annotated[StrictStr, Field(description="Coin loaned")],
        collateral_coin: Annotated[StrictStr, Field(description="Coin used as collateral")],
        repay_amount: Annotated[Union[StrictFloat, StrictInt], Field(description="repay amount of loanCoin")],
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Check Collateral Repay Rate (USER_DATA)

        Get the the rate of collateral coin / loan coin when using collateral repay, the rate will be valid within 8 second.  Weight(IP): 6000

        :param loan_coin: Coin loaned (required)
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral (required)
        :type collateral_coin: str
        :param repay_amount: repay amount of loanCoin (required)
        :type repay_amount: float
        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_repay_collateral_rate_get_serialize(
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            repay_amount=repay_amount,
            timestamp=timestamp,
            signature=signature,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanRepayCollateralRateGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sapi_v1_loan_repay_collateral_rate_get_serialize(
        self,
        loan_coin,
        collateral_coin,
        repay_amount,
        timestamp,
        signature,
        recv_window,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if loan_coin is not None:
            
            _query_params.append(('loanCoin', loan_coin))
            
        if collateral_coin is not None:
            
            _query_params.append(('collateralCoin', collateral_coin))
            
        if repay_amount is not None:
            
            _query_params.append(('repayAmount', repay_amount))
            
        if recv_window is not None:
            
            _query_params.append(('recvWindow', recv_window))
            
        if timestamp is not None:
            
            _query_params.append(('timestamp', timestamp))
            
        if signature is not None:
            
            _query_params.append(('signature', signature))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'ApiKeyAuth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/sapi/v1/loan/repay/collateral/rate',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def sapi_v1_loan_repay_history_get(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        order_id: Annotated[Optional[StrictInt], Field(description="Order ID")] = None,
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        start_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        end_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        current: Annotated[Optional[StrictInt], Field(description="Current querying page. Start from 1. Default:1")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="default 10, max 100")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SapiV1LoanRepayHistoryGet200Response:
        """Get Loan Repayment History (USER_DATA)

        If startTime and endTime are not sent, the recent 90-day data will be returned. The max interval between startTime and endTime is 180 days.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param order_id: Order ID
        :type order_id: int
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param start_time: UTC timestamp in ms
        :type start_time: int
        :param end_time: UTC timestamp in ms
        :type end_time: int
        :param current: Current querying page. Start from 1. Default:1
        :type current: int
        :param limit: default 10, max 100
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_repay_history_get_serialize(
            timestamp=timestamp,
            signature=signature,
            order_id=order_id,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            start_time=start_time,
            end_time=end_time,
            current=current,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanRepayHistoryGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sapi_v1_loan_repay_history_get_with_http_info(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        order_id: Annotated[Optional[StrictInt], Field(description="Order ID")] = None,
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        start_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        end_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        current: Annotated[Optional[StrictInt], Field(description="Current querying page. Start from 1. Default:1")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="default 10, max 100")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SapiV1LoanRepayHistoryGet200Response]:
        """Get Loan Repayment History (USER_DATA)

        If startTime and endTime are not sent, the recent 90-day data will be returned. The max interval between startTime and endTime is 180 days.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param order_id: Order ID
        :type order_id: int
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param start_time: UTC timestamp in ms
        :type start_time: int
        :param end_time: UTC timestamp in ms
        :type end_time: int
        :param current: Current querying page. Start from 1. Default:1
        :type current: int
        :param limit: default 10, max 100
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_repay_history_get_serialize(
            timestamp=timestamp,
            signature=signature,
            order_id=order_id,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            start_time=start_time,
            end_time=end_time,
            current=current,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanRepayHistoryGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sapi_v1_loan_repay_history_get_without_preload_content(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        order_id: Annotated[Optional[StrictInt], Field(description="Order ID")] = None,
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        start_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        end_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        current: Annotated[Optional[StrictInt], Field(description="Current querying page. Start from 1. Default:1")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="default 10, max 100")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get Loan Repayment History (USER_DATA)

        If startTime and endTime are not sent, the recent 90-day data will be returned. The max interval between startTime and endTime is 180 days.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param order_id: Order ID
        :type order_id: int
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param start_time: UTC timestamp in ms
        :type start_time: int
        :param end_time: UTC timestamp in ms
        :type end_time: int
        :param current: Current querying page. Start from 1. Default:1
        :type current: int
        :param limit: default 10, max 100
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_repay_history_get_serialize(
            timestamp=timestamp,
            signature=signature,
            order_id=order_id,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            start_time=start_time,
            end_time=end_time,
            current=current,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanRepayHistoryGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sapi_v1_loan_repay_history_get_serialize(
        self,
        timestamp,
        signature,
        order_id,
        loan_coin,
        collateral_coin,
        start_time,
        end_time,
        current,
        limit,
        recv_window,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if order_id is not None:
            
            _query_params.append(('orderId', order_id))
            
        if loan_coin is not None:
            
            _query_params.append(('loanCoin', loan_coin))
            
        if collateral_coin is not None:
            
            _query_params.append(('collateralCoin', collateral_coin))
            
        if start_time is not None:
            
            _query_params.append(('startTime', start_time))
            
        if end_time is not None:
            
            _query_params.append(('endTime', end_time))
            
        if current is not None:
            
            _query_params.append(('current', current))
            
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        if recv_window is not None:
            
            _query_params.append(('recvWindow', recv_window))
            
        if timestamp is not None:
            
            _query_params.append(('timestamp', timestamp))
            
        if signature is not None:
            
            _query_params.append(('signature', signature))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'ApiKeyAuth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/sapi/v1/loan/repay/history',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def sapi_v1_loan_repay_post(
        self,
        order_id: Annotated[StrictInt, Field(description="Order ID")],
        amount: Annotated[Union[StrictFloat, StrictInt], Field(description="Repayment Amount")],
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        type: Annotated[Optional[StrictInt], Field(description="Default: 1. 1 for 'repay with borrowed coin'; 2 for 'repay with collateral'.")] = None,
        collateral_return: Annotated[Optional[StrictBool], Field(description="Default: TRUE. TRUE: Return extra collateral to spot account; FALSE: Keep extra collateral in the order.")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SapiV1LoanRepayPost200Response:
        """Crypto Loan Repay (TRADE)

        Weight(UID): 6000

        :param order_id: Order ID (required)
        :type order_id: int
        :param amount: Repayment Amount (required)
        :type amount: float
        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param type: Default: 1. 1 for 'repay with borrowed coin'; 2 for 'repay with collateral'.
        :type type: int
        :param collateral_return: Default: TRUE. TRUE: Return extra collateral to spot account; FALSE: Keep extra collateral in the order.
        :type collateral_return: bool
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_repay_post_serialize(
            order_id=order_id,
            amount=amount,
            timestamp=timestamp,
            signature=signature,
            type=type,
            collateral_return=collateral_return,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanRepayPost200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sapi_v1_loan_repay_post_with_http_info(
        self,
        order_id: Annotated[StrictInt, Field(description="Order ID")],
        amount: Annotated[Union[StrictFloat, StrictInt], Field(description="Repayment Amount")],
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        type: Annotated[Optional[StrictInt], Field(description="Default: 1. 1 for 'repay with borrowed coin'; 2 for 'repay with collateral'.")] = None,
        collateral_return: Annotated[Optional[StrictBool], Field(description="Default: TRUE. TRUE: Return extra collateral to spot account; FALSE: Keep extra collateral in the order.")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SapiV1LoanRepayPost200Response]:
        """Crypto Loan Repay (TRADE)

        Weight(UID): 6000

        :param order_id: Order ID (required)
        :type order_id: int
        :param amount: Repayment Amount (required)
        :type amount: float
        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param type: Default: 1. 1 for 'repay with borrowed coin'; 2 for 'repay with collateral'.
        :type type: int
        :param collateral_return: Default: TRUE. TRUE: Return extra collateral to spot account; FALSE: Keep extra collateral in the order.
        :type collateral_return: bool
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_repay_post_serialize(
            order_id=order_id,
            amount=amount,
            timestamp=timestamp,
            signature=signature,
            type=type,
            collateral_return=collateral_return,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanRepayPost200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sapi_v1_loan_repay_post_without_preload_content(
        self,
        order_id: Annotated[StrictInt, Field(description="Order ID")],
        amount: Annotated[Union[StrictFloat, StrictInt], Field(description="Repayment Amount")],
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        type: Annotated[Optional[StrictInt], Field(description="Default: 1. 1 for 'repay with borrowed coin'; 2 for 'repay with collateral'.")] = None,
        collateral_return: Annotated[Optional[StrictBool], Field(description="Default: TRUE. TRUE: Return extra collateral to spot account; FALSE: Keep extra collateral in the order.")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Crypto Loan Repay (TRADE)

        Weight(UID): 6000

        :param order_id: Order ID (required)
        :type order_id: int
        :param amount: Repayment Amount (required)
        :type amount: float
        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param type: Default: 1. 1 for 'repay with borrowed coin'; 2 for 'repay with collateral'.
        :type type: int
        :param collateral_return: Default: TRUE. TRUE: Return extra collateral to spot account; FALSE: Keep extra collateral in the order.
        :type collateral_return: bool
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v1_loan_repay_post_serialize(
            order_id=order_id,
            amount=amount,
            timestamp=timestamp,
            signature=signature,
            type=type,
            collateral_return=collateral_return,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV1LoanRepayPost200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sapi_v1_loan_repay_post_serialize(
        self,
        order_id,
        amount,
        timestamp,
        signature,
        type,
        collateral_return,
        recv_window,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if order_id is not None:
            
            _query_params.append(('orderId', order_id))
            
        if amount is not None:
            
            _query_params.append(('amount', amount))
            
        if type is not None:
            
            _query_params.append(('type', type))
            
        if collateral_return is not None:
            
            _query_params.append(('collateralReturn', collateral_return))
            
        if recv_window is not None:
            
            _query_params.append(('recvWindow', recv_window))
            
        if timestamp is not None:
            
            _query_params.append(('timestamp', timestamp))
            
        if signature is not None:
            
            _query_params.append(('signature', signature))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'ApiKeyAuth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/sapi/v1/loan/repay',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def sapi_v2_loan_flexible_adjust_ltv_post(
        self,
        adjustment_amount: Union[StrictFloat, StrictInt],
        direction: StrictStr,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SapiV2LoanFlexibleAdjustLtvPost200Response:
        """Adjust LTV - Flexible Loan Adjust LTV (TRADE)

        - API Key needs Spot & Margin Trading permission for this endpoint  Weight(UID): 6000

        :param adjustment_amount: (required)
        :type adjustment_amount: float
        :param direction: (required)
        :type direction: str
        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_adjust_ltv_post_serialize(
            adjustment_amount=adjustment_amount,
            direction=direction,
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleAdjustLtvPost200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sapi_v2_loan_flexible_adjust_ltv_post_with_http_info(
        self,
        adjustment_amount: Union[StrictFloat, StrictInt],
        direction: StrictStr,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SapiV2LoanFlexibleAdjustLtvPost200Response]:
        """Adjust LTV - Flexible Loan Adjust LTV (TRADE)

        - API Key needs Spot & Margin Trading permission for this endpoint  Weight(UID): 6000

        :param adjustment_amount: (required)
        :type adjustment_amount: float
        :param direction: (required)
        :type direction: str
        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_adjust_ltv_post_serialize(
            adjustment_amount=adjustment_amount,
            direction=direction,
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleAdjustLtvPost200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sapi_v2_loan_flexible_adjust_ltv_post_without_preload_content(
        self,
        adjustment_amount: Union[StrictFloat, StrictInt],
        direction: StrictStr,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Adjust LTV - Flexible Loan Adjust LTV (TRADE)

        - API Key needs Spot & Margin Trading permission for this endpoint  Weight(UID): 6000

        :param adjustment_amount: (required)
        :type adjustment_amount: float
        :param direction: (required)
        :type direction: str
        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_adjust_ltv_post_serialize(
            adjustment_amount=adjustment_amount,
            direction=direction,
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleAdjustLtvPost200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sapi_v2_loan_flexible_adjust_ltv_post_serialize(
        self,
        adjustment_amount,
        direction,
        timestamp,
        signature,
        loan_coin,
        collateral_coin,
        recv_window,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if loan_coin is not None:
            
            _query_params.append(('loanCoin', loan_coin))
            
        if collateral_coin is not None:
            
            _query_params.append(('collateralCoin', collateral_coin))
            
        if adjustment_amount is not None:
            
            _query_params.append(('adjustmentAmount', adjustment_amount))
            
        if direction is not None:
            
            _query_params.append(('direction', direction))
            
        if recv_window is not None:
            
            _query_params.append(('recvWindow', recv_window))
            
        if timestamp is not None:
            
            _query_params.append(('timestamp', timestamp))
            
        if signature is not None:
            
            _query_params.append(('signature', signature))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'ApiKeyAuth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/sapi/v2/loan/flexible/adjust/ltv',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def sapi_v2_loan_flexible_borrow_history_get(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        start_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        end_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        current: Annotated[Optional[StrictInt], Field(description="Current querying page. Start from 1. Default:1")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="Default 500; max 1000.")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SapiV2LoanFlexibleBorrowHistoryGet200Response:
        """Borrow - Get Flexible Loan Borrow History (USER_DATA)

        - If startTime and endTime are not sent, the recent 90-day data will be returned. - The max interval between startTime and endTime is 180 days.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param start_time: UTC timestamp in ms
        :type start_time: int
        :param end_time: UTC timestamp in ms
        :type end_time: int
        :param current: Current querying page. Start from 1. Default:1
        :type current: int
        :param limit: Default 500; max 1000.
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_borrow_history_get_serialize(
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            start_time=start_time,
            end_time=end_time,
            current=current,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleBorrowHistoryGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sapi_v2_loan_flexible_borrow_history_get_with_http_info(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        start_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        end_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        current: Annotated[Optional[StrictInt], Field(description="Current querying page. Start from 1. Default:1")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="Default 500; max 1000.")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SapiV2LoanFlexibleBorrowHistoryGet200Response]:
        """Borrow - Get Flexible Loan Borrow History (USER_DATA)

        - If startTime and endTime are not sent, the recent 90-day data will be returned. - The max interval between startTime and endTime is 180 days.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param start_time: UTC timestamp in ms
        :type start_time: int
        :param end_time: UTC timestamp in ms
        :type end_time: int
        :param current: Current querying page. Start from 1. Default:1
        :type current: int
        :param limit: Default 500; max 1000.
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_borrow_history_get_serialize(
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            start_time=start_time,
            end_time=end_time,
            current=current,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleBorrowHistoryGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sapi_v2_loan_flexible_borrow_history_get_without_preload_content(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        start_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        end_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        current: Annotated[Optional[StrictInt], Field(description="Current querying page. Start from 1. Default:1")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="Default 500; max 1000.")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Borrow - Get Flexible Loan Borrow History (USER_DATA)

        - If startTime and endTime are not sent, the recent 90-day data will be returned. - The max interval between startTime and endTime is 180 days.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param start_time: UTC timestamp in ms
        :type start_time: int
        :param end_time: UTC timestamp in ms
        :type end_time: int
        :param current: Current querying page. Start from 1. Default:1
        :type current: int
        :param limit: Default 500; max 1000.
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_borrow_history_get_serialize(
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            start_time=start_time,
            end_time=end_time,
            current=current,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleBorrowHistoryGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sapi_v2_loan_flexible_borrow_history_get_serialize(
        self,
        timestamp,
        signature,
        loan_coin,
        collateral_coin,
        start_time,
        end_time,
        current,
        limit,
        recv_window,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if loan_coin is not None:
            
            _query_params.append(('loanCoin', loan_coin))
            
        if collateral_coin is not None:
            
            _query_params.append(('collateralCoin', collateral_coin))
            
        if start_time is not None:
            
            _query_params.append(('startTime', start_time))
            
        if end_time is not None:
            
            _query_params.append(('endTime', end_time))
            
        if current is not None:
            
            _query_params.append(('current', current))
            
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        if recv_window is not None:
            
            _query_params.append(('recvWindow', recv_window))
            
        if timestamp is not None:
            
            _query_params.append(('timestamp', timestamp))
            
        if signature is not None:
            
            _query_params.append(('signature', signature))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'ApiKeyAuth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/sapi/v2/loan/flexible/borrow/history',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def sapi_v2_loan_flexible_borrow_post(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        loan_amount: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Loan amount")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        collateral_amount: Optional[Union[StrictFloat, StrictInt]] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SapiV2LoanFlexibleBorrowPost200Response:
        """Borrow - Flexible Loan Borrow (TRADE)

        - Only available for master account  Weight(UID): 6000

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param loan_amount: Loan amount
        :type loan_amount: float
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param collateral_amount:
        :type collateral_amount: float
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_borrow_post_serialize(
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            loan_amount=loan_amount,
            collateral_coin=collateral_coin,
            collateral_amount=collateral_amount,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleBorrowPost200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sapi_v2_loan_flexible_borrow_post_with_http_info(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        loan_amount: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Loan amount")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        collateral_amount: Optional[Union[StrictFloat, StrictInt]] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SapiV2LoanFlexibleBorrowPost200Response]:
        """Borrow - Flexible Loan Borrow (TRADE)

        - Only available for master account  Weight(UID): 6000

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param loan_amount: Loan amount
        :type loan_amount: float
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param collateral_amount:
        :type collateral_amount: float
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_borrow_post_serialize(
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            loan_amount=loan_amount,
            collateral_coin=collateral_coin,
            collateral_amount=collateral_amount,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleBorrowPost200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sapi_v2_loan_flexible_borrow_post_without_preload_content(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        loan_amount: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Loan amount")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        collateral_amount: Optional[Union[StrictFloat, StrictInt]] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Borrow - Flexible Loan Borrow (TRADE)

        - Only available for master account  Weight(UID): 6000

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param loan_amount: Loan amount
        :type loan_amount: float
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param collateral_amount:
        :type collateral_amount: float
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_borrow_post_serialize(
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            loan_amount=loan_amount,
            collateral_coin=collateral_coin,
            collateral_amount=collateral_amount,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleBorrowPost200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sapi_v2_loan_flexible_borrow_post_serialize(
        self,
        timestamp,
        signature,
        loan_coin,
        loan_amount,
        collateral_coin,
        collateral_amount,
        recv_window,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if loan_coin is not None:
            
            _query_params.append(('loanCoin', loan_coin))
            
        if loan_amount is not None:
            
            _query_params.append(('loanAmount', loan_amount))
            
        if collateral_coin is not None:
            
            _query_params.append(('collateralCoin', collateral_coin))
            
        if collateral_amount is not None:
            
            _query_params.append(('collateralAmount', collateral_amount))
            
        if recv_window is not None:
            
            _query_params.append(('recvWindow', recv_window))
            
        if timestamp is not None:
            
            _query_params.append(('timestamp', timestamp))
            
        if signature is not None:
            
            _query_params.append(('signature', signature))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'ApiKeyAuth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/sapi/v2/loan/flexible/borrow',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def sapi_v2_loan_flexible_collateral_data_get(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SapiV2LoanFlexibleCollateralDataGet200Response:
        """Get Flexible Loan Collateral Assets Data (USER_DATA)

        Get LTV information and collateral limit of flexible loan's collateral assets. The collateral limit is shown in USD value.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_collateral_data_get_serialize(
            timestamp=timestamp,
            signature=signature,
            collateral_coin=collateral_coin,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleCollateralDataGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sapi_v2_loan_flexible_collateral_data_get_with_http_info(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SapiV2LoanFlexibleCollateralDataGet200Response]:
        """Get Flexible Loan Collateral Assets Data (USER_DATA)

        Get LTV information and collateral limit of flexible loan's collateral assets. The collateral limit is shown in USD value.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_collateral_data_get_serialize(
            timestamp=timestamp,
            signature=signature,
            collateral_coin=collateral_coin,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleCollateralDataGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sapi_v2_loan_flexible_collateral_data_get_without_preload_content(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get Flexible Loan Collateral Assets Data (USER_DATA)

        Get LTV information and collateral limit of flexible loan's collateral assets. The collateral limit is shown in USD value.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_collateral_data_get_serialize(
            timestamp=timestamp,
            signature=signature,
            collateral_coin=collateral_coin,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleCollateralDataGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sapi_v2_loan_flexible_collateral_data_get_serialize(
        self,
        timestamp,
        signature,
        collateral_coin,
        recv_window,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if collateral_coin is not None:
            
            _query_params.append(('collateralCoin', collateral_coin))
            
        if recv_window is not None:
            
            _query_params.append(('recvWindow', recv_window))
            
        if timestamp is not None:
            
            _query_params.append(('timestamp', timestamp))
            
        if signature is not None:
            
            _query_params.append(('signature', signature))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'ApiKeyAuth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/sapi/v2/loan/flexible/collateral/data',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def sapi_v2_loan_flexible_loanable_data_get(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SapiV2LoanFlexibleLoanableDataGet200Response:
        """Get Flexible Loan Assets Data (USER_DATA)

        Get interest rate and borrow limit of flexible loanable assets. The borrow limit is shown in USD value.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_loanable_data_get_serialize(
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleLoanableDataGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sapi_v2_loan_flexible_loanable_data_get_with_http_info(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SapiV2LoanFlexibleLoanableDataGet200Response]:
        """Get Flexible Loan Assets Data (USER_DATA)

        Get interest rate and borrow limit of flexible loanable assets. The borrow limit is shown in USD value.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_loanable_data_get_serialize(
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleLoanableDataGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sapi_v2_loan_flexible_loanable_data_get_without_preload_content(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get Flexible Loan Assets Data (USER_DATA)

        Get interest rate and borrow limit of flexible loanable assets. The borrow limit is shown in USD value.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_loanable_data_get_serialize(
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleLoanableDataGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sapi_v2_loan_flexible_loanable_data_get_serialize(
        self,
        timestamp,
        signature,
        loan_coin,
        recv_window,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if loan_coin is not None:
            
            _query_params.append(('loanCoin', loan_coin))
            
        if recv_window is not None:
            
            _query_params.append(('recvWindow', recv_window))
            
        if timestamp is not None:
            
            _query_params.append(('timestamp', timestamp))
            
        if signature is not None:
            
            _query_params.append(('signature', signature))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'ApiKeyAuth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/sapi/v2/loan/flexible/loanable/data',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def sapi_v2_loan_flexible_ltv_adjustment_history_get(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        start_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        end_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        current: Annotated[Optional[StrictInt], Field(description="Current querying page. Start from 1. Default:1")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="Default 500; max 1000.")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SapiV2LoanFlexibleLtvAdjustmentHistoryGet200Response:
        """Adjust LTV - Get Flexible Loan LTV Adjustment History (USER_DATA)

        - If startTime and endTime are not sent, the recent 90-day data will be returned. - The max interval between startTime and endTime is 180 days.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param start_time: UTC timestamp in ms
        :type start_time: int
        :param end_time: UTC timestamp in ms
        :type end_time: int
        :param current: Current querying page. Start from 1. Default:1
        :type current: int
        :param limit: Default 500; max 1000.
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_ltv_adjustment_history_get_serialize(
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            start_time=start_time,
            end_time=end_time,
            current=current,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleLtvAdjustmentHistoryGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sapi_v2_loan_flexible_ltv_adjustment_history_get_with_http_info(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        start_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        end_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        current: Annotated[Optional[StrictInt], Field(description="Current querying page. Start from 1. Default:1")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="Default 500; max 1000.")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SapiV2LoanFlexibleLtvAdjustmentHistoryGet200Response]:
        """Adjust LTV - Get Flexible Loan LTV Adjustment History (USER_DATA)

        - If startTime and endTime are not sent, the recent 90-day data will be returned. - The max interval between startTime and endTime is 180 days.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param start_time: UTC timestamp in ms
        :type start_time: int
        :param end_time: UTC timestamp in ms
        :type end_time: int
        :param current: Current querying page. Start from 1. Default:1
        :type current: int
        :param limit: Default 500; max 1000.
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_ltv_adjustment_history_get_serialize(
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            start_time=start_time,
            end_time=end_time,
            current=current,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleLtvAdjustmentHistoryGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sapi_v2_loan_flexible_ltv_adjustment_history_get_without_preload_content(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        start_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        end_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        current: Annotated[Optional[StrictInt], Field(description="Current querying page. Start from 1. Default:1")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="Default 500; max 1000.")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Adjust LTV - Get Flexible Loan LTV Adjustment History (USER_DATA)

        - If startTime and endTime are not sent, the recent 90-day data will be returned. - The max interval between startTime and endTime is 180 days.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param start_time: UTC timestamp in ms
        :type start_time: int
        :param end_time: UTC timestamp in ms
        :type end_time: int
        :param current: Current querying page. Start from 1. Default:1
        :type current: int
        :param limit: Default 500; max 1000.
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_ltv_adjustment_history_get_serialize(
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            start_time=start_time,
            end_time=end_time,
            current=current,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleLtvAdjustmentHistoryGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sapi_v2_loan_flexible_ltv_adjustment_history_get_serialize(
        self,
        timestamp,
        signature,
        loan_coin,
        collateral_coin,
        start_time,
        end_time,
        current,
        limit,
        recv_window,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if loan_coin is not None:
            
            _query_params.append(('loanCoin', loan_coin))
            
        if collateral_coin is not None:
            
            _query_params.append(('collateralCoin', collateral_coin))
            
        if start_time is not None:
            
            _query_params.append(('startTime', start_time))
            
        if end_time is not None:
            
            _query_params.append(('endTime', end_time))
            
        if current is not None:
            
            _query_params.append(('current', current))
            
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        if recv_window is not None:
            
            _query_params.append(('recvWindow', recv_window))
            
        if timestamp is not None:
            
            _query_params.append(('timestamp', timestamp))
            
        if signature is not None:
            
            _query_params.append(('signature', signature))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'ApiKeyAuth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/sapi/v2/loan/flexible/ltv/adjustment/history',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def sapi_v2_loan_flexible_ongoing_orders_get(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        current: Annotated[Optional[StrictInt], Field(description="Current querying page. Start from 1. Default:1")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="Default 500; max 1000.")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SapiV2LoanFlexibleOngoingOrdersGet200Response:
        """Borrow - Get Flexible Loan Ongoing Orders (USER_DATA)

         Weight(IP): 300

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param current: Current querying page. Start from 1. Default:1
        :type current: int
        :param limit: Default 500; max 1000.
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_ongoing_orders_get_serialize(
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            current=current,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleOngoingOrdersGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sapi_v2_loan_flexible_ongoing_orders_get_with_http_info(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        current: Annotated[Optional[StrictInt], Field(description="Current querying page. Start from 1. Default:1")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="Default 500; max 1000.")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SapiV2LoanFlexibleOngoingOrdersGet200Response]:
        """Borrow - Get Flexible Loan Ongoing Orders (USER_DATA)

         Weight(IP): 300

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param current: Current querying page. Start from 1. Default:1
        :type current: int
        :param limit: Default 500; max 1000.
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_ongoing_orders_get_serialize(
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            current=current,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleOngoingOrdersGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sapi_v2_loan_flexible_ongoing_orders_get_without_preload_content(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        current: Annotated[Optional[StrictInt], Field(description="Current querying page. Start from 1. Default:1")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="Default 500; max 1000.")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Borrow - Get Flexible Loan Ongoing Orders (USER_DATA)

         Weight(IP): 300

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param current: Current querying page. Start from 1. Default:1
        :type current: int
        :param limit: Default 500; max 1000.
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_ongoing_orders_get_serialize(
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            current=current,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleOngoingOrdersGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sapi_v2_loan_flexible_ongoing_orders_get_serialize(
        self,
        timestamp,
        signature,
        loan_coin,
        collateral_coin,
        current,
        limit,
        recv_window,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if loan_coin is not None:
            
            _query_params.append(('loanCoin', loan_coin))
            
        if collateral_coin is not None:
            
            _query_params.append(('collateralCoin', collateral_coin))
            
        if current is not None:
            
            _query_params.append(('current', current))
            
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        if recv_window is not None:
            
            _query_params.append(('recvWindow', recv_window))
            
        if timestamp is not None:
            
            _query_params.append(('timestamp', timestamp))
            
        if signature is not None:
            
            _query_params.append(('signature', signature))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'ApiKeyAuth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/sapi/v2/loan/flexible/ongoing/orders',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def sapi_v2_loan_flexible_repay_history_get(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        start_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        end_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        current: Annotated[Optional[StrictInt], Field(description="Current querying page. Start from 1. Default:1")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="Default 500; max 1000.")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SapiV2LoanFlexibleRepayHistoryGet200Response:
        """Repay - Get Flexible Loan Repayment History (USER_DATA)

        - If startTime and endTime are not sent, the recent 90-day data will be returned. - The max interval between startTime and endTime is 180 days.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param start_time: UTC timestamp in ms
        :type start_time: int
        :param end_time: UTC timestamp in ms
        :type end_time: int
        :param current: Current querying page. Start from 1. Default:1
        :type current: int
        :param limit: Default 500; max 1000.
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_repay_history_get_serialize(
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            start_time=start_time,
            end_time=end_time,
            current=current,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleRepayHistoryGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sapi_v2_loan_flexible_repay_history_get_with_http_info(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        start_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        end_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        current: Annotated[Optional[StrictInt], Field(description="Current querying page. Start from 1. Default:1")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="Default 500; max 1000.")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SapiV2LoanFlexibleRepayHistoryGet200Response]:
        """Repay - Get Flexible Loan Repayment History (USER_DATA)

        - If startTime and endTime are not sent, the recent 90-day data will be returned. - The max interval between startTime and endTime is 180 days.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param start_time: UTC timestamp in ms
        :type start_time: int
        :param end_time: UTC timestamp in ms
        :type end_time: int
        :param current: Current querying page. Start from 1. Default:1
        :type current: int
        :param limit: Default 500; max 1000.
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_repay_history_get_serialize(
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            start_time=start_time,
            end_time=end_time,
            current=current,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleRepayHistoryGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sapi_v2_loan_flexible_repay_history_get_without_preload_content(
        self,
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        start_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        end_time: Annotated[Optional[StrictInt], Field(description="UTC timestamp in ms")] = None,
        current: Annotated[Optional[StrictInt], Field(description="Current querying page. Start from 1. Default:1")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="Default 500; max 1000.")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Repay - Get Flexible Loan Repayment History (USER_DATA)

        - If startTime and endTime are not sent, the recent 90-day data will be returned. - The max interval between startTime and endTime is 180 days.  Weight(IP): 400

        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param start_time: UTC timestamp in ms
        :type start_time: int
        :param end_time: UTC timestamp in ms
        :type end_time: int
        :param current: Current querying page. Start from 1. Default:1
        :type current: int
        :param limit: Default 500; max 1000.
        :type limit: int
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_repay_history_get_serialize(
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            start_time=start_time,
            end_time=end_time,
            current=current,
            limit=limit,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleRepayHistoryGet200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sapi_v2_loan_flexible_repay_history_get_serialize(
        self,
        timestamp,
        signature,
        loan_coin,
        collateral_coin,
        start_time,
        end_time,
        current,
        limit,
        recv_window,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if loan_coin is not None:
            
            _query_params.append(('loanCoin', loan_coin))
            
        if collateral_coin is not None:
            
            _query_params.append(('collateralCoin', collateral_coin))
            
        if start_time is not None:
            
            _query_params.append(('startTime', start_time))
            
        if end_time is not None:
            
            _query_params.append(('endTime', end_time))
            
        if current is not None:
            
            _query_params.append(('current', current))
            
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        if recv_window is not None:
            
            _query_params.append(('recvWindow', recv_window))
            
        if timestamp is not None:
            
            _query_params.append(('timestamp', timestamp))
            
        if signature is not None:
            
            _query_params.append(('signature', signature))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'ApiKeyAuth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/sapi/v2/loan/flexible/repay/history',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def sapi_v2_loan_flexible_repay_post(
        self,
        repay_amount: Annotated[Union[StrictFloat, StrictInt], Field(description="repay amount of loanCoin")],
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        collateral_return: Annotated[Optional[StrictBool], Field(description="Default: TRUE.  TRUE: Return extra collateral to earn account;  FALSE: Keep extra collateral in the order, and lower LTV.")] = None,
        full_repayment: Annotated[Optional[StrictBool], Field(description="Default: FALSE. TRUE: Full repayment; FALSE: Partial repayment, based on loanAmount")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SapiV2LoanFlexibleRepayPost200Response:
        """Repay - Flexible Loan Repay (TRADE)

        - repayAmount is mandatory even fullRepayment = FALSE  Weight(IP): 6000

        :param repay_amount: repay amount of loanCoin (required)
        :type repay_amount: float
        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param collateral_return: Default: TRUE.  TRUE: Return extra collateral to earn account;  FALSE: Keep extra collateral in the order, and lower LTV.
        :type collateral_return: bool
        :param full_repayment: Default: FALSE. TRUE: Full repayment; FALSE: Partial repayment, based on loanAmount
        :type full_repayment: bool
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_repay_post_serialize(
            repay_amount=repay_amount,
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            collateral_return=collateral_return,
            full_repayment=full_repayment,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleRepayPost200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sapi_v2_loan_flexible_repay_post_with_http_info(
        self,
        repay_amount: Annotated[Union[StrictFloat, StrictInt], Field(description="repay amount of loanCoin")],
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        collateral_return: Annotated[Optional[StrictBool], Field(description="Default: TRUE.  TRUE: Return extra collateral to earn account;  FALSE: Keep extra collateral in the order, and lower LTV.")] = None,
        full_repayment: Annotated[Optional[StrictBool], Field(description="Default: FALSE. TRUE: Full repayment; FALSE: Partial repayment, based on loanAmount")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SapiV2LoanFlexibleRepayPost200Response]:
        """Repay - Flexible Loan Repay (TRADE)

        - repayAmount is mandatory even fullRepayment = FALSE  Weight(IP): 6000

        :param repay_amount: repay amount of loanCoin (required)
        :type repay_amount: float
        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param collateral_return: Default: TRUE.  TRUE: Return extra collateral to earn account;  FALSE: Keep extra collateral in the order, and lower LTV.
        :type collateral_return: bool
        :param full_repayment: Default: FALSE. TRUE: Full repayment; FALSE: Partial repayment, based on loanAmount
        :type full_repayment: bool
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_repay_post_serialize(
            repay_amount=repay_amount,
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            collateral_return=collateral_return,
            full_repayment=full_repayment,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleRepayPost200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sapi_v2_loan_flexible_repay_post_without_preload_content(
        self,
        repay_amount: Annotated[Union[StrictFloat, StrictInt], Field(description="repay amount of loanCoin")],
        timestamp: Annotated[StrictInt, Field(description="UTC timestamp in ms")],
        signature: Annotated[StrictStr, Field(description="Signature")],
        loan_coin: Annotated[Optional[StrictStr], Field(description="Coin loaned")] = None,
        collateral_coin: Annotated[Optional[StrictStr], Field(description="Coin used as collateral")] = None,
        collateral_return: Annotated[Optional[StrictBool], Field(description="Default: TRUE.  TRUE: Return extra collateral to earn account;  FALSE: Keep extra collateral in the order, and lower LTV.")] = None,
        full_repayment: Annotated[Optional[StrictBool], Field(description="Default: FALSE. TRUE: Full repayment; FALSE: Partial repayment, based on loanAmount")] = None,
        recv_window: Annotated[Optional[StrictInt], Field(description="The value cannot be greater than 60000")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Repay - Flexible Loan Repay (TRADE)

        - repayAmount is mandatory even fullRepayment = FALSE  Weight(IP): 6000

        :param repay_amount: repay amount of loanCoin (required)
        :type repay_amount: float
        :param timestamp: UTC timestamp in ms (required)
        :type timestamp: int
        :param signature: Signature (required)
        :type signature: str
        :param loan_coin: Coin loaned
        :type loan_coin: str
        :param collateral_coin: Coin used as collateral
        :type collateral_coin: str
        :param collateral_return: Default: TRUE.  TRUE: Return extra collateral to earn account;  FALSE: Keep extra collateral in the order, and lower LTV.
        :type collateral_return: bool
        :param full_repayment: Default: FALSE. TRUE: Full repayment; FALSE: Partial repayment, based on loanAmount
        :type full_repayment: bool
        :param recv_window: The value cannot be greater than 60000
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sapi_v2_loan_flexible_repay_post_serialize(
            repay_amount=repay_amount,
            timestamp=timestamp,
            signature=signature,
            loan_coin=loan_coin,
            collateral_coin=collateral_coin,
            collateral_return=collateral_return,
            full_repayment=full_repayment,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SapiV2LoanFlexibleRepayPost200Response",
            '400': "Error",
            '401': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sapi_v2_loan_flexible_repay_post_serialize(
        self,
        repay_amount,
        timestamp,
        signature,
        loan_coin,
        collateral_coin,
        collateral_return,
        full_repayment,
        recv_window,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if loan_coin is not None:
            
            _query_params.append(('loanCoin', loan_coin))
            
        if collateral_coin is not None:
            
            _query_params.append(('collateralCoin', collateral_coin))
            
        if repay_amount is not None:
            
            _query_params.append(('repayAmount', repay_amount))
            
        if collateral_return is not None:
            
            _query_params.append(('collateralReturn', collateral_return))
            
        if full_repayment is not None:
            
            _query_params.append(('fullRepayment', full_repayment))
            
        if recv_window is not None:
            
            _query_params.append(('recvWindow', recv_window))
            
        if timestamp is not None:
            
            _query_params.append(('timestamp', timestamp))
            
        if signature is not None:
            
            _query_params.append(('signature', signature))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'ApiKeyAuth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/sapi/v2/loan/flexible/repay',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


