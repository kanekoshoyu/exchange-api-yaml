openapi: 3.0.0
info:
  title: Bitwyre REST API 
  version: 1.0.0
  description: |
    
servers:
  - url: https://api.bitwyre.com
    description: REST API URL
security:  # Global security requirements (applied to all operations)
  - ApiKeyAuth: []
  - ApiSignAuth: []
tags:
  - name: Public API Endpoints
  - name: Private API Endpoints
  - name: Derivatives API Endpoints
  - name: Convert/Instant API Endpoints
  - name: Custodian API Endpoints
  - name: KYC Endpoints
  - name: ESCROW Endpoints
  - name: UDF/Trading API Endpoints
paths:
  /public/time:
    get:
      tags: 
       -  Public API Endpoints
      summary: Retrieve server time
      description: Returns the server's current time in nanoseconds, allowing approximation of the time difference between the server and client.
      responses:
        '200':
          description: Successful response containing the server's current time.
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/time"
               
                
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /public/markets:
    get:
      tags: 
       -  Public API Endpoints
      summary: Returns tradable markets array
      responses:
        '200':
          description: Successful response containing the server's current time.
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/markets"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /public/products:
    get:
      tags: 
       -  Public API Endpoints
      summary: Returns tradable products array
      responses:
        '200':
          description: Successful response containing the server's current time.
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/products"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /public/assets:
    get:
      tags: 
       -  Public API Endpoints
      summary: Returns an array filled with supported assets.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/assets"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /public/assets/crypto:
    get:
      tags: 
       -  Public API Endpoints
      summary: Returns an array filled with supported crypto assets.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/cryptoAssets"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /public/assets/fiat:
    get:
      tags: 
       -  Public API Endpoints
      summary: Returns an array filled with supported fiat assets.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/Fiat"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /public/pairs:
    get:
      tags: 
       -  Public API Endpoints
      parameters:
        - name: market
          in: query
          required: true
          schema:
            type: string
            enum: [crypto, forex]
            description: The market type (e.g., crypto, forex).
            example: "crypto"
        - name: product
          in: query
          required: true
          schema:
            type: string
            enum: [spot, futures]
            description: The product type (e.g., spot, futures).
            example: "spot"
        - name: country
          in: query
          required: false
          schema:
            type: string
            description: The country to filter market pairs.
            example: "ID"
      summary: Returns an underscore _ delimited tradable asset pairs array.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/pairs"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /public/ticker:
    get:
      tags: 
       -  Public API Endpoints
      parameters:
        - name: instrument
          in: query
          schema:
            type: string
            description: The market type (e.g., crypto, forex).
            example: "btc_idr_spot"
        
      summary: Returns ticker information for an asset pair.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/ticker"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /public/trades:
    get:
      tags: 
       -  Public API Endpoints
      parameters:
        - name: instrument
          in: query
          schema:
            type: string
            description: The market type (e.g., crypto, forex).
            example: "btc_idr_spot"
        - name: trade_num
          in: query
          schema:
            type: integer
            example: 2
        
      summary: Returns last trade_num trades for an asset pair.Limited to a maximum of 50 last trades.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/trades"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /public/depth:
    get:
      tags: 
       -  Public API Endpoints
      parameters:
        - name: instrument
          in: query
          schema:
            type: string
            description: The market type (e.g., crypto, forex).
            example: "btc_idr_spot"
        - name: depth_num
          in: query
          schema:
            type: integer
            example: 2
        
      summary: Returns depth data for an asset pair.LLimited to a maximum of 150 data points.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/depth"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /public/contract:
    get:
      tags: 
       -  Public API Endpoints
      parameters:
        - name: instrument
          in: query
          schema:
            type: string
            description: The market type (e.g., crypto, forex).
            example: "btc_idr_spot"
        
      summary: Returns contract details for a derivative instrument/asset pair.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/contract"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /public/withdrawal/fiat/method:
    get:
      tags: 
       -  Public API Endpoints
      parameters:
        - name: assets
          in: query
          schema:
            type: string
            example: "all"
        - name: payment_type
          in: query
          schema:
            type: string
            example: "all"
        - name: merchant_id
          in: query
          schema:
            type: string
            example: "all"
        
      summary: Get fiat withdrawal method data
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/fiatMethod"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /public/insider:
    get:
      tags: 
       -  Public API Endpoints
      parameters:
        - name: username
          in: query
          schema:
            type: string
            example: "satoshi"
      summary: Returns insider user profiles info
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/insider"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /public/insider/trades:
    get:
      tags: 
       -  Public API Endpoints
      parameters:
        - name: username
          in: query
          schema:
            type: string
            example: "satoshi"
      summary: Returns user insider's trades data info
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/trade"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /public/announcements:
    get:
      tags: 
       -  Public API Endpoints
      summary: Returns announcement with the server's time.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/announcement"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /public/ordertypes:
    get:
      tags: 
       -  Public API Endpoints
      summary: Returns enumeration of order types.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/orderTypes"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /public/languages:
    get:
      tags: 
       -  Public API Endpoints
      summary: Returns pairs of supported languages
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/languages"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /public/search:
    get:
      tags: 
       -  Public API Endpoints
      summary: Retrieve search query and Search ticker, trades, and depth data in one endpoint
      parameters:
        - in: query
          name: country
          required: true
          schema:
            type: string
            example: "US"
        - in: query
          name: instrument
          required: false
          schema:
            type: string
            example: "btc_usdt_spot"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  oneOf:
                   - $ref: "#/components/schemas/queries"
                   - $ref: "#/components/schemas/searchResults"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /public/index:
    get:
      tags: 
       -  Public API Endpoints
      summary: An aggregate of an instrument's current market price
      description: An aggregate of an instrument's current market price, collected from multiple third party sources and major exchanges Indices are calculated by fetching orderbook per exchanges, getting their bid-ask spread, then averaging their prices. It is calculated every second by our backend. Current sources are:<br>Binance <br>Bitfinex<br>Bitstamp<br>Coinbase<br>Huobi<br>Okex
      parameters:
        - name: instrument
          in: query
          required: true
          schema:
            type: string
            example: "btc_usdt_spot"
        - name: amount
          in: query
          required: false
          schema:
            type: integer
            example: 1000
        - name: to_time
          in: query
          required: false
          schema:
            type: integer
            example: 35241372327372
        - name: from_time
          in: query
          required: false
          schema:
            type: integer
            example: 1269847367332
        - name: ascending
          in: query
          required: false
          schema:
            type: boolean
            example: false
        
        
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/index"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /public/orderlag:
    get:
      tags: 
       -  Public API Endpoints
      summary: Return order lag of matching engine per instrument (in events)
      parameters:
        - name: instrument
          in: query
          required: false
          schema:
            type: string
            example: "btc_usdt_spot"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/orderLags"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /public/throughput:
    get:
      tags: 
       -  Public API Endpoints
      summary: Return throughput rate data of matching engine of the instrument (in events/second), in addition of consumer and max lag data of the instrument.
      parameters:
        - name: instrument
          in: query
          required: false
          schema:
            type: string
            example: "btc_usdt_spot"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/throughput"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /public/otc:
    get:
      tags: 
       -  Public API Endpoints
      summary: Return Ask Price and Bid Price real time.
      parameters:
        - name: base_asset
          in: query
          required: true
          schema:
            type: string
            example: "btc"
        - name: code_asset
          in: query
          required: true
          schema:
            type: string
            example: "usd"
        - name: spread
          in: query
          required: true
          schema:
            type: number
            example: 1.0
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/OTC"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /public/convert:
    get:
      tags: 
       -  Public API Endpoints
      summary: Return Ask Price and Bid Price real time.
      parameters:
        - name: from_coin
          in: query
          required: true
          schema:
            type: string
            example: "btc"
        - name: to_coin
          in: query
          required: true
          schema:
            type: string
            example: "usdt"
        - name: size
          in: query
          required: true
          schema:
            type: string
            example: "2"
        - name: value
          in: query
          required: true
          schema:
            type: string
        - name: convert_uuid
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/conversion"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/account/spotbalance:
    get:
      tags: 
       -  Private API Endpoints
      summary: Retrieve all user's fiat and crypto balance.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
          - in: query
            name: page
            schema:
              type: integer
            description: Page number
            required: false
          - in: query
            name: per_page
            schema:
              type: integer
            description: Number of results to show per page
            required: false
          - in: query
            name: use_pagination
            schema:
              type: boolean
            description: Whether to enable pagination
            required: false
          - in: query
            name: asset
            schema:
              type: string
            description: Asset name (e.g., BTC)
            required: false

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/spot_account"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
    post:
      tags: 
       -  Private API Endpoints
      summary: Move a user's fiat and crypto balance for derivatives trading.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/spotAccountResponse"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/account/statement:
    get:
      tags: 
       -  Private API Endpoints
      summary: Retrieve user's withdraw and deposit history.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          schema:
            type: integer
            description: Unique identifier for the request
          required: true
        - in: query
          name: checksum
          schema:
            type: string
            description: Payload checksum (specific generation logic depends on Bitwyre)
          required: true
        - in: query
          name: asset
          schema:
            type: string
            description: The asset for which to retrieve the statement
          required: true
        - in: query
          name: payload
          schema:
            type: string
            description: Encoded payload data (specific format depends on Bitwyre)
          required: true
        - in: query
          name: page
          schema:
            type: integer
            description: Page number for pagination (optional)
          required: false
        - in: query
          name: per_page
          schema:
            type: integer
            description: Number of results per page (optional)
          required: false

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/statementResponse"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/fees/withdrawal:
    get:
      tags: 
       -  Private API Endpoints
      summary: Retrieve user's withdraw fees.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          schema:
            type: integer
            description: Unique identifier for the request
          required: true
        - in: query
          name: checksum
          schema:
            type: string
            description: Payload checksum (specific generation logic depends on Bitwyre)
          required: true
        - in: query
          name: payload
          schema:
            type: object
            properties:
              assets:
                type: string
                example: "all"
          required: true
        
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/feeResponse"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/account/transactions:
    get:
      tags: 
       -  Private API Endpoints
      summary: Retrieve user's withdraw, deposit, and clearing history.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          schema:
            type: integer
            description: Unique identifier for the request
          required: true
        - in: query
          name: checksum
          schema:
            type: string
            description: Payload checksum (specific generation logic depends on Bitwyre)
          required: true
        - in: query
          name: type
          schema:
            type: string
            example: "all"
          required: false
        - in: query
          name: assets
          schema:
            type: string
            example: "all"
          required: false
        - in: query
          name: page
          schema:
            type: integer
            example: 2
          required: false
        - in: query
          name: per_page
          schema:
            type: integer
            example: 20
          required: false
        
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/transactions"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/orders/qty_percentage:
    get:
      tags: 
       -  Private API Endpoints
      summary: Retrieve user's possible order amount/quantity from 1-100% based on price, order type and order side
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: order_type
          schema:
            type: integer
            
          required: true
        - in: query
          name: order_side
          schema:
            type: integer
            enum: [1,2] #1:buy,2:sell
          required: true
        - in: query
          name: instrument
          schema:
            type: string
            example: "btc_usdt_spot"
          required: true
        - in: query
          name: price
          schema:
            type: string
          required: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/percentages"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/orders:
    post:
      tags: 
       -  Private API Endpoints
      summary: Opening new order
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/newOrder"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/orders/open:
    get:
      tags: 
       -  Private API Endpoints
      summary: Retrieves curent open orders.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: payload
          schema:
            type: object
            properties:
              instrument:
                type: string
                example: "btc_usdt_spot"
              from_time:
                type: integer
              to_time:
                type: integer
          required: true
        - in: query
          name: page
          schema:
            type: integer
          required: false
        - in: query
          name: per_page
          schema:
            type: integer
          required: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/openOrders"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/orders/open/all:
    get:
      tags: 
       -  Private API Endpoints
      summary: Retrieves curent open orders.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: payload
          schema:
            type: object
            properties:
              instrument:
                type: string
                example: "btc_usdt_spot"
              from_time:
                type: integer
              to_time:
                type: integer
          required: true
        - in: query
          name: page
          schema:
            type: integer
          required: false
        - in: query
          name: per_page
          schema:
            type: integer
          required: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/openOrders"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/orders/closed:
    get:
      tags: 
       -  Private API Endpoints
      summary: Retrieves currently closed orders. Similar to order history.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: payload
          schema:
            type: object
            properties:
              instrument:
                type: string
                example: "btc_usdt_spot"
              from_time:
                type: integer
              to_time:
                type: integer
          required: true
        - in: query
          name: page
          schema:
            type: integer
          required: false
        - in: query
          name: per_page
          schema:
            type: integer
          required: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/openOrders"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/orders/closed/all:
    get:
      tags: 
       -  Private API Endpoints
      summary: Retrieves currently closed orders. Similar to order history.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: payload
          schema:
            type: object
            properties:
              instrument:
                type: string
                example: "btc_usdt_spot"
              from_time:
                type: integer
              to_time:
                type: integer
          required: true
        - in: query
          name: page
          schema:
            type: integer
          required: false
        - in: query
          name: per_page
          schema:
            type: integer
          required: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/openOrders"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/orders/cancelled:
    get:
      tags: 
       -  Private API Endpoints
      summary: Retrieves all cancelled orders. Similar to order history.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          schema:
            type: integer
          required: false
        - in: query
          name: checksum
          schema:
            type: integer
          required: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/cancelledOrder"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/orders/info/{order_id}:
    get:
      tags: 
       -  Private API Endpoints
      summary: Retrieves all cancelled orders. Similar to order history.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: path
          name: order_id
          required: true
          schema:
            type: string
        - in: query
          name: nonce
          schema:
            type: integer
          required: false
        - in: query
          name: checksum
          schema:
            type: integer
          required: false
        - in: query
          name: payload
          required: true
          schema:
            type: object
            properties:
              page:
                type: integer
              per_page:
                type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/newOrder"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/orders/histories:
    get:
      tags: 
       -  Private API Endpoints
      summary: Retrieves all order histories for current instrument.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          schema:
            type: integer
          required: false
        - in: query
          name: checksum
          schema:
            type: integer
          required: false
        - in: query
          name: payload
          required: true
          schema:
            type: object
            properties:
              instrument:
                type: string
              from_time:
                type: integer
              to_time:
                type: integer
        - in: query
          name: page
          required: true
          schema:
            type: integer
        - in: query
          name: per_page
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/orderHistory"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/orders/journey:
    get:
      tags: 
       -  Private API Endpoints
      summary: Retrieves all order histories for current order_id.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          schema:
            type: integer
          required: false
        - in: query
          name: checksum
          schema:
            type: integer
          required: false
        - in: query
          name: payload
          required: true
          schema:
            type: object
            properties:
              order_id:
                type: string
                example: "da5f12ea-8c7c-4cab-83a2-c2191"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/orderJourney"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/orders/cancel:
    delete:
      tags: 
       -  Private API Endpoints
      summary: Cancels a specific order.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          schema:
            type: integer
          required: false
        - in: query
          name: checksum
          schema:
            type: integer
          required: false
        - in: query
          name: payload
          required: true
          schema:
            type: object
            properties:
              order_ids:
                type: array
                items:
                  type: string
                  example: "da5f12ea-8c7c-4cab-83a2-c2191"
              qtys:
                type: array
                items:
                  type: integer
                  example: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/newOrder"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/orders/cancel/instrument/{instrument}:
    delete:
      tags: 
       -  Private API Endpoints
      summary: Cancels a specific order.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: path
          name: instrument
          required: true
          schema:
            type: string
        - in: query
          name: nonce
          schema:
            type: integer
          required: false
        - in: query
          name: checksum
          schema:
            type: integer
          required: false
        - in: query
          name: payload
          required: true
          schema:
            type: object
            properties:
              order_ids:
                type: array
                items:
                  type: string
                  example: "da5f12ea-8c7c-4cab-83a2-c2191"
              qtys:
                type: array
                items:
                  type: integer
                  example: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/newOrder"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/orders/positions/close:
    delete:
      tags: 
       -  Private API Endpoints
      summary: Closing a specific position or all positions.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          schema:
            type: integer
          required: false
        - in: query
          name: checksum
          schema:
            type: integer
          required: false
        - in: query
          name: payload
          required: true
          schema:
            type: object
            properties:
              position_ids:
                type: array
                items:
                  type: string
                  example: "da5f12ea-8c7c-4cab-83a2-c2191"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/newOrder"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/orders/position/close/instrument/{instrument}:
    delete:
      tags: 
       -  Private API Endpoints
      summary: Closes all open position for a specific instrument.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: path
          name: instrument
          required: true
          schema: 
            type: string
        - in: query
          name: nonce
          schema:
            type: integer
          required: false
        - in: query
          name: checksum
          schema:
            type: integer
          required: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/newOrder"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/trades:
    get:
      tags: 
       -  Private API Endpoints
      summary: Retrieves some latest buying/selling transaction history.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          schema:
            type: integer
          required: false
        - in: query
          name: checksum
          schema:
            type: integer
          required: false
        - in: query
          name: payload
          required: true
          schema:
            type: object
            properties:
              instrument:
                type: string
                example: "btc_usdt_spot"
              count:
                type: integer
              from_time:
                type: integer
              to_time:
                type: integer
        - in: query
          name: page
          required: false
          schema:
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/trade"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/account/notifications/trading:
    get:
      tags: 
       -  Private API Endpoints
      summary: Retrieves some latest buying/selling transaction history.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          schema:
            type: integer
          required: false
        - in: query
          name: checksum
          schema:
            type: integer
          required: false
        - in: query
          name: trading_notification_type
          required: false
          schema:
            type: integer
            enum: [0,1,2,3,4,5]#0:OrderRejected,1:OrderCancelled,2:OrderFilled,3:Deposit,4:Withdrawal,5:KYC
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/trading"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/favorites:
    get:
      tags: 
       -  Private API Endpoints
      summary: Search ticker, trades, and depth data of pairs in one endpoint.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: instrument
          required: false
          schema:
            type: array
            items:
              type: string
              example: ["btc_usdt_spot"]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/favorites"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/derivatives/account:
    get:
      tags: 
       -  Derivatives API Endpoints
      summary: Get Account Collateral Informations
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/derivatives"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/derivatives/leverage:
    get:
      tags: 
       -  Derivatives API Endpoints
      summary: Get Current Leverage
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: instrument
          required: true
          schema:
            type: string
            example: "btc_usdt_spot"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/leverage"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
    post:
      tags: 
       -  Derivatives API Endpoints
      summary: update Leverage
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: instrument
          required: true
          schema:
            type: string
            example: "btc_usdt_spot"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/updatedleverage"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/derivatives/positions:
    get:
      tags: 
       -  Derivatives API Endpoints
      summary: Get Open Positions
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: instrument
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: true
          schema:
            type: integer
            example: 1
        - in: query
          name: per_page
          required: true
          schema:
            type: integer
            example: 20
            
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                meta:
                  $ref: "#/components/schemas/meta"
                result:
                  $ref: "#/components/schemas/positions"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/derivatives/reduce:
    get:
      tags: 
       -  Private API Endpoints
      summary: Reduce Position.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          schema:
            type: integer
          required: false
        - in: query
          name: checksum
          schema:
            type: integer
          required: false
        - in: query
          name: payload
          required: true
          schema:
            type: object
            properties:
              position_uuid:
                type: string
              size:
                type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/reduce"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/derivatives/close:
    get:
      tags: 
       -  Private API Endpoints
      summary: close Position.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          schema:
            type: integer
          required: false
        - in: query
          name: checksum
          schema:
            type: integer
          required: false
        - in: query
          name: payload
          required: true
          schema:
            type: object
            properties:
              position_uuid:
                type: string
              size:
                type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/reduce"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/convert:
    post:
      tags: 
       -  Convert/Instant API Endpoints
      summary: Create a convert request. Once this convert request is complete, it will send a POST request to the URL set in the set URL callback method below. The body of the callback request will be in this format.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/conversionResponse"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
    get:
      tags: 
       -  Convert/Instant API Endpoints
      summary: get convert status
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          required: true
          schema:
            type: integer
        - in: query
          name: checksum
          required: true
          schema:
            type: string
        - in: query
          name: convert_uuid
          required: true
          schema:
           type: string
            
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/conversions"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/convert/payment_methods:
    get:
      tags: 
       -  Convert/Instant API Endpoints
      summary: get convert status
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          required: true
          schema:
            type: integer
        - in: query
          name: checksum
          required: true
          schema:
            type: string
        - in: query
          name: type
          required: true
          schema:
           type: string
           example: "all"
            
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/payment_methods"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/convert/status:
    get:
      tags: 
       -  Convert/Instant API Endpoints
      summary: Get Convert Status Data
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          required: true
          schema:
            type: integer
        - in: query
          name: checksum
          required: true
          schema:
            type: string
        - in: query
          name: convert_uuid
          required: true
          schema:
           type: string
           
            
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/convert_status"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/convert/vault:
    post:
      tags: 
       -  Convert/Instant API Endpoints
      summary: Create Vault Convert
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/vaultResponse"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
    get:
      tags: 
       -  Convert/Instant API Endpoints
      summary: get Vault Convert
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          required: true
          schema:
            type: integer
        - in: query
          name: checksum
          required: true
          schema:
            type: string
        - in: query
          name: asset
          required: true
          schema:
            type: string
        - in: query
          name: network_id
          required: false
          schema:
            type: string
        - in: query
          name: convert_uuid
          required: false
          schema:
            type: string
        - in: query
          name: address
          required: false
          schema: 
            type: string
        - in: query
          name: tx_id
          required: false
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema: 
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                meta:
                  $ref: "#/components/schemas/meta"
                result:
                  $ref: "#/components/schemas/depositInfo"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/deposit/callback:
    put:
      tags: 
       -  Convert/Instant API Endpoints
      summary: Set a convert URL callback to make sure after a deposit on a conversion request is successful, it will submit a POST request to hit this endpoint
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/callbackResponse"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/convert/callback:
    put:
      tags: 
       -  Convert/Instant API Endpoints
      summary: Set a convert URL callback to make sure after a conversion request successful, it will submit a POST request to hit this endpoint.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/callbackResponse"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/withdrawal/callback:
    put:
      tags: 
       -  Convert/Instant API Endpoints
      summary: Set a convert URL callback to make sure after a deposit on a conversion request is successful, it will submit a POST request to hit this endpoint.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/callbackResponse"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/account/withdrawal/crypto:
    post:
      tags: 
       -  Custodian API Endpoints
      summary: Creating a New Crypto Withdrawal Request.
      description: Creates a new withdrawal request for a given asset with the given amount.<br>A confirmation email will be sent and contains instruction on how to confirm the withdrawal request.<br>The transaction will not be processed before a confirmation is conducted.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/statementData"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/account/withdrawal/crypto/verify/{withdrawal_id}/{verification_uuid}:
    get:
      tags: 
       -  Custodian API Endpoints
      summary: Creating a New Crypto Withdrawal Request.
      description: Creates a new withdrawal request for a given asset with the given amount.<br>A confirmation email will be sent and contains instruction on how to confirm the withdrawal request.<br>The transaction will not be processed before a confirmation is conducted.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: path
          name: withdrawal_id
          required: true
          schema:
            type: string
        - in: path
          name: verification_uuid
          required: true
          schema:
            type: string
        
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/verifyWithdraw"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/account/withdrawal/crypto/{asset}/{withdrawal_id}:
    get:
      tags: 
       -  Custodian API Endpoints
      summary: Retrieves a withdrawal request's details.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: path
          name: withdrawal_id
          required: true
          schema:
            type: string
        - in: path
          name: asset
          required: true
          schema:
            type: string
        - in: query
          name: nonce
          required: true
          schema:
            type: integer
        - in: query
          name: checksum
          required: true
          schema:
            type: string
        - in: query
          name: payload
          required: true
          schema:
            type: object
            properties:
              page:
                type: integer
              per_page:
                type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                meta:
                  $ref: "#/components/schemas/meta"
                result:
                  $ref: "#/components/schemas/verifyAsset"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/account/withdrawal/fiat:
    post:
      tags: 
       -  Custodian API Endpoints
      summary: Creating a New Fiat Withdrawal Request
      description: Creates a new withdrawal request for a given asset with the given amount.<br>A confirmation email will be sent and contains instruction on how to confirm the withdrawal request.<br>The transaction will not be processed before a confirmation is conducted.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/fiatData"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/account/withdrawal/fiat/verify/{withdrawal_id}/{verification_uuid}:
    get:
      tags: 
       -  Custodian API Endpoints
      summary: Creating a New Crypto fiat Request.
      description: Creates a new fiat request for a given asset with the given amount.<br>A confirmation email will be sent and contains instruction on how to confirm the withdrawal request.<br>The transaction will not be processed before a confirmation is conducted.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: path
          name: withdrawal_id
          required: true
          schema:
            type: string
        - in: path
          name: verification_uuid
          required: true
          schema:
            type: string
        
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/verifyWithdraw"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/account/withdrawal/fiat/{asset}/{withdrawal_id}:
    get:
      tags: 
       -  Custodian API Endpoints
      summary: Retrieves a Fiat request's details.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: path
          name: withdrawal_id
          required: true
          schema:
            type: string
        - in: path
          name: asset
          required: true
          schema:
            type: string
        - in: query
          name: nonce
          required: true
          schema:
            type: integer
        - in: query
          name: checksum
          required: true
          schema:
            type: string
        - in: query
          name: payload
          required: true
          schema:
            type: object
            properties:
              page:
                type: integer
              per_page:
                type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                meta:
                  $ref: "#/components/schemas/meta"
                result:
                  $ref: "#/components/schemas/verifyAsset"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/account/deposit/crypto:
    post:
      tags: 
       -  Custodian API Endpoints
      summary: Gets a new deposit address for a given asset.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/depositCrypto"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/account/deposit/crypto/{asset}/{address}:
    get:
      tags: 
       -  Custodian API Endpoints
      summary: Gets a new deposit address for a given asset.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: path
          name: asset
          required: true
          schema:
            type: string
        - in: path
          name: address
          required: true
          schema:
            type: string
        - in: query
          name: nonce
          required: true
          schema:
            type: integer
        - in: query
          name: checksum
          required: true
          schema:
            type: string
        - in: query
          name: payload
          required: true
          schema:
            type: object
            properties:
              page:
                type: integer
              per_page:
                type: integer
            
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                meta:
                  $ref: "#/components/schemas/meta"
                result:
                  $ref: "#/components/schemas/assetAddress"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/account/deposit/fiat/{asset}:
    get:
      tags: 
       -  Custodian API Endpoints
      summary: Gets a new deposit address for a given asset.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: path
          name: asset
          required: true
          schema:
            type: string
            
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/bankTransfer"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/account/deposit/fiat/request:
    post:
      tags: 
       -  Custodian API Endpoints
      summary: Creates a new deposit request for a given fiat asset with the given amount.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/fiatResponse"
                message:
                  type: string
                  example: "Successfully created a deposit transaction via Credit Card"
                success:
                  type: boolean
                  example: true
                timestamp:
                  type: string
                  example: "2022-11-11T11:24:25+00:00"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/account/deposit/fiat/{asset}/{address}:
    get:
      tags: 
       -  Custodian API Endpoints
      summary: Gets a fiat deposit address' transaction history.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: path
          name: asset
          required: true
          schema:
            type: string
        - in: path
          name: address
          required: true
          schema:
            type: string
        - in: query
          name: nonce
          required: true
          schema:
            type: integer
        - in: query
          name: checksum
          required: true
          schema:
            type: string
        - in: query
          name: payload
          required: true
          schema:
            type: object
            properties:
              page:
                type: integer
              per_page:
                type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/assetsAddress"
                meta:
                  $ref: "#/components/schemas/meta"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/account/withdrawal/crypto/{crypto}/{withdrawal_id}:
    delete:
      tags: 
       -  Custodian API Endpoints
      summary: cancel pending withdrawal
      description: We conduct crypto withdrawal transfers 4 times a day 6:00 Jakarta/WIB, 12:00 Jakarta/WIB, 18:00 Jakarta/WIB, 00:00 Jakarta/WIB. A cancel pending withdrawal for crypto operation can only be done 1 hour before those designated withdrawal times.<br>For example, for the withdrawal batch of 6:00 Jakarta/WIB, the cancel time window closes on 5:00 Jakarta/WIB.<br>Any attempt to cancel a withdrawal after the cancel time window is rejected and will be returned a status of "cancel rejected" and be automatically processed on the next batch.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: path
          name: crypto
          required: true
          schema:
            type: string
        - in: path
          name: withdrawal_id
          required: true
          schema:
            type: string
        - in: query
          name: nonce
          required: true
          schema:
            type: integer
        - in: query
          name: checksum
          required: true
          schema:
            type: string
        - in: query
          name: payload
          required: true
          schema:
            type: object
            properties:
              page:
                type: integer
              per_page:
                type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/cancelPendingWithdrawal"
                meta:
                  $ref: "#/components/schemas/meta"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/account/withdrawal/fiat/{fiat}/{withdrawal_id}:
    delete:
      tags: 
       -  Custodian API Endpoints
      summary: cancel pending fiat
      description: We conduct fiat withdrawal transfers 1 time a day 9:00 Jakarta/WIB. A cancel pending withdrawal for fiat operation can only be done 24 hours before those designated withdrawal times.<br>For example, for the withdrawal batch of 9:00 Jakarta/WIB, the cancel time window closes on 8:59 Jakarta/WIB the previous day<br>Any attempt to cancel a withdrawal after the cancel time window is rejected and will be returned a status of "cancel rejected" and be automatically processed on the next batch.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: path
          name: fiat
          required: true
          schema:
            type: string
        - in: path
          name: withdrawal_id
          required: true
          schema:
            type: string
        - in: query
          name: nonce
          required: true
          schema:
            type: integer
        - in: query
          name: checksum
          required: true
          schema:
            type: string
        - in: query
          name: payload
          required: true
          schema:
            type: object
            properties:
              page:
                type: integer
              per_page:
                type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/cancelPendingWithdrawal"
                meta:
                  $ref: "#/components/schemas/meta"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/account/withdrawal/crypto/address:
    get:
      tags: 
       -  Custodian API Endpoints
      summary: Return all user's existing and verified crypto withdrawal addresses
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          required: true
          schema:
            type: integer
        - in: query
          name: checksum
          required: true
          schema:
            type: string
        - in: query
          name: payload
          required: true
          schema:
            type: object
            properties:
              page:
                type: integer
              per_page:
                type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/withdrawAddress"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
    put:
      tags: 
       -  Custodian API Endpoints
      summary: Add a crypto withdrawal address for the user
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/successMessage"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
    post:
      tags: 
       -  Custodian API Endpoints
      summary: delete withdrawal addresses
      description: Same requestbody and endpoint with DELETE method can be used to delete crypto address.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
      
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/successMessage"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
    patch:
      tags: 
       -  Custodian API Endpoints
      summary: Resend the verification code for a crypto withdrawal address to the user via e-mail.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/successMessage"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/account/banking/get:
    get:
      tags: 
       -  Custodian API Endpoints
      summary: Getting Banking Details
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          required: true
          schema:
            type: integer
        - in: query
          name: checksum
          required: true
          schema:
            type: string
        
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/bankDetail"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/account/banking/post:
    post:
      tags: 
       -  Custodian API Endpoints
      summary: setting Banking Details
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/successMessage"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/account/deposit/gateway:
    get:
      tags: 
       -  Custodian API Endpoints
      summary: Getting List of Deposit Payment Gateways
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          required: true
          schema:
            type: integer
        - in: query
          name: checksum
          required: true
          schema:
            type: string
        - in: query
          name: payload
          required: true
          schema:
            type: object
            properties:
              asset:
                type: string
            
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/gateway"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/account/withdrawl/gateway:
    get:
      tags: 
       -  Custodian API Endpoints
      summary: Getting List of withdrawal Payment Gateways
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/gateway"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/account/kyc-data/status:
    get:
      tags: 
       -  KYC Endpoints
      summary: Get user KYC Data status.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          required: true
          schema:
            type: integer
        - in: query
          name: checksum
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/KYC"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
    post:
      tags: 
       -  KYC Endpoints
      summary: create user KYC Data status.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/successMessage"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
    put:
      tags: 
       -  KYC Endpoints
      summary: update user KYC Data status.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/successMessage"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/uploadkycfiles:
    post:
      tags: 
       -  KYC Endpoints
      summary: upload KYC files.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/successMessage"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/account/deposit/fiat/uploadproof:
    post:
      tags: 
       -  KYC Endpoints
      summary: Endpoint for user to upload fiat transfer proof to be checked.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/successMessage"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/uploadkycfiles-mobiles:
    post:
      tags: 
       -  KYC Endpoints
      summary: upload KYC files.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/successMessage"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/account/withdrawal/fiat/uploadproof-mobiles:
    post:
      tags: 
       -  KYC Endpoints
      summary: Endpoint for user to upload fiat transfer proof to be checked.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/successMessage"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/account/support/ticket:
    get:
      tags: 
       -  KYC Endpoints
      summary: Getting Banking Details
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: per_page
          required: true
          schema:
            type: integer
        - in: query
          name: page
          required: true
          schema:
            type: integer
        
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/ticket"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
    post:
      tags: 
       -  KYC Endpoints
      summary: create Ticket Data
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
        
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/successMessage"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/chat:
    get:
      tags: 
       -  ESCROW Endpoints
      summary: Retrieve user's chat message encrypted in Elliptic Curve Integrated Encryption Scheme (ECIES).
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          required: true
          schema:
            type: integer
        - in: query
          name: checksum
          required: true
          schema:
            type: string
        - in: query
          name: payload
          required: true
          schema:
            type: object
            properties:
              counterparty:
                type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/chatHistory"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
    post:
      tags: 
       -  ESCROW Endpoints
      summary: create chat
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
        
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/successMessage"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/chat/list:
    get:
      tags: 
       -  ESCROW Endpoints
      summary: Retrieve user's chat message encrypted in Elliptic Curve Integrated Encryption Scheme (ECIES) with limit data.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          required: true
          schema:
            type: integer
        - in: query
          name: checksum
          required: true
          schema:
            type: string
        - in: query
          name: payload
          required: true
          schema:
            type: object
            properties:
              counterparty:
                type: string
              limit:
                type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  
                  $ref: "#/components/schemas/chatHistory"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/chat/search:
    get:
      tags: 
       -  ESCROW Endpoints
      summary: Retrieve user's chat message encrypted in Elliptic Curve Integrated Encryption Scheme (ECIES) with limit data.
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          required: true
          schema:
            type: integer
        - in: query
          name: checksum
          required: true
          schema:
            type: string
        - in: query
          name: payload
          required: true
          schema:
            type: object
            properties:
              counterparty:
                type: string
              keyword:
                type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  
                  $ref: "#/components/schemas/chatHistory"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/escrow:
    get:
      tags: 
       -  ESCROW Endpoints
      summary: Retrieve user's chat message encrypted in Elliptic Curve Integrated Encryption Scheme (ECIES).
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          required: true
          schema:
            type: integer
        - in: query
          name: checksum
          required: true
          schema:
            type: string
        - in: query
          name: payload
          required: true
          schema:
            type: object
            properties:
              counterparty:
                type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/chatHistory"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
    post:
      tags: 
       -  ESCROW Endpoints
      summary: create escrow
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
        
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/successEscrow"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
    put:
      tags: 
       -  ESCROW Endpoints
      summary: create escrow
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
        
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/successEscrow"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
    delete:
      tags: 
       -  ESCROW Endpoints
      summary: delete escrow
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          required: true
          schema:
            type: integer
        - in: query
          name: checksum
          required: true
          schema:
            type: string
        - in: query
          name: payload
          required: true
          schema:
            type: object
            properties:
              escrow_id:
                type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/declineEscrow"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/escrow/history/{escrow_id}:
    get:
      tags: 
       -  ESCROW Endpoints
      summary: Retrieve user's chat message encrypted in Elliptic Curve Integrated Encryption Scheme (ECIES).
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: path
          name: escrow_id
          required: true
          schema:
            type: string
        - in: query
          name: nonce
          required: true
          schema:
            type: integer
        - in: query
          name: checksum
          required: true
          schema:
            type: string
        - in: query
          name: payload
          required: true
          schema:
            type: object
            properties:
              escrow_id:
                type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/escrowHistory"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/escrow/pending:
    get:
      tags: 
       -  ESCROW Endpoints
      summary: get pending escrow requests
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          required: true
          schema:
            type: integer
        - in: query
          name: checksum
          required: true
          schema:
            type: string
        
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/escrowHistory"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/forum:
    get:
      tags: 
       -  ESCROW Endpoints
      summary: get forum post
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          required: true
          schema:
            type: integer
        - in: query
          name: checksum
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/forum"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
    post:
      tags: 
       -  ESCROW Endpoints
      summary: Send a forum post
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchema"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/forum"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/referrals:
    get:
      tags: 
       -  ESCROW Endpoints
      summary: get referral info
      security:
        - ApiKeyAuth: []
        - ApiSignAuth: []
      parameters:
        - in: query
          name: nonce
          required: true
          schema:
            type: integer
        - in: query
          name: checksum
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/referrals"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/udf/config:
    get:
      tags: 
       -  UDF/Trading API Endpoints
      summary: get referral info
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/udf"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/udf/symbol:
    get:
      tags: 
       -  UDF/Trading API Endpoints
      summary: return udf info
      parameters:
        - in: query
          name: symbol
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/symbol"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/udf/symbol_info:
    get:
      tags: 
       -  UDF/Trading API Endpoints
      summary: return udf info
      parameters:
        - in: query
          name: symbol
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/symbol"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/udf/history:
    get:
      tags: 
       -  UDF/Trading API Endpoints
      summary: Returns status, volume, open/close/high/low prices and timetamp data from timestamp from until to.
      parameters:
        - in: query
          name: symbol
          required: true
          schema:
            type: string
        - in: query
          name: from
          required: true
          schema:
            type: integer
        - in: query
          name: to
          required: true
          schema:
            type: integer
        - in: query
          name: resolution
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: object
               properties:
                error:
                  $ref: "#/components/schemas/Error"
                result:
                  $ref: "#/components/schemas/history"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
  /private/udf/time:
    get:
      tags: 
       -  UDF/Trading API Endpoints
      summary: Returns status, volume, open/close/high/low prices and timetamp data from timestamp from until to.
      
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               type: string
               example: "unixtime"
        '500':
          description: Internal server error.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method not allowed
        '406':
          description: Not acceptable
        '410':
          description: Gone
        '418':
          description: banned request
        '422':
          description: Unprocessible entity
        '429':
          description: Too many requests
        '503':
          description: Service unavailable
    

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header  # Location (can be "header", "query", or "cookie")
      name: X-API-KEY  # Header name
    ApiSignAuth:  # Optional if API-Sign is separate
      type: apiKey
      in: header  # Location (adjust if different)
      name: X-API-SIGN  # Header name (adjust if different)
  schemas:
    RequestSchema:
      type: object
      properties:
        nonce:
          type: integer
          format: int64
        checksum:
          type: string
        payload:
          oneOf:
          - $ref: '#/components/schemas/spotAccountRequest'
          - $ref: "#/components/schemas/OrderRequest"
          - $ref: "#/components/schemas/leverage"
          - $ref: "#/components/schemas/conversionRequest"
          - $ref: "#/components/schemas/vaultRequest"
          - $ref: "#/components/schemas/callbackRequest"
          - $ref: "#/components/schemas/assetRequest"
          - $ref: "#/components/schemas/depositCryptoRequest"
          - $ref: "#/components/schemas/fiatRequest"
          - $ref: "#/components/schemas/cryptoPutRequest"
          - $ref: "#/components/schemas/bankDetailRequest"
          - $ref: "#/components/schemas/KYCRequest"
          - $ref: "#/components/schemas/KYCFiles"
          - $ref: "#/components/schemas/KYCProof"
          - $ref: "#/components/schemas/ticketRequest"
          - $ref: "#/components/schemas/chatMessage"
          - $ref: "#/components/schemas/escrowRequest"
          - $ref: "#/components/schemas/forumRequest"
    Error:
     type: array
     items:
        type: string
     example: ["Authentication sequence using API Key and API Sign not valid. Please check values"]
    time:
      type: object
      properties:
        unixtime: 
          type: integer
          example: 1571744594571020435
    markets:
      type: array
      items:
        type: object
        properties:
          market:
            type: string
            example: crypto
          status:
            type: string
            example: "available"
    products:
      type: array
      items:
        type: object
        properties:
          product:
            type: string
            example: spot
          status:
            type: string
            example: "beta"
    assets:
      type: object
      properties:
        asset:
          type: string
          description: The asset code (e.g., 'btc' for Bitcoin).
          example: "btc"
        btc_equivalent:
          type: string
          description: The equivalent value in Bitcoin.
          example: "1"
        icon_url:
          type: string
          description: URL to the asset's icon image.
          example: "https://storage.bitwyre.com/assets/btc.png"
        is_deposit_enabled:
          type: boolean
          description: Indicates if deposit is enabled for the asset.
          example: true
        is_trading_enabled:
          type: boolean
          description: Indicates if trading is enabled for the asset.
          example: true
        is_withdraw_enabled:
          type: boolean
          description: Indicates if withdrawal is enabled for the asset.
          example: true
        local_equivalent:
          type: string
          description: The equivalent value in the local currency, if applicable.
          example: ""
        local_reference:
          type: string
          description: Local currency reference for the asset.
          example: ""
        max_withdrawal:
          type: string
          description: The maximum amount that can be withdrawn.
          example: "10"
        min_withdrawal:
          type: string
          description: The minimum amount that can be withdrawn.
          example: "0.001"
        name:
          type: string
          description: The full name of the asset.
          example: "Bitcoin"
        precision:
          type: string
          description: The precision for the asset's value, typically in scientific notation.
          example: "1e-8"
        withdrawal_fee:
          type: string
          description: The fee applied for withdrawals of the asset.
          example: "0.00000001"
    cryptoAssets:
      type: object
      properties:
        asset:
          type: string
          description: The asset code (e.g., 'btc' for Bitcoin).
          example: "btc"
        btc_equivalent:
          type: string
          description: The equivalent value in Bitcoin.
          example: "1.000000000000000"
        icon_url:
          type: string
          description: URL to the asset's icon image.
          example: "https://storage.bitwyre.com/assets/btc.png"
        is_deposit_enabled:
          type: boolean
          description: Indicates if deposit is enabled for the asset.
          example: true
        is_trading_enabled:
          type: boolean
          description: Indicates if trading is enabled for the asset.
          example: true
        is_withdraw_enabled:
          type: boolean
          description: Indicates if withdrawal is enabled for the asset.
          example: true
        local_equivalent:
          type: string
          description: The equivalent value in the local currency, if applicable.
          example: ""
        local_reference:
          type: string
          description: Local currency reference for the asset.
          example: ""
        market_cap_rank:
          type: string
          description: The market cap rank of the asset.
          example: "1"
        market_cap_usd:
          type: string
          description: The market capitalization of the asset in USD.
          example: "420000000000"
        max_withdrawal:
          type: string
          description: The maximum amount that can be withdrawn.
          example: "10"
        min_deposit:
          type: string
          description: The minimum deposit amount.
          example: "0"
        min_order_size:
          type: string
          description: The minimum order size for the asset.
          example: "0.00001"
        min_order_size_increment:
          type: string
          description: The minimum order size increment for the asset.
          example: "0.00001"
        min_price_increment_usd:
          type: string
          description: The minimum price increment in USD.
          example: "0.01"
        min_withdrawal:
          type: string
          description: The minimum amount that can be withdrawn.
          example: "0.001"
        name:
          type: string
          description: The full name of the asset.
          example: "Bitcoin"
        network_list:
          type: array
          items:
            $ref: '#/components/schemas/NetworkInfo'
        precision:
          type: string
          description: The precision for the asset's value, typically in scientific notation.
          example: "1e-8"
        price_to_usd:
          type: string
          description: The price of the asset in USD.
          example: "21950.0000000000"
        withdrawal_fee:
          type: string
          description: The fee applied for withdrawals of the asset.
          example: "0.00000001"
    NetworkInfo:
      type: object
      properties:
        network_name:
          type: string
          description: The name of the network for the asset.
          example: "Bitcoin"
        network_id:
          type: string
          description: The network identifier.
          example: "BTC"
        asset_type:
          type: string
          description: The type of asset (coin or token).
          example: "coin"
        address_tag:
          type: string
          description: Additional address tag, if any.
          example: ""
        token_type:
          type: string
          description: The type of token, if applicable.
          example: ""
        address_regex:
          type: string
          description: The regular expression for validating the network's addresses.
          example: "^(tb1)[a-zA-Z0-9]{39}$|^(m|n)[a-zA-Z0-9]{33}$"
        memo_regex:
          type: string
          description: Regular expression for validating memo/tag if applicable.
          example: ""
        is_contains_address_tag:
          type: boolean
          description: Whether the network requires an address tag.
          example: false
        is_network_deposit_enabled:
          type: boolean
          description: Indicates if deposit is enabled for the network.
          example: true
        is_network_withdraw_enabled:
          type: boolean
          description: Indicates if withdrawal is enabled for the network.
          example: true
        is_default_network:
          type: boolean
          description: Whether this is the default network for the asset.
          example: true
        network_confirmations:
          type: integer
          description: Number of confirmations required for transactions on the network.
          example: 1
        max_withdrawal:
          type: string
          description: Maximum withdrawal limit for the network.
          example: "100"
        min_deposit:
          type: string
          description: Minimum deposit amount for the network.
          example: "0.0001"
        min_withdrawal:
          type: string
          description: Minimum withdrawal amount for the network.
          example: "0"
        withdrawal_fee:
          type: string
          description: Withdrawal fee for the network.
          example: "0"
        deposit_desc:
          type: string
          description: Description or notes related to deposits on this network.
          example: "Ensure to check withdrawal address supports Bitcoin (BTC) chain deposits"
        withdraw_desc:
          type: string
          description: Description or notes related to withdrawals on this network.
          example: "Send only Bitcoin (BTC) asset to this deposit address"
        explorer_address_url:
          type: string
          description: URL to the block explorer for addresses.
          example: "https://live.blockcypher.com/btc/address/"
        explorer_tx_url:
          type: string
          description: URL to the block explorer for transactions.
          example: "https://live.blockcypher.com/btc/tx/"
        notes:
          type: string
          description: Additional notes related to the network.
          example: ""
    Fiat:
      type: object
      properties:
        asset:
          type: string
          description: The asset code (e.g., 'idr' for Indonesian Rupiah).
          example: "idr"
        btc_equivalent:
          type: string
          description: The equivalent value in Bitcoin (empty for fiat currencies like IDR).
          example: ""
        icon_url:
          type: string
          description: URL to the asset's icon image.
          example: "https://storage.bitwyre.com/public/images/coins/raster/IDR.png"
        is_deposit_enabled:
          type: boolean
          description: Indicates if deposit is enabled for the asset.
          example: true
        is_trading_enabled:
          type: boolean
          description: Indicates if trading is enabled for the asset.
          example: true
        is_withdraw_enabled:
          type: boolean
          description: Indicates if withdrawal is enabled for the asset.
          example: true
        local_equivalent:
          type: string
          description: The equivalent value in the local currency, if applicable.
          example: ""
        local_reference:
          type: string
          description: Local currency reference for the asset.
          example: ""
        max_withdrawal:
          type: string
          description: The maximum amount that can be withdrawn.
          example: "100000000"
        min_withdrawal:
          type: string
          description: The minimum amount that can be withdrawn.
          example: "100000"
        name:
          type: string
          description: The full name of the asset.
          example: "Indonesian Rupiah"
        precision:
          type: string
          description: The precision for the asset's value.
          example: "1"
        withdrawal_fee:
          type: string
          description: The fee applied for withdrawals of the asset.
          example: "0"
    pairs:
      type: object
      properties:
        base_asset:
          type: string
          description: The base asset code for the market pair.
          example: "btc"
        best_ask:
          type: string
          description: The current best ask price.
          example: "0"
        best_bid:
          type: string
          description: The current best bid price.
          example: "9000.0"
        change_24hours:
          type: string
          description: The price change in the last 24 hours.
          example: "0"
        forbidden_country:
          type: string
          description: The country where trading this pair is restricted.
          example: "US"
        incremental_price:
          type: string
          description: The minimum price increment for orders.
          example: "0.000001"
        instrument:
          type: string
          description: The full name of the trading instrument (base and quote pair with market).
          example: "btc_usdt_spot"
        is_halt:
          type: boolean
          description: Indicates if trading is halted for the instrument.
          example: false
        is_matching_engine_replaying:
          type: boolean
          description: Indicates if the matching engine is replaying trades.
          example: false
        last:
          type: string
          description: The last traded price.
          example: "60000"
        market:
          type: string
          description: The market type (e.g., crypto).
          example: "crypto"
        minimum_order_size:
          type: string
          description: The minimum order size for the market pair.
          example: "0.00001"
        product:
          type: string
          description: The product type (e.g., spot).
          example: "spot"
        quote_asset:
          type: string
          description: The quote asset code for the market pair.
          example: "usdt"
        size_increment:
          type: string
          description: The minimum size increment for orders.
          example: "0.00001"
        symbol:
          type: string
          description: The symbol representing the market pair (base/quote).
          example: "BTC/USDT"
        volume_base:
          type: string
          description: The trading volume in the base asset over the last 24 hours.
          example: "0.001"
        volume_quote:
          type: string
          description: The trading volume in the quote asset over the last 24 hours.
          example: "60"
    ticker:
      type: object
      properties:
        instrument:
          type: string
          description: The name of the trading instrument (base and quote asset with product type).
          example: "btc_idr_spot"
        asset_base:
          type: string
          description: The base asset code for the instrument.
          example: "btc"
        asset_quote:
          type: string
          description: The quote asset code for the instrument.
          example: "idr"
        high:
          type: string
          description: The highest price in the last 24 hours.
          example: "126989000"
        low:
          type: string
          description: The lowest price in the last 24 hours.
          example: "115201000"
        percent_change:
          type: string
          description: The percentage change in price over the last 24 hours.
          example: "-2.123"
        volume_base:
          type: string
          description: The trading volume in the base asset over the last 24 hours.
          example: "611.66499447"
        volume_quote:
          type: string
          description: The trading volume in the quote asset over the last 24 hours.
          example: "7434324.9431"
        last:
          type: string
          description: The last traded price of the instrument.
          example: "124783000"
        best_bid:
          type: string
          description: The current best bid price for the instrument.
          example: "124761000"
        best_ask:
          type: string
          description: The current best ask price for the instrument.
          example: "124777000"
        timestamp:
          type: integer
          description: The timestamp of the latest data point in Unix nanoseconds.
          example: 1571744594571020435
        market:
          type: string
          description: The market category of the instrument (e.g., crypto).
          example: "crypto"
        is_frozen:
          type: boolean
          description: Indicates if the trading instrument is frozen.
          example: false
    trades:
      type: object
      properties:
        instrument:
          type: string
          description: The trading instrument (base and quote asset with product type).
          example: "btc_usd_spot"
        price:
          type: string
          description: The price at which the trade was executed.
          example: "70000.0"
        side:
          type: integer
          description: The side of the trade, where 1 represents a buy and 0 represents a sell.
          example: 1
        timestamp:
          type: integer
          description: The timestamp of the trade in Unix nanoseconds.
          example: 1617701262147203562
        trade_uuid:
          type: string
          description: The unique identifier of the trade.
          example: "7d0cec66-f130-4fc6-b314-622d394ccec2"
        value:
          type: string
          description: The total value of the trade in the quote asset.
          example: "4900.0"
        volume:
          type: string
          description: The volume traded in the base asset.
          example: "0.07"
    depth:
      type: object
      properties:
        bids:
          type: array
          items:
            type: array
            items:
              type: string
          example: ["124112000", "0.18154050"]
        asks:
          type: array
          items:
            type: array
            items:
              type: string
          example: ["124112000", "0.18154050"]
        is_frozen:
          type: integer
          example: 0
    contract:
      type: object
      properties:
        instrument:
          type: string
          description: The name of the futures contract instrument.
          example: "btcusdtx_usdt_200607F1000000"
        details:
          type: string
          description: Description of the contract, including delivery method, date, and strike price.
          example: "contract for cash delivery of BTC/USD index settled for July 6th, 2020 for the strike price of 10,000 USD"
        pricing_source:
          type: string
          description: The source used for pricing the contract.
          example: "CME Bitcoin Real Time Index"
        bitwyre_index_price:
          type: string
          description: The current Bitwyre index price for the contract.
          example: "11500.00"
        bitwyre_index_price_currency:
          type: string
          description: The currency of the Bitwyre index price.
          example: "USD"
        24h_volume:
          type: string
          description: The trading volume in the last 24 hours.
          example: "800,000,000.00"
        24h_volume_currency:
          type: string
          description: The currency in which the 24-hour trading volume is measured.
          example: "USD"
        open_interest:
          type: string
          description: The total open interest for the contract.
          example: "600,000,000.00"
        interest_rate:
          type: string
          description: The interest rate for the contract.
          example: "0.001%"
        contract_value:
          type: string
          description: The value of one contract in USD.
          example: "1 USD"
        initial_margin_base_value:
          type: string
          description: The initial margin required as a percentage of the contract value.
          example: "1%"
        maintenance_margin_base_value:
          type: string
          description: The maintenance margin required as a percentage of the contract value.
          example: "0.5%"
    fiatMethod:
      type: object
      properties:
        asset:
          type: string
          description: The asset code for the payment method.
          example: "idr"
        fee:
          type: string
          description: The transaction fee associated with the payment method.
          example: "0"
        fee_type:
          type: string
          description: The type of fee (e.g., percentage, fixed). Empty if not applicable.
          example: ""
        is_enabled:
          type: boolean
          description: Indicates if the payment method is enabled.
          example: true
        max_withdrawal:
          type: string
          description: The maximum amount that can be withdrawn using this payment method. Empty if not specified.
          example: ""
        merchant_id:
          type: string
          description: The identifier for the merchant associated with this payment method.
          example: "MANDIRI"
        min_withdrawal:
          type: string
          description: The minimum amount that can be withdrawn using this payment method.
          example: "0"
        payment_type:
          type: string
          description: The type of payment method (e.g., Bank Transfer).
          example: "Bank Transfer"
    insider:
     type: object
     properties:
        email:
          type: string
          description: The user's email address.
          example: "userinsider1.bitwyre@gmail.com"
        email_verified:
          type: integer
          description: Indicates if the user's email is verified (0 for no, 1 for yes).
          example: 0
        has_submitted_kyc:
          type: string
          nullable: true
          description: Indicates if the user has submitted KYC (null if not applicable).
          example: null
        insider:
          type: integer
          description: Indicates if the user is an insider (0 for no, 1 for yes).
          example: 1
        institution:
          type: integer
          description: Indicates if the user represents an institution (0 for no, 1 for yes).
          example: 0
        is_otp_activated:
          type: integer
          description: Indicates if OTP (Two-Factor Authentication) is activated (0 for no, 1 for yes).
          example: 0
        kyc_level:
          type: integer
          description: The user's KYC level.
          example: 0
        master_account:
          type: integer
          description: Indicates if the user has a master account (0 for no, 1 for yes).
          example: 1
        master_account_uuid:
          type: string
          nullable: true
          description: The UUID of the master account, if applicable.
          example: null
        monthly_avg_trading_volumes:
          type: string
          nullable: true
          description: The user's monthly average trading volumes (null if not applicable).
          example: null
        nationality:
          type: string
          description: The user's nationality.
          example: "ID"
        preference_pairs:
          type: string
          nullable: true
          description: The user's preferred trading pairs (null if not specified).
          example: null
        pseudonym:
          type: string
          nullable: true
          description: The user's pseudonym, if applicable.
          example: null
        reference_asset:
          type: string
          nullable: true
          description: The user's reference asset, if applicable.
          example: null
        restricted:
          type: integer
          description: Indicates if the user has any restrictions on their account (0 for no, 1 for yes).
          example: 0
        sub_account:
          type: integer
          description: Indicates if the user has a sub-account (0 for no, 1 for yes).
          example: 0
        subaccount_code:
          type: string
          description: The unique code for the sub-account.
          example: "541ebc38-6bef-4d65-aefd-c3575d4e4a21"
        suspended:
          type: integer
          description: Indicates if the user's account is suspended (0 for no, 1 for yes).
          example: 0
        user_uuid:
          type: string
          description: The unique identifier for the user.
          example: "2952e311-cfc9-412e-9ff3-e5cb8131ed45"
        username:
          type: string
          description: The user's username.
          example: "Insider 1"
    trade:
      type: object
      additionalProperties:
        type: array
        items:
          type: object
          properties:
            exec_price:
              type: number
              format: double
              description: The price at which the execution occurred.
              example: 1.21
            exec_qty:
              type: number
              format: double
              description: The quantity executed in the trade.
              example: 10.0
            exec_type:
              type: integer
              description: The type of execution.
              example: 13
            exec_value:
              type: number
              format: double
              description: The total value of the executed trade.
              example: 12.1
            fee_paid:
              type: number
              format: double
              description: The fee paid for the execution.
              example: -0.015
            fee_paid_asset:
              type: string
              description: The asset in which the fee was paid.
              example: "btc"
            fee_rate:
              type: number
              format: double
              description: The rate of the fee applied.
              example: -0.0015
            fee_type:
              type: integer
              description: The type of fee applied.
              example: 1
            notes:
              type: string
              nullable: true
              description: Any additional notes for the execution.
              example: null
            order_price:
              type: number
              format: double
              description: The price of the order.
              example: 1.21
            order_qty:
              type: number
              format: double
              description: The quantity ordered.
              example: 10.0
            order_remaining:
              type: number
              format: double
              description: The remaining quantity of the order.
              example: 0.0
            order_type:
              type: integer
              description: The type of order (e.g., limit, market).
              example: 2
            side:
              type: integer
              description: The side of the trade, where 1 represents buy and 0 represents sell.
              example: 1
            status:
              type: integer
              description: The status of the order execution.
              example: 2
            timestamp:
              type: integer
              description: The timestamp of the execution in Unix nanoseconds.
              example: 1609027200000000000
            username:
              type: string
              description: The username associated with the execution.
              example: "Insider 1"
    announcement:
      type: object
      properties:
        unixtime:
          type: integer
          example: 1571744594571020435
        announcement:
          type: string
          example: "halting btc_usdt_spot"
    orderTypes:
      type: object
      additionalProperties:
        type: string
        description: The order type description.
      example:
        "1": "Market"
        "2": "Limit"
        "3": "Stop"
        "4": "Stop Limit"
    languages:
      type: array
      items:
        type: object
        properties:
          iso639-2_code:
            type: string
            example: "en"
          language:
            type: string
            example: "English"
    queries:
      type: array
      items:
        type: object
        properties:
          keyword:
            type: string
            example: "btc_usdt_spot"
          url:
            type: string
            example: "https://www.bitwyre.com/terminal/btc_usdt_spot"
    index:
      type: object
      additionalProperties:
        type: array
        items:
          type: object
          properties:
            price: 
             type: string
             example: "400000.0"
            timestamp:
              type: string
              example: "2021-08-13 04:26:34.086636"
            timestamp_integer:
              type: integer
              example: 1628828794
    searchResults:
      type: object
      properties:
        spot:
          type: object
          properties:
            crypto:
              type: object
              additionalProperties:
                type: object
                properties:
                  high:
                    type: string
                    description: The highest price in the last 24 hours.
                    example: "11000"
                  low:
                    type: string
                    description: The lowest price in the last 24 hours.
                    example: "10000"
                  percent_change:
                    type: string
                    description: The percentage change in the last 24 hours.
                    example: "110.0"
                  volume_base:
                    type: string
                    description: The volume traded in the base asset.
                    example: "34"
                  volume_quote:
                    type: string
                    description: The volume traded in the quote asset.
                    example: "267346.0"
                  last:
                    type: string
                    description: The last traded price.
                    example: "10100"
                  best_bid:
                    type: string
                    description: The highest current bid price.
                    example: "10075"
                  best_ask:
                    type: string
                    description: The lowest current ask price.
                    example: "11000"
                  timestamp:
                    type: integer
                    format: int64
                    description: The timestamp of the last update in Unix nanoseconds.
                    example: 1571747594573320135
                  last_trade_price:
                    type: string
                    description: The price of the last trade.
                    example: "10000.0"
                  last_trade_side:
                    type: integer
                    description: The side of the last trade (1 = buy, 0 = sell).
                    example: 1
                  last_trade_uuid:
                    type: string
                    description: The unique identifier for the last trade.
                    example: "752837c7-aec6-41f8-bb07-286f859f2718"
                  last_trade_value:
                    type: string
                    description: The value of the last trade.
                    example: "20000.0"
                  last_trade_volume:
                    type: string
                    description: The volume of the last trade.
                    example: "2.0"
                  last_trade_timestamp:
                    type: integer
                    format: int64
                    description: The timestamp of the last trade in Unix nanoseconds.
                    example: 1571747594573320135
                  bidbook:
                    type: array
                    description: The order book for bids.
                    items:
                      type: array
                      items:
                        type: string
                    example: [["310.0", "5.0"]]
                  askbook:
                    type: array
                    description: The order book for asks.
                    items:
                      type: array
                      items:
                        type: string
                    example: [["400.0", "2.0"]]
    orderLags:
      type: array
      items:
        type: object
        properties:
          bnb_idr_spot:
            type: string
            example: "0"
          btc_idr_spot:
            type: string
            example: "1"
          btc_usdt_spot:
            type: string
            example: "3547408"
          doge_idr_spot:
            type: string
            example: "0"
          eth_idr_spot:
            type: string
            example: "1"
          sol_idr_spot": 
            type: string
            example: "0"
          usdc_idr_spot:
            type: string
            example: "0"
          usdt_idr_spot:
            type: string
            example: "1"
          xrp_idr_spot:
            type: string
            example: "0"
    throughput:
      type: object
      properties:
        Consumer:
          $ref: '#/components/schemas/Consumer'
        CreditRiskAccountManagement:
          $ref: '#/components/schemas/CreditRiskAccountManagement'
        Matching:
          $ref: '#/components/schemas/Matching'
        Producer:
          $ref: '#/components/schemas/Producer'
    Consumer:
      type: array
      items:
        type: object
        properties:
          instrument:
            type: string
          lag:
            type: integer
          max_lag:
            type: integer
          throughput:
            type: string
    CreditRiskAccountManagement:
      type: array
      items:
        type: object
        properties:
          lag:
            type: integer
    Matching:
      type: array
      items:
        type: object
        properties:
          instrument:
            type: string
          lag:
            type: integer
          max_lag:
            type: integer
          throughput:
            type: string
    Producer:
      type: array
      items:
        type: object
        properties:
          instrument:
            type: string
          lag:
            type: integer
          max_lag:
            type: integer
          throughput:
            type: string      
    OTC:
      type: object
      properties:
        ask_price: 
          type: number
          example: 59816.143336500005
        bid_price:
          type: number
          example: 19938.7144455
    conversion:
      type: object
      properties:
        amount:
          type: string
        convert_price:
          type: string
        size:
          type: string
        volatility:
          type: number
    spot_account:
      type: object
      properties:
        asset:
          type: string
        available_balance:
          type: number
          format: float
        constant_multiplier:
          type: integer
        icon_url:
          type: string
        is_deposit_enabled:
          type: boolean
        is_trading_enabled:
          type: boolean
        is_withdraw_enabled:
          type: boolean
        btc_equivalent:
          type: integer
        local_equivalent:
          type: integer
        local_reference:
          type: string
        locked_balance:
          type: integer
        max_withdrawal:
          type: string
        min_withdrawal:
          type: string
        name:
          type: string
        precision:
          type: string
        total_balance:
          type: integer
        type:
          type: string
        usd_equivalent:
          type: integer
        withdrawal_fee:
          type: string
        is_usd_stablecoin:
          type: boolean    
    spotAccountRequest:
      type: object
      properties:
        asset:
          type: string
          description: the asset to be moved from the spot balance to the derivatives account balance
        amount:
          type: integer
          description: the amount of the asset to be moved from the spot balance to the derivatives account balance (in the currency's normal unit e.g bitcoin, ether)
    spotAccountResponse:
      type: object
      properties:
                asset:
                  type: string
                  description: The asset to be transferred.
                amount:
                  type: integer
                  description: The amount of the asset to be transferred.
                to_derivatives:
                  type: boolean
                  description: Whether to transfer the asset to the derivatives account.
                to_spot:
                  type: boolean
                  description: Whether to transfer the asset to the spot account.
    statementResponse:
      type: object
      properties:
        withdrawal:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/statementData"
        deposit:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/statementData"
    statementData:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Universal unique id of the transaction
        tx_id:
          type: string
          description: Crypto transaction id (crypto only). Can be checked using any block explorer
        status:
          type: string
          enum: [waiting, pending, success]
          description: Transaction status
        type:
          type: string
          enum: [fiat, crypto]
          description: Asset type
        provider:
          type: string
          enum: [your_provider_options]  # Replace with actual provider options
          description: Transaction provider
        gross_amount:
          type: string
          format: float
          description: Gross amount of the transaction before the fee
        fee:
          type: string
          format: float
          description: Transaction fee
        nett_amount:
          type: string
          format: float
          description: Nett amount of the transaction after the fee
        network_confirmation:
          type: integer
          description: Confirmation needed to settle the transaction (crypto only)
        submit_time:
          type: string
          format: int64
          description: Unix time in nanoseconds
        success_time:
          type: string
          format: int64
          description: Unix time in nanoseconds
    feeResponse:
      type: object
      additionalProperties:
        type: object
        properties:
          global_fee:
            type: string
          user_fee:
            type: string
    transactionData:
      type: object
      properties:
        account_balance_id:
          type: integer
        address:
          type: string
        amount:
          type: string
          format: float
        asset:
          type: string
        fee:
          type: string
          format: float
        final_balance:
          type: string
          format: float
        notes:
          type: string
        status:
          type: string
          enum: [Cancelled, Pending, Success, Waiting]  # Replace with actual status options
        time:
          type: string
          format: int64
        type:
          type: integer 
    transactions:
      type: object
      properties:
        withdrawal:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/transactionData"
        deposit:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/transactionData"
        clearing:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/transactionData"
    percentages:
      type: object
      additionalProperties:
        type: number
        example: 0.0002
    OrderRequest:
      type: object
      properties:
        clordid:
          type: string
          format: uuid
          description: Client generated UUID string
        instrument:
          type: string
          description: Base asset, quote asset, product filter, delimited with an underscore
        side:
          type: integer
          enum: [1, 2]
          description: Side of order (buy or sell)
        ordtype:
          type: integer
          enum: [1, 2, 3, 4, 19, 20, 21, 22]
          description: Order type
        price:
          type: string
          format: float
          description: Price (mandatory for limit and stop_limit orders)
        stoppx:
          type: string
          format: float
          description: Stop price (mandatory for stop and stop_limit orders)
        orderqty:
          type: string
          format: float
          description: Order quantity for the base asset
        timeinforce:
          type: integer
          description: Order lifetime enforcement
        expiretime:
          type: string
          format: int64
          description: Unix time in nanoseconds (mandatory when timeinforce is set to gtd)
        execinst:
          type: string
          description: Not-yet-supported, reserved for future
        cancelondisconnect:
          type: boolean
          description: Cancel order on disconnection (not supported in REST yet)
    newOrder:
      type: object
      properties:
        AvgPx:
          type: string
          format: float
        LastLiquidityInd:
          type: integer
        LastPx:
          type: string
          format: float
        LastQty:
          type: string
          format: float
        account:
          type: string
          format: uuid
        cancelondisconnect:
          type: integer
        clorderid:
          type: string
          format: uuid
        cumqty:
          type: string
          format: float
        execid:
          type: string
        exectype:
          type: integer
        expiry:
          type: integer
        fill_price:
          type: string
          format: float
        instrument:
          type: string
        leavesqty:
          type: string
          format: float
        orderid:
          type: string
          format: uuid
        orderqty:
          type: string
          format: float
        ordrejreason:
          type: string
        ordstatus:
          type: integer
        ordstatusReqID:
          type: string
          format: uuid
        ordtype:
          type: integer
        origclid:
          type: string
          format: uuid
        price:
          type: string
          format: float
        side:
          type: integer
        stoppx:
          type: string
          format: float
        time_in_force:
          type: integer
        timestamp:
          type: integer
        transacttime:
          type: integer
        value:
          type: string
          format: float
    openOrders:
      type: object
      additionalProperties:
        type: array
        items:
          $ref: "#/components/schemas/newOrder"
    cancelledOrder:
      type: object
      additionalProperties:
        type: array
        items:
          $ref: "#/components/schemas/newOrder"
    orderHistory:
      type: object
      properties:
        btc_usdt_futures:
          type: array
          items:
            type: object
            additionalProperties: true
            properties:
              cancel_order_id:
                type: string
              filled:
                type: string
              instrument:
                type: string
              order_id:
                type: integer
              remaining:
                type: string
              fill_price:
                type: string
              status:
                type: integer
              time:
                type: integer
        meta:
          type: object
          properties:
            has_next:
              type: boolean
            has_prev:
              type: boolean
            next_page:
              type: integer
            page:
              type: integer
            pages:
              type: integer
            prev_page:
              type: integer
            total_count:
              type: integer
    orderJourney:
      type: object
      additionalProperties:
          type: array
          items:
            type: object
            properties:
              cancel_order_id:
                type: string
              qty:
                type: string
              filled:
                type: string
              instrument:
                type: string
              order_id:
                type: string
              remaining:
                type: string
              cancelled:
                type: integer
              accumulated_percentage:
                type: string
              incremental_percentage:
                type: string
              status:
                type: integer
              time:
                type: integer
    trading:
      type: object
      additionalProperties:
        type: array
        items:
          type: object
          properties:
            notification_message:
              type: string
              example: "Notification Message OrderRejected #2"
            timestamp:
              type: integer
              example: 1638408841588082866
    favorites:
      type: array
      items:
        type: object
        additionalProperties:
          type: object
          properties:
              askbook:
                type: array
                items:
                  type: array
                  items:
                    type: string
                    format: float
                example: [["400.0","0.0"]]
              best_ask:
                type: string
                format: float
              best_bid:
                type: string
                format: float
              bidbook:
                type: array
                items:
                  type: array
                  items:
                    type: string
                    format: float
                example: [["400.0","0.0"]]
              high:
                type: string
                format: float
              last:
                type: string
                format: float
              last_trade_price:
                type: string
                format: float
              last_trade_side:
                type: integer
              last_trade_timestamp:
                type: string
                format: int64
              last_trade_uuid:
                type: string
                format: uuid
              last_trade_value:
                type: string
                format: float
              last_trade_volume:
                type: string
                format: float
              low:
                type: string
                format: float
              percent_change:
                type: string
                format: float
              timestamp:
                type: string
                format: int64
              volume_base:
                type: string
                format: float
              volume_quote:
                type: string
                format: float
    derivatives:
      type: object
      properties:
        collateral:
          $ref: "#/components/schemas/accountValue"
        free_collateral:
          $ref: "#/components/schemas/accountValue"
        total_account_value:
          $ref: "#/components/schemas/accountValue"
        unrealized_pnl:
          $ref: "#/components/schemas/accountValue"
        maintenance_margin_requirements:
          type: string
          format: float
        initial_margin_fraction:
          type: string
          format: float
        margin_fraction:
          type: string
          format: float
        open_margin_fraction:
          type: string
          format: float
        liquidating:
          type: integer
        backstop_provider:
          type: integer
    accountValue:
      type: object
      properties:
        usd:
          type: string
          format: float
        idr:
          type: string
          format: float
    leverage:
      type: object
      properties:
        current_leverage:
          type: integer
          example: 1
        instrument:
          type: string
          example: "btc_usdt_spot"
    updatedleverage:
      type: object
      properties:
        message: 
          type: string
          example: "Leverage has been set to 4x successfully"
        new_leverage: 
          type: integer
          example: 4
        old_leverage:
          type: integer
          example: 1
        success:
          type: boolean
          example: true
    meta:
      type: object
      properties:
        has_next:
          type: boolean
        has_prev:
          type: boolean
        next_page:
          type: integer
        prev_page:
          type: integer
        page:
          type: integer
        pages:
          type: integer
        total_count:
          type: integer
    positions:
      type: object
      additionalProperties:
        type: object
        properties:
          instrument:
            type: string
          position_uuid:
            type: string
            format: uuid
          index_name:
            type: string
          side:
            type: integer
          leverage:
            type: integer
          derivatives_type:
            type: integer
          next_funding:
            type: string
            format: float
          next_funding_datetime:
            type: string
            format: float
          expiry:
            type: integer
          margin_fraction:
            type: string
            format: float
          maintenance_margin_requirements:
            type: string
            format: float
          size:
            type: string
            format: float
          notional_size:
            type: string
            format: float
          average_price:
            type: string
            format: float
          bankruptcy_price:
            type: string
            format: float
          liquidation_price:
            type: string
            format: float
          collateral_used:
            type: string
            format: float
          expiry_price:
            type: string
            format: float
          realized_pnl:
            type: string
            format: float
          unrealized_pnl:
            type: string
            format: float
          status:
            type: integer
    reduce:
      type: object
      properties:
        leverage:
          type: integer
        referral_code:
          type: string
        last_price:
          type: string
          format: float
        entry_price:
          type: string
          format: float
        position:
          type: string
        roe:
          type: string
          format: float
    conversionRequest:
      type: object
      properties:
        from_coin:
          type: string
          description: Base asset
        to_coin:
          type: string
          description: Quote asset
        size:
          type: string
          description: Convert size
        convert_uuid:
          type: string
          description: Convert id
        send_callback:
          type: boolean
          description: Whether to send data to URL callback
    conversionResponse:
      type: object
      properties:
        timestamp:
          type: integer
          description: Timestamp in unix
        message:
          type: string
          description: Conversion message
        quote_asset:
          type: string
          description: Paid asset
        quote_quantity:
          type: string
          description: Paid asset quantity
        base_asset:
          type: boolean
          description: Received asset
        base_quantity:
          type: string
          description: Received asset convert quantity
        details:
          type: string
          description: Conversion transaction details
        implied_convert_price:
          type: string
          description: Price conversion rate
        instrument:
          type: string
          description: Base asset, quote asset, product filter, delimited with an underscore
    conversions:
      type: array
      items:
        type: object
        properties:
          timestamp:
            type: string
            format: int64
          base_asset:
            type: string
          convert_uuid:
            type: string
            format: uuid
          quote_asset:
            type: string
          details:
            type: string
          expired:
            type: boolean
          accepted:
            type: boolean
          price:
            type: string
            format: float
          proceeds:
            type: string
            format: float
          size:
            type: string
            format: float
          side:
            type: integer
          success_time:
            type: string
            format: int64
    payment_methods:
      type: object
      properties:
        fiat:
          type: array
          items:
            type: string
        crypto:
          type: array
          items:
            type: string
    convert_status:
      type: object
      properties:
        details:
          type: string
        status:
          type: string
        convert_uuid:
          type: string
          format: uuid
        quote_asset:
          type: string
        quote_quantity:
          type: string
          format: float
        base_asset:
          type: string
        base_quantity:
          type: string
          format: float
        implied_convert_price:
          type: string
          format: float
        instrument:
          type: string
    vaultRequest:
      type: object
      properties:
        asset:
          type: string
          example: "btc"
        network_id:
          type: string
          example: "BTC"
        convert_uuid:
          type: string
          example: "78838a5a-c5bc-4317-a47f-2481a92558ca"
    vaultResponse:
      type: object
      properties:
        asset:
          type: string
        network_name:
          type: string
        deposit_address:
          type: string
        address_tag:
          type: string
        address_tag_name:
          type: string
    callbackRequest:
      type: object
      properties:
        callback_url:
          type: string
          example: "https://api.garuda.to/wallet/deposit/callback"
    callbackResponse:
      type: object
      properties:
        timestamp:
          type: string
        message:
          type: string
    depositInfo:
      type: object
      properties:
        address:
          type: string
        amount:
          type: string
          format: float
        asset:
          type: string
        network_id:
          type: string
        network_name:
          type: string
        no_of_confirmations:
          type: integer
        status:
          type: string
        timestamp:
          type: string
          format: int64
        tx_id:
          type: string
    assetRequest:
      type: object
      properties:
        asset:
          type: string
          description: Asset to withdraw
        amount:
          type: string
          description: Amount to withdraw
        address:
          type: string
          description: Destination address
        network_id:
          type: string
          description: Network of Destination address
        notes:
          type: string
          description: Optional annotation
    verifyWithdraw:
      type: object
      properties:
        id:
          type: string
          example: "4cd1ff2d-cda0-4e9f-b1d5-2b59f1b17154 "
        transaction_id:
          type: string
          example: "4cd1ff2d-cda0-4e9f-b1d5-2b59f1b17154"
        is_verified:
          type: integer
          example: 1
    verifyAsset:
      type: object
      properties:
        withdrawal:
          type: object
          additionalProperties:
            type: array
            items:
              type: object
              properties:
                asset:
                  type: string
                fee:
                  type: string
                  format: float
                gross_amount:
                  type: string
                  format: float
                id:
                  type: string
                  format: uuid
                is_verified:
                  type: integer
                nett_amount:
                  type: string
                  format: float
                network_confirmation:
                  type: integer
                network_id:
                  type: string
                network_name:
                  type: string
                provider:
                  type: string
                status:
                  type: string
                submit_time:
                  type: string
                  format: int64
                success_time:
                  type: integer
                tx_id:
                  type: string
                tx_hash_url:
                  type: string
                verification_uuid:
                  type: string
                  format: uuid
                withdrawal_type:
                  type: string
    fiatData:
      type: object
      properties:
        withdrawal:
          type: object
          additionalProperties:
            type: object
            properties:
              centralized_confirmation:
                type: integer
              fee:
                type: string
              gross_amount:
                type: string
                format: float
              id:
                type: string
                format: uuid
              nett_amount:
                type: string
              provider:
                type: string
              status:
                type: string
              submit_time:
                type: string
                format: int64
              success_time:
                type: integer
              tx_id:
                type: string
              type:
                type: string
              verification_uuid:
                type: string
                format: uuid
    depositCryptoRequest:
      type: object
      properties:
        asset:
          type: string
          example: "xlm"
        network_id:
          type: string
    depositCrypto:
      type: object
      properties:
        deposit:
          type: object
          additionalProperties:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: string
                  address_tag:
                    type: string
                  address_tag_name:
                    type: string
    assetAddress:
      type: object
      properties:
        deposit:
          type: object
          additionalProperties:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                tx_id:
                  type: string
                status:
                  type: string
                provider:
                  type: string
                gross_amount:
                  type: string
                  format: float
                fee:
                  type: string
                  format: float
                nett_amount:
                  type: string
                  format: float
                network_id:
                  type: string
                network_name:
                  type: string
                network_confirmation:
                  type: integer
                submit_time:
                  type: string
                  format: int64
                success_time:
                  type: string
                  format: int64
                url:
                  type: string
    bankTransfer:
      type: object
      additionalProperties:
        type: object
        properties:
          bankTransfer:
            type: object
            properties:
              account:
                type: integer
              bank:
                type: string
              bank_address:
                type: string
              city:
                type: string
              country:
                type: string
              currency:
                type: string
              is_enabled:
                type: integer
              is_gateway:
                type: integer
              name:
                type: string
              notes:
                type: string
              provider:
                type: string
              routing_number:
                type: string
              swift_code:
                type: string
    fiatRequest:
      type: object
      properties:
        asset:
          type: string
        amount:
          type: integer
        provider:
          type: string
        data:
          $ref: "#/components/schemas/payment_methods"
    fiatResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            asset:
              type: string
            confirmed_status:
              type: string
            created_at:
              type: string
              format: date-time
            expired_at:
              type: string
              format: date-time
            fee:
              type: integer
            gross_amount:
              type: integer
            nett_amount:
              type: integer
            status:
              type: string
            submit_time:
              type: string
              format: int64
            time_limit:
              type: integer
            transaction_id:
              type: string
              format: uuid
            va_code:
              type: string
    assetsAddress:
      type: object
      properties:
        deposit:
          type: object
          properties:
            address:
              type: array
              items:
                type: object
                properties:
                  centralized_confirmation:
                    type: integer
                  fee:
                    type: string
                  gross_amount:
                    type: string
                  id:
                    type: string
                  nett_amount:
                    type: string
                  provider:
                    type: string
                  status:
                    type: string
                  submit_time:
                    type: integer
                  success_time:
                    type: integer
                  tx_id:
                    type: string
                  type:
                    type: string
    cancelPendingWithdrawal:
      type: object
      properties:
        withdrawal:
          type: object
          additionalProperties:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                status:
                  type: string
                submit_time:
                  type: string
                  format: int64
                success_time:
                  type: string
                  format: int64
    withdrawAddress:
      type: object 
      additionalProperties:
        type: array
        items:
          type: object
          properties:
            address:
              type: string
              example: "0x89205A3A3b2A69De6Dbf7f01ED13B2108B2c43e7"
            address_name: 
              type: string
              example: "myethaddress1"
            address_tag:
              type: string
            created_at:
              type: string
              example: "30/07/2021, 00:00:00"
    cryptoPutRequest:
      type: object
      properties:
        asset:
          type: string
        address:
          type: string
        address_tag:
          type: string
        network_id:
          type: string
        withdrawal_confirmation_uuid:
          type: string
    successMessage:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "any message"
        timestamp:
          type: integer
          example: 73653767838
    bankDetail:
      type: object
      properties:
        account_nickname:
          type: string
        asset:
          type: string
        bank_account:
          type: integer
        bank_account_name:
          type: string
        bank_name:
          type: string
        details:
          type: string
        id:
          type: string
          format: uuid
        swift_code:
          type: string
    bankDetailRequest:
      type: object
      properties:
        bank_name:
          type: string
        swift_code:
          type: string
        bank_account:
          type: string
        bank_account_name:
          type: string
        address:
          type: string
        details:
          type: string
        account_nickname:
          type: string
        asset:
          type: string
    gateway:
      type: object
      properties:
        payment_gateway_name:
          type: string
        url_payment:
          type: string
        url_callback:
          type: string
    KYC:
      type: object
      properties:
        identity_card_back_scan_uuid:
          type: string
          format: uuid
        identity_card_front_scan_uuid:
          type: string
          format: uuid
        rejection_reason:
          type: string
        selfie_photo_uuid:
          type: string
          format: uuid
        status:
          type: string
    KYCRequest:
      type: object
      properties:
        name:
          type: string
        address:
          type: string
        id_card_type:
          type: integer
        id_card_number:
          type: string
        id_card_country_code:
          type: string
    KYCFiles:
      type: object
      properties:
        type: 
          type: integer
          example: 1
        file:
          type: string
    KYCProof:
      type: object
      properties:
        transaction_id:
          type: string
        file:
          type: string
    ticket:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          priority:
            type: string
          closed_at:
            type: string
            format: date-time
          resolved_at:
            type: string
            format: date-time
          status:
            type: string
          subject:
            type: string
          type:
            type: string
    ticketRequest:
      type: object
      properties:
        issue_type:
          type: integer
          description: Ticket type
        priority:
          type: integer
          description: Ticket priority
        subject:
          type: string
          description: Subject of ticket
        description:
          type: string
          description: Description of ticket
        file:
          type: string
          format: binary
          description: The image attachment file (in .png or .jpg or .jpeg or .pdf)
    chatHistory:
      type: array
      items:
        type: object
        properties:
          from:
            type: string
          message:
            type: string
          timestamp:
            type: string
            format: int64
          to:
            type: string
    chatMessage:
      type: string
    escrowRequest:
      type: object
      properties:
        base_asset:
          type: string
        base_asset_amount:
          type: string
          format: float
        quote_asset:
          type: string
        quote_asset_amount:
          type: string
          format: float
        counterparty:
          type: string
    successEscrow:
      type: object
      properties:
        status:
          type: string
        escrow_id:
          type: string
          format: uuid
        implied_price:
          type: string
          format: float
        instrument:
          type: string
        action:
          type: string
        counterparty:
          type: string
        fee_percentage:
          type: string
          format: float
        fee_amount:
          type: string
          format: float
        order_time:
          type: string
          format: int64
        order_expiry_time:
          type: string
          format: int64
    declineEscrow:
      type: object
      properties:
        status:
          type: string
        escrow_uuid:
          type: string
          format: uuid
        status_reason:
          type: string
    escrowHistory:
      type: object
      properties:
        base_amount:
          type: number
        escrow_uuid:
          type: string
          format: uuid
        counterparty:
          type: string
        counterparty_id:
          type: string
          format: uuid
        fee_amount:
          type: string
          format: float
        fee_percentage:
          type: string
          format: float
        implied_price:
          type: string
          format: float
        instrument:
          type: string
        message:
          type: string
        order_expiry_time:
          type: string
          format: int64
        order_time:
          type: string
          format: int64
        quote_amount:
          type: number
        requester:
          type: string
        requester_id:
          type: string
          format: uuid
        status:
          type: string
        status_reason:
          type: string
    forumRequest:
      type: object
      properties:
        tagged:
          type: string
        poster:
          type: string
        from_time:
          type: string
          format: int64
        to_time:
          type: string
          format: int64
    forum:
      type: object
      properties:
        post:
          type: string
        poster:
          type: string
        tagged:
          type: string
        timestamp:
          type: string
          format: int64
    referrals:
     type: object
     properties:
      total_invited:
        type: integer
        example: 1,
      total_earned:
        $ref: "#/components/schemas/accountValue"
    udf:
      type: object
      properties:
        exchanges:
          type: array
          items:
            type: object
            properties:
              desc:
                type: string
              name:
                type: string
              value:
                type: string
        supported_resolutions:
          type: array
          items:
            type: string
        supports_group_request:
          type: boolean
        supports_marks:
          type: boolean
        supports_search:
          type: boolean
        supports_time:
          type: boolean
        supports_timescale_marks:
          type: boolean
        symbols_types:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string
    symbol:
      type: object
      properties:
        currency_code:
          type: string
        data_status:
          type: string
        description:
          type: string
        exchange:
          type: string
        has_daily:
          type: boolean
        has_empty_bars:
          type: boolean
        has_intraday:
          type: boolean
        has_weekly_and_monthly:
          type: boolean
        intraday_multipliers:
          type: array
          items:
            type: integer
        listed_exchange:
          type: string
        minmov:
          type: integer
        name:
          type: string
        pricescale:
          type: integer
        session:
          type: string
        supported_resolutions:
          type: array
          items:
            type: string
        symbol:
          type: string
        ticker:
          type: string
        timezone:
          type: string
        type:
          type: string
        volume_precision:
          type: integer
    history:
      type: object
      properties:
        c:
          type: array
          items:
            type: number
        h:
          type: array
          items:
            type: number
        l:
          type: array
          items:
            type: number
        o:
          type: array
          items:
            type: number
        s:
          type: string
        t:
          type: array
          items:
            type: integer
        v:
          type: array
          items:
            type: number
          
          
          
          
          
          
          
          
          