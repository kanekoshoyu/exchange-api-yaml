asyncapi: 3.0.0
info:
  title: OKX Websocket API
  version: 2.0.0
  description: >-
    WebSocket endpoints are available for real-time data streaming on OKX  exchange.

  tags:
    - name: Trading Account
    - name: Order Book Trading
    - name: Spread Trading
    - name: Public Data
    - name: Trading Statistics
    - name: Funding Account
    - name: Sub-account
servers:
  Websocket Public Endpoints:
    host: ws.okx.com:8443
    pathname: /ws/v5/public
    protocol: wss
    description: Websocket Public API Request Data
  Websocket Private Endpoints:
    host: ws.okx.com:8443
    pathname: /ws/v5/private
    protocol: wss
    description: Websocket Private API Request Data
    security:
      - $ref: "#/components/securitySchemes/Auth"
  Websocket Business Endpoints:
    host: ws.okx.com:8443
    pathname: /ws/v5/business
    protocol: wss
    description: Websocket Business API Request Data
channels:
  Account:
    description: Private WebSocket channel for operations.
    tags:
      - name: Trading Account
    messages:
      SubscriptionRequest:
        $ref: "#/components/messages/SubscribeRequest"
      SubscriptionResponse:
        $ref: "#/components/messages/SubscribeResponse"
      SubscriptionPushData:
        $ref: "#/components/messages/PushDataResponse"
      ErrorResponse:
        $ref: "#/components/messages/ErrorResponse"
  Positions:
    description: Private WebSocket channel for operations.
    tags:
      - name: Trading Account
    messages:
      PositionRequest:
        $ref: "#/components/messages/PositionRequest"
      PositionResponse:
        $ref: "#/components/messages/PositionResponse"
      PositionpushDataResponse:
        $ref: "#/components/messages/PositionPushDataResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  Balances:
    description: Private WebSocket channel for operations.
    tags:
      - name: Trading Account
    messages:
      PositionRequest:
        $ref: "#/components/messages/BalanceRequest"
      PositionResponse:
        $ref: "#/components/messages/BalanceResponse"
      PositionpushDataResponse:
        $ref: "#/components/messages/BalancePushDataResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  PositionRisk:
    description: Private WebSocket channel for operations.
    tags:
      - name: Trading Account
    messages:
      PositionRequest:
        $ref: "#/components/messages/RiskRequest"
      PositionResponse:
        $ref: "#/components/messages/RiskResponse"
      PositionpushDataResponse:
        $ref: "#/components/messages/RiskPushDataResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  Order:
    description: Private WebSocket channel for operations.
    tags:
      - name: Order Book Trading
    messages:
      PositionRequest:
        $ref: "#/components/messages/OrderRequest"
      PositionResponse:
        $ref: "#/components/messages/OrderResponse"
      PositionpushDataResponse:
        $ref: "#/components/messages/OrderPushDataResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  Fills:
    description: Private WebSocket channel for operations.
    tags:
      - name: Order Book Trading
    messages:
      PositionRequest:
        $ref: "#/components/messages/FillsRequest"
      PositionResponse:
        $ref: "#/components/messages/FillsResponse"
      PositionpushDataResponse:
        $ref: "#/components/messages/FillsPushDataResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  PlaceOrder:
    description: Private WebSocket channel for operations.
    tags:
      - name: Order Book Trading
    messages:
      PositionRequest:
        $ref: "#/components/messages/PlaceOrderRequest"
      PositionResponse:
        $ref: "#/components/messages/PlaceOrderResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  PlaceMultipleOrder:
    description: Place multiple orders
    tags:
      - name: Order Book Trading
    messages:
      PositionRequest:
        $ref: "#/components/messages/PlaceOrderRequest"
      PositionResponse:
        $ref: "#/components/messages/PlaceOrderResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  CancelOrder:
    description: Cancel orders
    tags:
      - name: Order Book Trading
    messages:
      PositionRequest:
        $ref: "#/components/messages/CancelOrderRequest"
      PositionResponse:
        $ref: "#/components/messages/CancelOrderResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  CancelMultiOrder:
    description: Cancel multiple orders
    tags:
      - name: Order Book Trading
    messages:
      PositionRequest:
        $ref: "#/components/messages/CancelOrderRequest"
      PositionResponse:
        $ref: "#/components/messages/CancelOrderResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  AmendOrder:
    description: Amend orders
    tags:
      - name: Order Book Trading
    messages:
      PositionRequest:
        $ref: "#/components/messages/AmendOrderRequest"
      PositionResponse:
        $ref: "#/components/messages/AmendOrderResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  MassCancelOrder:
    description: Cancel all the MMP pending orders of an instrument family.Only applicable to Option in Portfolio Margin mode, and MMP privilege is required.
    tags:
      - name: Order Book Trading
    messages:
      MassCancelRequest:
        $ref: "#/components/messages/MassCancelRequest"
      MassCancelResponse:
        $ref: "#/components/messages/MassCancelResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  AlgoOrders:
    description: Retrieve algo orders (includes trigger order, oco order, conditional order). Data will not be pushed when first subscribed. Data will only be pushed when there are order updates.
    tags:
      - name: Order Book Trading
    messages:
      AlgoOrderRequest:
        $ref: "#/components/messages/AlgoOrdersRequest"
      AlgoOrderCancelResponse:
        $ref: "#/components/messages/AlgoOrderResponse"
      AlgoOrderPushResponse:
        $ref: "#/components/messages/AlgoOrderPushResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  AdvanceAlgoOrders:
    description: Retrieve advance algo orders (including Iceberg order, TWAP order, Trailing order). Data will be pushed when first subscribed. Data will be pushed when triggered by events such as placing/canceling order.
    tags:
      - name: Order Book Trading
    messages:
      AlgoOrderRequest:
        $ref: "#/components/messages/AdvanceAlgoOrdersRequest"
      AlgoOrderCancelResponse:
        $ref: "#/components/messages/AlgoOrderResponse"
      AlgoOrderPushResponse:
        $ref: "#/components/messages/AlgoOrderPushResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  SpotGridOrders:
    description: Retrieve spot grid algo orders. Data will be pushed when triggered by events such as placing/canceling order. It will also be pushed in regular interval according to subscription granularity.
    tags:
      - name: Order Book Trading
    messages:
      AlgoOrderRequest:
        $ref: "#/components/messages/AdvanceAlgoOrdersRequest"
      AlgoOrderCancelResponse:
        $ref: "#/components/messages/AlgoOrderResponse"
      AlgoOrderPushResponse:
        $ref: "#/components/messages/SpotGridPushResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  ContractGridOrders:
    description: Retrieve contract grid algo orders. Data will be pushed when triggered by events such as placing/canceling order. It will also be pushed in regular interval according to subscription granularity.
    tags:
      - name: Order Book Trading
    messages:
      AlgoOrderRequest:
        $ref: "#/components/messages/AdvanceAlgoOrdersRequest"
      AlgoOrderCancelResponse:
        $ref: "#/components/messages/AlgoOrderResponse"
      AlgoOrderPushResponse:
        $ref: "#/components/messages/ContractGridPushResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  GridPositionOrders:
    description: Retrieve contract grid positions. Data will be pushed when triggered by events such as placing/canceling order.Please ignore the empty data.
    tags:
      - name: Order Book Trading
    messages:
      AlgoOrderRequest:
        $ref: "#/components/messages/AdvanceAlgoOrdersRequest"
      AlgoOrderCancelResponse:
        $ref: "#/components/messages/AlgoOrderResponse"
      AlgoOrderPushResponse:
        $ref: "#/components/messages/GridPositionPushResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  GridSuborderOrders:
    description: Retrieve grid sub orders. Data will be pushed when triggered by events such as placing order.Please ignore the empty data.
    tags:
      - name: Order Book Trading
    messages:
      AlgoOrderRequest:
        $ref: "#/components/messages/AdvanceAlgoOrdersRequest"
      AlgoOrderCancelResponse:
        $ref: "#/components/messages/AlgoOrderResponse"
      AlgoOrderPushResponse:
        $ref: "#/components/messages/GridSuborderPushResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  RecurringOrders:
    description: Retrieve recurring buy orders. Data will be pushed when triggered by events. It will also be pushed in regular interval according to subscription granularity.
    tags:
      - name: Order Book Trading
    messages:
      AlgoOrderRequest:
        $ref: "#/components/messages/AdvanceAlgoOrdersRequest"
      AlgoOrderCancelResponse:
        $ref: "#/components/messages/AlgoOrderResponse"
      AlgoOrderPushResponse:
        $ref: "#/components/messages/RecurringOrderResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  CopyTrading:
    description: As a copy trader, receive push notification of copy trading.
    tags:
      - name: Order Book Trading
    messages:
      CopyTradingRequest:
        $ref: "#/components/messages/AlgoOrdersRequest"
      CopyTradingResponse:
        $ref: "#/components/messages/AlgoOrderResponse"
      CopyTradingPushResponse:
        $ref: "#/components/messages/CopyTradingResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  LeadTrading:
    description: The notification when failing to lead trade.
    tags:
      - name: Order Book Trading
    messages:
      LeadTradingRequest:
        $ref: "#/components/messages/AlgoOrdersRequest"
      LeadTradingResponse:
        $ref: "#/components/messages/AlgoOrderResponse"
      LeadTradingPushResponse:
        $ref: "#/components/messages/LeadTradingResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  Tickers:
    description: "Retrieve the last traded price, bid price, ask price and 24-hour trading volume of instruments.The fastest rate is 1 update/100ms. There will be no update if the event is not triggered. The events which can trigger update: trade, the change on best ask/bid."
    tags:
      - name: Order Book Trading
    messages:
      LeadTradingRequest:
        $ref: "#/components/messages/TickersRequest"
      LeadTradingResponse:
        $ref: "#/components/messages/AlgoOrderResponse"
      LeadTradingPushResponse:
        $ref: "#/components/messages/TickersResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  CandleStick:
    description: "Retrieve the candlesticks data of an instrument. the push frequency is the fastest interval 1 second push the data."
    tags:
      - name: Order Book Trading
    messages:
      LeadTradingRequest:
        $ref: "#/components/messages/TickersRequest"
      LeadTradingResponse:
        $ref: "#/components/messages/AlgoOrderResponse"
      LeadTradingPushResponse:
        $ref: "#/components/messages/CandleStickResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  Trades:
    description: "Retrieve the recent trades data. Data will be pushed whenever there is a trade. Every update may aggregate multiple trades.The message is sent only once per taker order, per filled price. The count field is used to represent the number of aggregated matches."
    tags:
      - name: Order Book Trading
    messages:
      LeadTradingRequest:
        $ref: "#/components/messages/TickersRequest"
      LeadTradingResponse:
        $ref: "#/components/messages/AlgoOrderResponse"
      LeadTradingPushResponse:
        $ref: "#/components/messages/TradesResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  AllTrades:
    description: "Retrieve the recent trades data. Data will be pushed whenever there is a trade. Every update contain only one trade."
    tags:
      - name: Order Book Trading
    messages:
      AllTradesRequest:
        $ref: "#/components/messages/TickersRequest"
      AllTradesResponse:
        $ref: "#/components/messages/AlgoOrderResponse"
      AllTradesPushResponse:
        $ref: "#/components/messages/AllTradesResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  OrderBook:
    description: "Retrieve order book data.<br>Use books for 400 depth levels, books5 for 5 depth levels, bbo-tbt tick-by-tick 1 depth level, books50-l2-tbt tick-by-tick 50 depth levels, and books-l2-tbt for tick-by-tick 400 depth levels.<br>books: 400 depth levels will be pushed in the initial full snapshot. Incremental data will be pushed every 100 ms for the changes in the order book during that period of time.<br>books5: 5 depth levels snapshot will be pushed in the initial push. Snapshot data will be pushed every 100 ms when there are changes in the 5 depth levels snapshot.<br>bbo-tbt: 1 depth level snapshot will be pushed in the initial push. Snapshot data will be pushed every 10 ms when there are changes in the 1 depth level snapshot.<br>books-l2-tbt: 400 depth levels will be pushed in the initial full snapshot. Incremental data will be pushed every 10 ms for the changes in the order book during that period of time.<br>books50-l2-tbt: 50 depth levels will be pushed in the initial full snapshot. Incremental data will be pushed every 10 ms for the changes in the order book during that period of time.<br>The push sequence for order book channels within the same connection and trading symbols is fixed as:<br>bbo-tbt -> books-l2-tbt -> books50-l2-tbt -> books -> books5.<br>Users can not simultaneously subscribe to books-l2-tbt and books50-l2-tbt/books"
    tags:
      - name: Order Book Trading
    messages:
      AllTradesRequest:
        $ref: "#/components/messages/TickersRequest"
      AllTradesResponse:
        $ref: "#/components/messages/AlgoOrderResponse"
      AllTradesPushResponse:
        $ref: "#/components/messages/OrderbookResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  OptionTrades:
    description: "Retrieve the recent trades data. Data will be pushed whenever there is a trade. Every update contain only one trade."
    tags:
      - name: Order Book Trading
    messages:
      OptionTradesRequest:
        $ref: "#/components/messages/AlgoOrdersRequest"
      OptionTradesResponse:
        $ref: "#/components/messages/AlgoOrderResponse"
      OptionTradesPushResponse:
        $ref: "#/components/messages/OptionTradesResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  Auction:
    description: "Retrieve call auction details."
    tags:
      - name: Order Book Trading
    messages:
      AuctionRequest:
        action: recieve
        $ref: "#/components/messages/AlgoOrdersRequest"
      AuctionResponse:
        action: send
        $ref: "#/components/messages/AlgoOrderResponse"
      AuctionPushResponse:
        $ref: "#/components/messages/AuctionResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  PlaceOrderSpread:
    description: You can place an order only if you have sufficient funds.
    tags:
      - name: Spread Trading
    messages:
      SpreadOrderRequest:
        action: recieve
        $ref: "#/components/messages/SpreadOrderRequest"
      SpreadOrderResponse:
        action: send
        $ref: "#/components/messages/AlgoOrderResponse"
      SpreadOrderPushResponse:
        $ref: "#/components/messages/SpreadOrderResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  AmendOrderSpread:
    description: Amend an incomplete order.
    tags:
      - name: Spread Trading
    messages:
      SpreadAmendRequest:
        action: recieve
        $ref: "#/components/messages/SpreadAmendOrderRequest"
      SpreadAmendResponse:
        action: send
        $ref: "#/components/messages/SpreadAmendResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  CancelOrderSpread:
    description: cancel an order
    tags:
      - name: Spread Trading
    messages:
      SpreadCancelRequest:
        action: recieve
        $ref: "#/components/messages/SpreadCancelOrderRequest"
      SpreadCancelResponse:
        action: send
        $ref: "#/components/messages/SpreadAmendResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  CancelAllOrderSpread:
    description: cancel all orders
    tags:
      - name: Spread Trading
    messages:
      SpreadCancelRequest:
        action: recieve
        $ref: "#/components/messages/SpreadCancelAllRequest"
      SpreadCancelResponse:
        action: send
        $ref: "#/components/messages/SpreadCancelAllResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  OrderChannel:
    description: Private Order Channel
    tags:
      - name: Spread Trading
    messages:
      OrderChannelRequest:
        action: recieve
        $ref: "#/components/messages/OrderChannelRequest"
      OrderChannelResponse:
        action: send
        $ref: "#/components/messages/OrderChannelResponse"
      OrderChannelPushResponse:
        action: send
        $ref: "#/components/messages/OrderChannelPushResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  TradeChannel:
    description: Private Trade Channel
    tags:
      - name: Spread Trading
    messages:
      TradeChannelRequest:
        action: recieve
        $ref: "#/components/messages/OrderChannelRequest"
      TradeChannelResponse:
        action: send
        $ref: "#/components/messages/OrderChannelResponse"
      TradeChannelPushResponse:
        action: send
        $ref: "#/components/messages/TradeChannelPushResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  OrderBookChannel:
    description: "Retrieve order book data. Available channels:<br>sprd-bbo-tbt: 1 depth level snapshot will be pushed in the initial push. Snapshot data will be pushed every 10 ms when there are changes in the 1 depth level snapshot.<br>sprd-books5: 5 depth levels snapshot will be pushed in the initial push. Snapshot data will be pushed every 100 ms when there are changes in the 5 depth levels snapshot.<br>sprd-books-l2-tbt: 400 depth levels will be pushed in the initial full snapshot. Incremental data will be pushed every 10 ms for the changes in the order book during that period of time.<br>The push sequence for order book channels within the same connection and trading symbols is fixed as: sprd-bbo-tbt -> sprd-books-l2-tbt -> sprd-books5."
    tags:
      - name: Spread Trading
    messages:
      OrderbookChannelRequest:
        action: recieve
        $ref: "#/components/messages/OrderChannelRequest"
      OrderbookChannelResponse:
        action: send
        $ref: "#/components/messages/OrderChannelResponse"
      OrderbookChannelPushResponse:
        $ref: "#/components/messages/OrderbookChannelPushResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  PublicTradeChannel:
    description: Retrieve the recent trades data from sprd-public-trades. Data will be pushed whenever there is a trade. Every update contains only one trade.
    tags:
      - name: Spread Trading
    messages:
      TradeChannelRequest:
        action: recieve
        $ref: "#/components/messages/OrderChannelRequest"
      TradeChannelResponse:
        action: send
        $ref: "#/components/messages/OrderChannelResponse"
      TradeChannelPushResponse:
        action: send
        $ref: "#/components/messages/PublicTradePushResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  PublicTickersChannel:
    description: "Retrieve the last traded price, bid price, ask price. The fastest rate is 1 update/100ms. There will be no update if the event is not triggered. The events which can trigger update: trade, the change on best ask/bid price"
    tags:
      - name: Spread Trading
    messages:
      TradeChannelRequest:
        action: recieve
        $ref: "#/components/messages/OrderChannelRequest"
      TradeChannelResponse:
        action: send
        $ref: "#/components/messages/OrderChannelResponse"
      TradeChannelPushResponse:
        action: send
        $ref: "#/components/messages/PublicTickersPushResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  PublicCandlestickChannel:
    description: Retrieve the candlesticks data of an instrument. The push frequency is the fastest interval 1 second push the data.
    tags:
      - name: Spread Trading
    messages:
      CandlestickRequest:
        action: recieve
        $ref: "#/components/messages/OrderChannelRequest"
      CandlestickResponse:
        action: send
        $ref: "#/components/messages/OrderChannelResponse"
      CandlestickPushResponse:
        action: send
        $ref: "#/components/messages/PublicCandlestickPushResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  InstrumentsChannel:
    description: The instruments will be pushed if there is any change to the instrument’s state (such as delivery of FUTURES, exercise of OPTION, listing of new contracts / trading pairs, trading suspension, etc.)
    tags:
      - name: Public Data
    messages:
      InstrumentRequest:
        action: recieve
        $ref: "#/components/messages/InstrumentRequest"
      InstrumentResponse:
        action: send
        $ref: "#/components/messages/OrderChannelResponse"
      InstrumentPushResponse:
        action: send
        $ref: "#/components/messages/InstrumentPushResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  OpenInterestChannel:
    description: Retrieve the open interest. Data will be pushed every 3 seconds when there are updates.
    tags:
      - name: Public Data
    messages:
      InstrumentRequest:
        action: recieve
        $ref: "#/components/messages/OrderChannelRequest"
      InstrumentResponse:
        action: send
        $ref: "#/components/messages/OrderChannelResponse"
      InstrumentPushResponse:
        action: send
        $ref: "#/components/messages/OpenInterestPushResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  FundingRateChannel:
    description: "Retrieve funding rate. Data will be pushed in 30s to 90s."
    tags:
      - name: Public Data
    messages:
      InstrumentRequest:
        action: recieve
        $ref: "#/components/messages/OrderChannelRequest"
      InstrumentResponse:
        action: send
        $ref: "#/components/messages/OrderChannelResponse"
      FundingratePushResponse:
        action: send
        $ref: "#/components/messages/FundingratePushResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  PriceLimitChannel:
    description: "Retrieve the maximum buy price and minimum sell price of instruments. Data will be pushed every 200ms when there are changes in limits, and will not be pushed when there is no changes on limit."
    tags:
      - name: Public Data
    messages:
      PriceLimitRequest:
        action: recieve
        $ref: "#/components/messages/OrderChannelRequest"
      PriceLimitResponse:
        action: send
        $ref: "#/components/messages/OrderChannelResponse"
      PriceLimitPushResponse:
        action: send
        $ref: "#/components/messages/PriceLimitPushResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  OptionSummaryChannel:
    description: "Retrieve detailed pricing information of all OPTION contracts. Data will be pushed at once."
    tags:
      - name: Public Data
    messages:
      OptionRequest:
        action: recieve
        $ref: "#/components/messages/OrderChannelRequest"
      OptionResponse:
        action: send
        $ref: "#/components/messages/OrderChannelResponse"
      OptionPushResponse:
        action: send
        $ref: "#/components/messages/OptionPushResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  PriceChannel:
    description: "Retrieve the estimated delivery/exercise price of SWAP, FUTURES and OPTION contracts.<br>Only the estimated delivery/exercise price will be pushed an hour before delivery/exercise, and will be pushed if there is any price change."
    tags:
      - name: Public Data
    messages:
      PriceRequest:
        action: recieve
        $ref: "#/components/messages/RiskRequest"
      PriceResponse:
        action: send
        $ref: "#/components/messages/RiskResponse"
      PricePushResponse:
        action: send
        $ref: "#/components/messages/PricePushResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  MarkPriceChannel:
    description: "Retrieve the mark price. Data will be pushed every 200 ms when the mark price changes, and will be pushed every 10 seconds when the mark price does not change."
    tags:
      - name: Public Data
    messages:
      MarkPriceRequest:
        action: recieve
        $ref: "#/components/messages/AlgoOrdersRequest"
      MarkPriceResponse:
        action: send
        $ref: "#/components/messages/AlgoOrderResponse"
      MarkPricePushResponse:
        action: send
        $ref: "#/components/messages/MarkPricePushResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  IndexTickerChannel:
    description: "Retrieve index tickers data. Push data every 100ms if there are any changes, otherwise push once a minute."
    tags:
      - name: Public Data
    messages:
      IndexTickerRequest:
        action: recieve
        $ref: "#/components/messages/AlgoOrdersRequest"
      IndexTickerResponse:
        action: send
        $ref: "#/components/messages/AlgoOrderResponse"
      IndexTickerPushResponse:
        action: send
        $ref: "#/components/messages/PublicTickersPushResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  MarkCandlestick:
    description: "Retrieve the candlesticks data of the mark price. The push frequency is the fastest interval 1 second push the data."
    tags:
      - name: Public Data
    messages:
      MarkCandlestickRequest:
        action: recieve
        $ref: "#/components/messages/AlgoOrdersRequest"
      MarkCandlestickResponse:
        action: send
        $ref: "#/components/messages/AlgoOrderResponse"
      MarkCandlestickPushResponse:
        action: send
        $ref: "#/components/messages/PublicCandlestickPushResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  LiquidationOrders:
    description: "Retrieve the recent liquidation orders. For futures and swaps, each contract will only show a maximum of one order per one-second period. This data doesn’t represent the total number of liquidations on OKX."
    tags:
      - name: Public Data
    messages:
      LiquidationRequest:
        action: recieve
        $ref: "#/components/messages/AlgoOrdersRequest"
      LiquidationResponse:
        action: send
        $ref: "#/components/messages/LiquidationResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  ADL:
    description: "Auto-deleveraging warning channel.<br>In the normal state, data will be pushed once every minute to display the balance of insurance fund and etc.<br>In the warning state or when there is ADL risk (warning/adl), data will be pushed every second to display information such as the real-time decline rate of insurance fund."
    tags:
      - name: Public Data
    messages:
      ADLRequest:
        action: recieve
        $ref: "#/components/messages/AlgoOrdersRequest"
      ADLResponse:
        action: send
        $ref: "#/components/messages/ADLResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  Calender:
    description: "Retrieve the most up-to-date economic calendar data. This endpoint is only applicable to VIP 1 and above users in the trading fee tier."
    tags:
      - name: Public Data
    messages:
      CalenderRequest:
        action: recieve
        $ref: "#/components/messages/CalenderRequest"
      CalenderResponse:
        action: send
        $ref: "#/components/messages/AlgoOrderResponse"
      CalenderPushResponse:
        $ref: "#/components/messages/CalenderPushResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  Deposit:
    description: "A push notification is triggered when a deposit is initiated or the deposit status changes.<br>Supports subscriptions for accounts.<br>If it is a master account subscription, you can receive the push of the deposit info of both the master account and the sub-account.<br>If it is a sub-account subscription, only the push of sub-account deposit info you can receive."
    tags:
      - name: Funding Account
    messages:
      DepositRequest:
        action: recieve
        $ref: "#/components/messages/DepositRequest"
      DepositResponse:
        action: send
        $ref: "#/components/messages/DepositResponse"
      DepositPushResponse:
        $ref: "#/components/messages/DepositPushResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"
  Withdrawal:
    description: "A push notification is triggered when a withdrawal is initiated or the withdrawal status changes.<br>Supports subscriptions for accounts<br>If it is a master account subscription, you can receive the push of the withdrawal info of both the master account and the sub-account.<br>If it is a sub-account subscription, only the push of sub-account withdrawal info you can receive."
    tags:
      - name: Funding Account
    messages:
      withdrawRequest:
        action: recieve
        $ref: "#/components/messages/DepositRequest"
      withdrawResponse:
        action: send
        $ref: "#/components/messages/DepositResponse"
      withdrawPushResponse:
        $ref: "#/components/messages/WithdrawPushResponse"
      errorResponse:
        $ref: "#/components/messages/ErrorResponse"

components:
  securitySchemes:
    Auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  messages:
    SubscribeRequest:
      name: SubscribeRequest
      summary: Request to subscribe or unsubscribe from a channel.
      contentType: application/json
      payload:
        type: object
        required:
          - op
          - args
        properties:
          op:
            type: string
            enum:
              - subscribe
              - unsubscribe
            description: Operation type.
          args:
            type: array
            items:
              type: object
              required:
                - channel
              properties:
                channel:
                  type: string
                  description: Name of the channel.
                  enum:
                    - account
                ccy:
                  type: string
                  description: Currency (optional).
                extraParams:
                  type: object
                  description: Additional configuration.
                  properties:
                    updateInterval:
                      type: integer
                      description: Update interval. `0` for only account events.
                      example: 0
    SubscribeResponse:
      name: SubscribeResponse
      summary: Response for a successful subscription.
      contentType: application/json
      payload:
        type: object
        required:
          - event
          - connId
        properties:
          event:
            type: string
            enum:
              - subscribe
              - unsubscribe
              - error
            description: Event type.
          connId:
            type: string
            description: WebSocket connection ID.
          data:
            type: array
            items:
              type: object
              properties:
                uTime:
                  type: string
                  format: date-time
                  description: Latest account info time (Unix timestamp).
                totalEq:
                  type: string
                  description: Total equity in USD.
                details:
                  type: array
                  items:
                    type: object
                    properties:
                      ccy:
                        type: string
                        description: Currency.
                      eq:
                        type: string
                        description: Equity of the currency.
    ErrorResponse:
      name: ErrorResponse
      summary: Response for an error.
      contentType: application/json
      payload:
        type: object
        properties:
          event:
            type: string
            enum:
              - error
            description: Event type.
          code:
            type: string
            description: Error code.
          msg:
            type: string
            description: Error message.
    PushDataResponse:
      contentType: application/json
      payload:
        type: object
        properties:
          arg:
            type: object
            properties:
              channel:
                type: string
                description: "Channel name"
              uid:
                type: string
                description: "User Identifier"
              data:
                type: array
                items:
                  type: object
                  properties:
                    uTime:
                      type: string
                      description: "The latest time to get account information (millisecond Unix timestamp)"
                    totalEq:
                      type: string
                      description: "The total amount of equity in USD"
                    isoEq:
                      type: string
                      description: "Isolated margin equity in USD (Applicable to Spot and futures mode/Multi-currency margin/Portfolio margin)"
                    adjEq:
                      type: string
                      description: "Adjusted / Effective equity in USD"
                    ordFroz:
                      type: string
                      description: "Margin frozen for pending cross orders in USD (Only applicable to Spot mode/Multi-currency margin)"
                    imr:
                      type: string
                      description: "Initial margin requirement in USD (Applicable to Spot mode/Multi-currency margin/Portfolio margin)"
                    mmr:
                      type: string
                      description: "Maintenance margin requirement in USD (Applicable to Spot mode/Multi-currency margin/Portfolio margin)"
                    borrowFroz:
                      type: string
                      description: "Potential borrowing IMR of the account in USD (Only applicable to Spot mode/Multi-currency margin/Portfolio margin)"
                    mgnRatio:
                      type: string
                      description: "Margin ratio in USD (Applicable to Spot mode/Multi-currency margin/Portfolio margin)"
                    notionalUsd:
                      type: string
                      description: "Notional value of positions in USD (Applicable to Spot mode/Multi-currency margin/Portfolio margin)"
                    upl:
                      type: string
                      description: "Cross-margin info of unrealized profit and loss at the account level in USD (Applicable to Multi-currency margin/Portfolio margin)"
                    details:
                      type: array
                      items:
                        type: object
                        properties:
                          ccy:
                            type: string
                            description: "Currency"
                          eq:
                            type: string
                            description: "Equity of currency"
                          cashBal:
                            type: string
                            description: "Cash Balance"
                          uTime:
                            type: string
                            description: "Update time (Unix timestamp format in milliseconds)"
                          isoEq:
                            type: string
                            description: "Isolated margin equity of currency (Applicable to Spot and futures mode/Multi-currency margin/Portfolio margin)"
                          availEq:
                            type: string
                            description: "Available equity of currency (Applicable to Spot and futures mode/Multi-currency margin/Portfolio margin)"
                          disEq:
                            type: string
                            description: "Discount equity of currency in USD"
                          fixedBal:
                            type: string
                            description: "Frozen balance for Dip Sniper and Peak Sniper"
                          availBal:
                            type: string
                            description: "Available balance of currency"
                          frozenBal:
                            type: string
                            description: "Frozen balance of currency"
                          ordFrozen:
                            type: string
                            description: "Margin frozen for open orders (Applicable to Spot mode/Spot and futures mode/Multi-currency margin)"
                          liab:
                            type: string
                            description: "Liabilities of currency (positive value)"
                          upl:
                            type: string
                            description: "Unrealized profit & loss of all margin and derivatives positions in currency"
                          uplLiab:
                            type: string
                            description: "Liabilities due to Unrealized loss of currency (Applicable to Multi-currency margin/Portfolio margin)"
                          crossLiab:
                            type: string
                            description: "Cross Liabilities of currency (Applicable to Spot mode/Multi-currency margin/Portfolio margin)"
                          isoLiab:
                            type: string
                            description: "Isolated Liabilities of currency (Applicable to Multi-currency margin/Portfolio margin)"
                          rewardBal:
                            type: string
                            description: "Trial fund balance"
                          mgnRatio:
                            type: string
                            description: "Cross margin ratio of currency"
                          imr:
                            type: string
                            description: "Cross initial margin requirement at the currency level"
                          mmr:
                            type: string
                            description: "Cross maintenance margin requirement at the currency level"
                          interest:
                            type: string
                            description: "Interest of currency"
                          twap:
                            type: string
                            description: "System forced repayment (TWAP) indicator"
                          maxLoan:
                            type: string
                            description: "Max loan of currency"
                          eqUsd:
                            type: string
                            description: "Equity USD of currency"
                          borrowFroz:
                            type: string
                            description: "Potential borrowing IMR of currency in USD (Only applicable to Spot mode/Multi-currency margin/Portfolio margin)"
                          notionalLever:
                            type: string
                            description: "Leverage of currency"
                          coinUsdPrice:
                            type: string
                            description: "Price index USD of currency"
                          stgyEq:
                            type: string
                            description: "Strategy equity"
                          isoUpl:
                            type: string
                            description: "Isolated unrealized profit and loss of currency"
                          spotInUseAmt:
                            type: string
                            description: "Spot in use amount"
                          clSpotInUseAmt:
                            type: string
                            description: "User-defined spot risk offset amount"
                          maxSpotInUseAmt:
                            type: string
                            description: "Max possible spot risk offset amount"
                          smtSyncEq:
                            type: string
                            description: "Smart sync equity"
                          spotCopyTradingEq:
                            type: string
                            description: "Spot smart sync equity"
                          spotBal:
                            type: string
                            description: "Spot balance"
                          openAvgPx:
                            type: array
                            items:
                              type: string
                            description: "Spot average cost price"
                          accAvgPx:
                            type: array
                            items:
                              type: string
                            description: "Spot accumulated cost price"
                          spotUpl:
                            type: string
                            description: "Spot unrealized profit and loss"
                          spotUplRatio:
                            type: string
                            description: "Spot unrealized profit and loss ratio"
                          totalPnl:
                            type: string
                            description: "Spot accumulated profit and loss"
                          totalPnlRatio:
                            type: string
                            description: "Spot accumulated profit and loss ratio"
    PositionRequest:
      contentType: application/json
      payload:
        type: object
        required:
          - op
          - args
        properties:
          op:
            type: string
            enum:
              - subscribe
              - unsubscribe
            description: Operation type.
            example: subscribe
          args:
            type: array
            description: List of channels to subscribe to.
            items:
              type: object
              required:
                - channel
                - instType
              properties:
                channel:
                  type: string
                  description: Name of the channel.
                  example: positions
                instType:
                  type: string
                  description: Instrument type.
                  enum:
                    - MARGIN
                    - SWAP
                    - FUTURES
                    - OPTION
                    - ANY
                  example: FUTURES
                instFamily:
                  type: string
                  description: Instrument family (applicable to FUTURES/SWAP/OPTION).
                  example: BTC-USDT
                instId:
                  type: string
                  description: Specific instrument ID.
                  example: BTC-USD-210625
                extraParams:
                  type: object
                  description: Additional configuration parameters.
                  properties:
                    updateInterval:
                      type: integer
                      description: Specifies the interval for data updates. If omitted, pushes data every 5 seconds.
                      enum: [0, 2000, 3000, 4000]
                      example: 2000
    PositionResponse:
      contentType: application/json
      payload:
        type: object
        required:
          - event
        properties:
          event:
            type: string
            description: Type of event for the WebSocket connection.
            enum:
              - subscribe
              - unsubscribe
              - error
            example: subscribe
          arg:
            type: object
            description: Subscribed channel details.
            required:
              - channel
              - instType
            properties:
              channel:
                type: string
                description: Channel name.
                example: positions
              instType:
                type: string
                description: Instrument type.
                enum:
                  - OPTION
                  - FUTURES
                  - SWAP
                  - MARGIN
                  - ANY
                example: FUTURES
              instFamily:
                type: string
                description: Instrument family.
                example: BTC-USD
              instId:
                type: string
                description: Instrument ID.
                example: BTC-USD-220325
          code:
            type: string
            description: Error code, if applicable.
            example: ERR123
          msg:
            type: string
            description: Error message, if applicable.
            example: "Invalid subscription request."
          connId:
            type: string
            description: WebSocket connection ID.
            example: "abc12345xyz"
    PositionPushDataResponse:
      contentType: application/json
      payload:
        type: object
        properties:
          event:
            type: string
            description: Type of the event (subscribe/unsubscribe/error).
            enum: [subscribe, unsubscribe, error]
            example: subscribe
          arg:
            type: object
            description: Successfully subscribed channel details.
            properties:
              channel:
                type: string
                description: Name of the channel.
                example: positions
              uid:
                type: string
                description: User identifier.
                example: user123
              instType:
                type: string
                description: Instrument type.
                enum: [OPTION, FUTURES, SWAP, MARGIN, ANY]
                example: FUTURES
              instFamily:
                type: string
                description: Instrument family.
                example: BTC-USD
              instId:
                type: string
                description: Instrument ID.
                example: BTC-USD-220325
          data:
            type: array
            description: List of subscribed data.
            items:
              type: object
              properties:
                instType:
                  type: string
                  description: Instrument type.
                  example: FUTURES
                mgnMode:
                  type: string
                  description: Margin mode (cross/isolated).
                  example: isolated
                posId:
                  type: string
                  description: Position ID.
                  example: "12345"
                posSide:
                  type: string
                  description: Position side.
                  enum: [long, short, net]
                  example: long
                pos:
                  type: string
                  description: Quantity of positions.
                  example: "1.5"
                baseBal:
                  type: string
                  description: Base currency balance (deprecated for MARGIN Quick Mode).
                  example: "100.0"
                quoteBal:
                  type: string
                  description: Quote currency balance (deprecated for MARGIN Quick Mode).
                  example: "200.0"
                posCcy:
                  type: string
                  description: Position currency, only for MARGIN positions.
                  example: USDT
                avgPx:
                  type: string
                  description: Average open price.
                  example: "40000"
                upl:
                  type: string
                  description: Unrealized profit and loss (mark price).
                  example: "50"
                uplRatio:
                  type: string
                  description: Unrealized PnL ratio (mark price).
                  example: "0.1"
                markPx:
                  type: string
                  description: Latest mark price.
                  example: "40500"
                imr:
                  type: string
                  description: Initial margin requirement (only for cross).
                  example: "500"
                mgnRatio:
                  type: string
                  description: Margin ratio.
                  example: "1.5"
                liab:
                  type: string
                  description: Liabilities (only for MARGIN).
                  example: "1000"
                realizedPnl:
                  type: string
                  description: Realized profit and loss.
                  example: "-25"
                closeOrderAlgo:
                  type: array
                  description: Close position algo orders.
                  items:
                    type: object
                    properties:
                      algoId:
                        type: string
                        description: Algo ID.
                        example: "algo123"
                      slTriggerPx:
                        type: string
                        description: Stop-loss trigger price.
                        example: "39000"
                      tpTriggerPx:
                        type: string
                        description: Take-profit trigger price.
                        example: "41000"
                      closeFraction:
                        type: string
                        description: Fraction of position to close when algo order triggers.
                        example: "1"
                cTime:
                  type: string
                  format: int64
                  description: Creation time (Unix timestamp in milliseconds).
                  example: "1597026383085"
                uTime:
                  type: string
                  format: int64
                  description: Latest adjustment time (Unix timestamp in milliseconds).
                  example: "1597026383085"
                pTime:
                  type: string
                  format: int64
                  description: Push time of position information (Unix timestamp in milliseconds).
                  example: "1597026383085"
    BalanceRequest:
      summary: Subscription request message.
      description: Message to subscribe or unsubscribe from WebSocket channels.
      payload:
        type: object
        properties:
          op:
            type: string
            description: Operation type for the subscription.
            enum: [subscribe, unsubscribe]
            example: subscribe
          args:
            type: array
            description: List of channels to subscribe to.
            items:
              type: object
              properties:
                channel:
                  type: string
                  description: Name of the channel to subscribe to.
                  enum: [balance_and_position]
                  example: balance_and_position
    BalanceResponse:
      summary: WebSocket event message.
      description: Represents subscription, unsubscription, and error events.
      payload:
        type: object
        properties:
          event:
            type: string
            description: Type of WebSocket event.
            enum: [subscribe, unsubscribe, error]
            example: subscribe
          arg:
            type: object
            description: Details of the subscribed channel.
            required:
              - channel
            properties:
              channel:
                type: string
                description: Name of the subscribed channel.
                enum: [balance_and_position]
                example: balance_and_position
          code:
            type: string
            description: Error code if the event is of type `error`.
            example: E1234
          msg:
            type: string
            description: Error message if the event is of type `error`.
            example: Invalid channel name.
          connId:
            type: string
            description: WebSocket connection ID.
            example: abc123
    BalancePushDataResponse:
      summary: Balance and Position Data Message
      description: Contains details of subscribed balance and position data.
      payload:
        type: object
        properties:
          arg:
            type: object
            description: Channel subscription details.
            required:
              - channel
              - uid
            properties:
              channel:
                type: string
                description: Subscribed channel name.
                example: balance_and_position
              uid:
                type: string
                description: User identifier.
                example: user123
          data:
            type: array
            description: Subscribed data details.
            items:
              type: object
              properties:
                pTime:
                  type: string
                  format: date-time
                  description: Push time of balance and position information.
                  example: 1597026383085
                eventType:
                  type: string
                  description: Event type indicating the update reason.
                  enum:
                    [
                      snapshot,
                      delivered,
                      exercised,
                      transferred,
                      filled,
                      liquidation,
                      claw_back,
                      adl,
                      funding_fee,
                      adjust_margin,
                      set_leverage,
                      interest_deduction,
                    ]
                  example: snapshot
                balData:
                  type: object
                  description: Balance data.
                  properties:
                    ccy:
                      type: string
                      description: Currency.
                      example: USD
                    cashBal:
                      type: string
                      description: Cash balance.
                      example: "1000.00"
                    uTime:
                      type: string
                      format: date-time
                      description: Last updated time.
                      example: 1597026383085
                posData:
                  type: object
                  description: Position data.
                  properties:
                    posId:
                      type: string
                      description: Position ID.
                      example: pos123
                    tradeId:
                      type: string
                      description: Last trade ID.
                      example: trade456
                    instId:
                      type: string
                      description: Instrument ID.
                      example: BTC-USD-180213
                    instType:
                      type: string
                      description: Instrument type.
                      example: futures
                    mgnMode:
                      type: string
                      description: Margin mode.
                      enum: [isolated, cross]
                      example: isolated
                    avgPx:
                      type: string
                      description: Average open price.
                      example: "30000.00"
                    ccy:
                      type: string
                      description: Currency used for margin.
                      example: BTC
                    posSide:
                      type: string
                      description: Position side.
                      enum: [long, short, net]
                      example: long
                    pos:
                      type: string
                      description: Quantity of positions.
                      example: "2.0"
                    posCcy:
                      type: string
                      description: Position currency.
                      example: BTC
                    uTime:
                      type: string
                      format: date-time
                      description: Last updated time for position.
                      example: 1597026383085
                trades:
                  type: array
                  description: Details of trades.
                  items:
                    type: object
                    properties:
                      instId:
                        type: string
                        description: Instrument ID.
                        example: BTC-USDT
                      tradeId:
                        type: string
                        description: Trade ID.
                        example: trade789
    RiskRequest:
      summary: Liquidation Warning Subscription Message
      description: Message for subscribing or unsubscribing to liquidation warning updates.
      payload:
        type: object
        properties:
          op:
            type: string
            description: Operation to perform.
            enum: [subscribe, unsubscribe]
            example: subscribe
          args:
            type: array
            description: List of channels to subscribe to.
            items:
              type: object
              required:
                - channel
                - instType
              properties:
                channel:
                  type: string
                  description: Channel name.
                  enum: [liquidation-warning]
                  example: liquidation-warning
                instType:
                  type: string
                  description: Instrument type.
                  enum: [MARGIN, SWAP, FUTURES, OPTION, ANY]
                  example: FUTURES
                instFamily:
                  type: string
                  description: Instrument family (applicable to FUTURES, SWAP, or OPTION).
                  example: BTC-USD
                instId:
                  type: string
                  description: Instrument ID.
                  example: BTC-USDT-230126
    RiskResponse:
      summary: Event Message
      description: Message representing an event like subscription updates or errors.
      payload:
        type: object
        required:
          - event
          - connId
        properties:
          event:
            type: string
            description: Event type.
            enum: [subscribe, unsubscribe, error]
            example: subscribe
          arg:
            type: object
            description: Details of the subscribed channel.
            required:
              - channel
              - instType
            properties:
              channel:
                type: string
                description: Channel name.
                example: balance_and_position
              instType:
                type: string
                description: Instrument type.
                enum: [OPTION, FUTURES, SWAP, MARGIN, ANY]
                example: FUTURES
              instFamily:
                type: string
                description: Instrument family (optional).
                example: BTC-USD
              instId:
                type: string
                description: Instrument ID (optional).
                example: BTC-USDT-230126
          code:
            type: string
            description: Error code (if any).
            example: ERR001
          msg:
            type: string
            description: Error message (if any).
            example: "Invalid subscription request"
          connId:
            type: string
            description: WebSocket connection ID.
            example: "connection-12345"
    RiskPushDataResponse:
      summary: Subscription Message
      description: Message sent when a channel is successfully subscribed.
      payload:
        type: object
        required:
          - arg
          - data
        properties:
          arg:
            type: object
            description: Details of the successfully subscribed channel.
            required:
              - channel
              - uid
              - instType
            properties:
              channel:
                type: string
                description: Channel name.
                example: balance_and_position
              uid:
                type: string
                description: User identifier.
                example: "user123"
              instType:
                type: string
                description: Instrument type.
                enum: [OPTION, FUTURES, SWAP, MARGIN, ANY]
                example: FUTURES
              instFamily:
                type: string
                description: Instrument family.
                example: BTC-USD
              instId:
                type: string
                description: Instrument ID.
                example: BTC-USDT-SWAP
          data:
            type: array
            description: Subscribed data containing position details.
            items:
              type: object
              required:
                - instType
                - mgnMode
                - posId
                - posSide
              properties:
                instType:
                  type: string
                  description: Instrument type.
                  enum: [OPTION, FUTURES, SWAP, MARGIN]
                  example: FUTURES
                mgnMode:
                  type: string
                  description: Margin mode.
                  enum: [cross, isolated]
                  example: isolated
                posId:
                  type: string
                  description: Position ID.
                  example: "12345"
                posSide:
                  type: string
                  description: Position side.
                  enum: [long, short, net]
                  example: long
                pos:
                  type: string
                  description: Quantity of positions.
                  example: "10"
                posCcy:
                  type: string
                  description: Position currency (only applicable to MARGIN positions).
                  example: USD
                instId:
                  type: string
                  description: Instrument ID.
                  example: BTC-USDT-SWAP
                lever:
                  type: string
                  description: Leverage (not applicable to OPTION sellers).
                  example: "10x"
                markPx:
                  type: string
                  description: Mark price.
                  example: "35000.12"
                mgnRatio:
                  type: string
                  description: Margin ratio.
                  example: "0.02"
                ccy:
                  type: string
                  description: Currency used for margin.
                  example: USD
                cTime:
                  type: string
                  format: date-time
                  description: Creation time, Unix timestamp in milliseconds.
                  example: "1597026383085"
                uTime:
                  type: string
                  format: date-time
                  description: Latest time position was adjusted, Unix timestamp in milliseconds.
                  example: "1597026383085"
                pTime:
                  type: string
                  format: date-time
                  description: Push time of positions information, Unix timestamp in milliseconds.
                  example: "1597026383085"
    OrderRequest:
      summary: Order Subscription Message
      description: Message sent for subscribing or unsubscribing to the orders channel.
      payload:
        type: object
        required:
          - op
          - args
        properties:
          op:
            type: string
            description: Operation type, either "subscribe" or "unsubscribe."
            enum: [subscribe, unsubscribe]
            example: subscribe
          args:
            type: array
            description: List of subscribed channels with their details.
            items:
              type: object
              required:
                - channel
                - instType
              properties:
                channel:
                  type: string
                  description: Channel name.
                  enum: [orders]
                  example: orders
                instType:
                  type: string
                  description: Instrument type.
                  enum: [SPOT, MARGIN, SWAP, FUTURES, OPTION, ANY]
                  example: FUTURES
                instFamily:
                  type: string
                  description: Instrument family, applicable to FUTURES, SWAP, or OPTION.
                  example: BTC-USD
                instId:
                  type: string
                  description: Instrument ID.
                  example: BTC-USDT
    OrderResponse:
      summary: Order Subscription Event Message
      payload:
        type: object
        required:
          - event
          - connId
        properties:
          event:
            type: string
            enum: [subscribe, unsubscribe, error]
            example: subscribe
          arg:
            type: object
            required:
              - channel
              - instType
            properties:
              channel:
                type: string
                enum: [orders]
                example: orders
              instType:
                type: string
                enum: [SPOT, MARGIN, SWAP, FUTURES, OPTION, ANY]
                example: FUTURES
              instFamily:
                type: string
                description: Instrument family, applicable to FUTURES/SWAP/OPTION.
                example: BTC-USD
              instId:
                type: string
                description: Instrument ID.
                example: BTC-USDT
          code:
            type: string
            description: Error code if the event is "error."
            example: ERR001
          msg:
            type: string
            description: Error message if the event is "error."
            example: Invalid subscription.
          connId:
            type: string
            description: WebSocket connection ID.
            example: abc123
    OrderPushDataResponse:
      name: OrderSubscribedMessage
      summary: Payload returned upon successful subscription to an order channel.
      contentType: application/json
      payload:
        type: object
        properties:
          arg:
            type: object
            description: Successfully subscribed channel details.
            properties:
              channel:
                type: string
                description: Channel name.
              uid:
                type: string
                description: User Identifier.
              instType:
                type: string
                description: Instrument type.
              instFamily:
                type: string
                description: Instrument family.
              instId:
                type: string
                description: Instrument ID.
            required:
              - channel
              - uid
          data:
            type: array
            description: Subscribed data details.
            items:
              type: object
              properties:
                instType:
                  type: string
                  description: Instrument type.
                instId:
                  type: string
                  description: Instrument ID.
                tgtCcy:
                  type: string
                  enum: [base_ccy, quote_ccy]
                  description: Order quantity unit setting for size.
                ccy:
                  type: string
                  description: Margin currency for cross MARGIN orders.
                ordId:
                  type: string
                  description: Order ID.
                clOrdId:
                  type: string
                  description: Client Order ID as assigned by the client.
                tag:
                  type: string
                  description: Order tag.
                px:
                  type: string
                  description: Price (in coin unit for options, e.g., BTC/ETH).
                pxUsd:
                  type: string
                  description: Options price in USD (applicable only to options).
                pxVol:
                  type: string
                  description: Implied volatility of options order (only for options).
                pxType:
                  type: string
                  enum: [px, pxVol, pxUsd]
                  description: Price type of options.
                sz:
                  type: string
                  description: Original order quantity.
                notionalUsd:
                  type: string
                  description: Estimated national value in USD.
                ordType:
                  type: string
                  enum:
                    - market
                    - limit
                    - post_only
                    - fok
                    - ioc
                    - optimal_limit_ioc
                    - mmp
                    - mmp_and_post_only
                    - op_fok
                  description: Order type.
                side:
                  type: string
                  enum: [buy, sell]
                  description: Order side.
                posSide:
                  type: string
                  enum: [net, long, short]
                  description: Position side.
                tdMode:
                  type: string
                  enum: [cross, isolated, cash]
                  description: Trade mode.
                fillPx:
                  type: string
                  description: Last filled price.
                tradeId:
                  type: string
                  description: Last trade ID.
                fillSz:
                  type: string
                  description: Last filled quantity.
                fillPnl:
                  type: string
                  description: Last filled profit and loss.
                fillTime:
                  type: string
                  description: Last filled time (Unix timestamp in milliseconds).
                state:
                  type: string
                  enum: [canceled, live, partially_filled, filled, mmp_canceled]
                  description: Order state.
                lever:
                  type: string
                  description: Leverage (only applicable to MARGIN/FUTURES/SWAP).
                uTime:
                  type: string
                  format: date-time
                  description: Update time in Unix timestamp (milliseconds).
                cTime:
                  type: string
                  format: date-time
                  description: Creation time in Unix timestamp (milliseconds).
    FillsRequest:
      contentType: application/json
      payload:
        type: object
        properties:
          op:
            type: string
            enum:
              - subscribe
              - unsubscribe
            description: The operation type (either subscribe or unsubscribe).
            example: subscribe
          args:
            type: array
            description: List of channels to subscribe or unsubscribe from.
            items:
              type: object
              properties:
                channel:
                  type: string
                  description: Name of the channel to subscribe or unsubscribe to.
                  example: fills
                instId:
                  type: string
                  description: (Optional) Instrument ID to specify which instrument for the subscription.
                  example: BTC-USD
              required:
                - channel
            minItems: 1
    FillsResponse:
      name: EventMessage
      contentType: application/json
      payload:
        type: object
        properties:
          event:
            type: string
            enum:
              - subscribe
              - unsubscribe
              - error
            description: Event type for subscription, unsubscription, or error notification.
            example: subscribe
          arg:
            type: object
            description: Arguments related to the event.
            properties:
              channel:
                type: string
                description: Name of the channel.
                example: fills
              instId:
                type: string
                description: (Optional) Instrument ID to filter events by instrument.
                example: BTC-USD
            required:
              - channel
          code:
            type: string
            description: (Optional) Error code in case of an error event.
            example: "500"
          msg:
            type: string
            description: (Optional) Error message in case of an error event.
            example: "Internal server error"
          connId:
            type: string
            description: WebSocket connection ID for identifying the client connection.
            example: "abc123xyz"
    FillsPushDataResponse:
      name: EventMessage
      contentType: application/json
      payload:
        type: object
        properties:
          event:
            type: string
            enum:
              - subscribe
              - unsubscribe
            description: Event type for subscription or unsubscription.
            example: subscribe
          arg:
            type: object
            description: Successfully subscribed channel details.
            properties:
              channel:
                type: string
                description: Name of the subscribed channel.
                example: fills
              uid:
                type: string
                description: User Identifier for tracking user subscriptions.
                example: user123
              instId:
                type: string
                description: (Optional) Instrument ID to filter trade data by instrument.
                example: BTC-USD
              data:
                type: array
                description: Array of subscribed trade data details.
                items:
                  type: object
                  properties:
                    instId:
                      type: string
                      description: Instrument ID for the trade.
                      example: BTC-USD
                    fillSz:
                      type: string
                      description: Filled quantity in the trade.
                      example: "0.5"
                    fillPx:
                      type: string
                      description: Last filled price.
                      example: "45000"
                    side:
                      type: string
                      enum:
                        - buy
                        - sell
                      description: Direction of the trade.
                      example: buy
                    ts:
                      type: string
                      description: Filled time in Unix timestamp format (milliseconds).
                      example: "1597026383085"
                    ordId:
                      type: string
                      description: Order ID related to the trade.
                      example: "order123"
                    tradeId:
                      type: string
                      description: The last trade ID in the aggregation of trades.
                      example: "trade5678"
                    execType:
                      type: string
                      enum:
                        - T
                        - M
                      description: Liquidity taker (T) or maker (M).
                      example: T
                    count:
                      type: string
                      description: The count of trades aggregated.
                      example: "5"
    PlaceOrderRequest:
      name: OrderMessage
      contentType: application/json
      payload:
        type: object
        properties:
          id:
            type: string
            description: Unique identifier for the message.
            example: "12345abcd"
          op:
            type: string
            description: Operation type (e.g., order).
            enum:
              - order
            example: order
          args:
            type: array
            description: List of request parameters for the order.
            items:
              type: object
              properties:
                instId:
                  type: string
                  description: Instrument ID (e.g., BTC-USDT).
                  example: BTC-USDT
                tdMode:
                  type: string
                  description: Trade mode (e.g., isolated, cross, cash).
                  enum:
                    - isolated
                    - cross
                    - cash
                    - spot_isolated
                  example: isolated
                ccy:
                  type: string
                  description: Margin currency (only for cross margin orders).
                  example: USDT
                clOrdId:
                  type: string
                  description: Client Order ID.
                  example: "client12345"
                tag:
                  type: string
                  description: Order tag for identification.
                  example: "tag123"
                side:
                  type: string
                  description: Order side (buy or sell).
                  enum:
                    - buy
                    - sell
                  example: buy
                posSide:
                  type: string
                  description: Position side (required in long/short mode).
                  enum:
                    - long
                    - short
                  example: long
                ordType:
                  type: string
                  description: Order type (e.g., market, limit, post_only, fok, ioc).
                  enum:
                    - market
                    - limit
                    - post_only
                    - fok
                    - ioc
                    - optimal_limit_ioc
                    - mmp
                    - mmp_and_post_only
                  example: limit
                sz:
                  type: string
                  description: Quantity to buy or sell.
                  example: "0.5"
                px:
                  type: string
                  description: Order price (only for limit, post_only, fok, ioc orders).
                  example: "45000"
                pxUsd:
                  type: string
                  description: Price in USD (for options).
                  example: "45000"
                pxVol:
                  type: string
                  description: Price based on implied volatility (for options).
                  example: "0.01"
                reduceOnly:
                  type: boolean
                  description: Whether the order can only reduce the position size.
                  example: false
                tgtCcy:
                  type: string
                  description: Order quantity unit (e.g., base_ccy or quote_ccy).
                  example: quote_ccy
                banAmend:
                  type: boolean
                  description: Whether to disallow amendments to the size of SPOT Market Orders.
                  example: false
                quickMgnType:
                  type: string
                  description: Quick margin type (manual, auto_borrow, auto_repay).
                  enum:
                    - manual
                    - auto_borrow
                    - auto_repay
                  example: manual
                stpId:
                  type: string
                  description: Self-trade prevention ID (for preventing self trade).
                  example: "12345"
                stpMode:
                  type: string
                  description: Self-trade prevention mode (e.g., cancel_maker, cancel_taker).
                  enum:
                    - cancel_maker
                    - cancel_taker
                    - cancel_both
                  example: cancel_maker
                expTime:
                  type: string
                  description: Request effective deadline in Unix timestamp format (milliseconds).
                  example: "1597026383085"
    PlaceOrderResponse:
      name: OrderResponseMessage
      contentType: application/json
      payload:
        type: object
        properties:
          id:
            type: string
            description: Unique identifier of the message.
            example: "12345abcd"
          op:
            type: string
            description: Operation type.
            example: "orderResponse"
          code:
            type: string
            description: Error code.
            example: "200"
          msg:
            type: string
            description: Error or status message.
            example: "Order processed successfully."
          data:
            type: array
            description: Array of order-related data.
            items:
              type: object
              properties:
                ordId:
                  type: string
                  description: Order ID.
                  example: "123456789"
                clOrdId:
                  type: string
                  description: Client Order ID as assigned by the client.
                  example: "client12345"
                tag:
                  type: string
                  description: Order tag.
                  example: "orderTag"
                ts:
                  type: string
                  format: date-time
                  description: Timestamp when the order request processing is finished, in Unix timestamp format (milliseconds).
                  example: "1597026383085"
                sCode:
                  type: string
                  description: Order status code (0 means success).
                  example: "0"
                sMsg:
                  type: string
                  description: Rejection or success message of the event execution.
                  example: "Order placed successfully."
          inTime:
            type: string
            format: date-time
            description: Timestamp at WebSocket gateway when the request is received, in Unix timestamp format (microseconds).
            example: "1597026383085123"
          outTime:
            type: string
            format: date-time
            description: Timestamp at WebSocket gateway when the response is sent, in Unix timestamp format (microseconds).
            example: "1597026383085123"
    CancelOrderRequest:
      name: CancelOrderMessage
      contentType: application/json
      payload:
        type: object
        properties:
          id:
            type: string
            description: Unique identifier of the message, provided by the client.
            maxLength: 32
            pattern: "^[a-zA-Z0-9]{1,32}$"
            example: "clientMessage123"
          op:
            type: string
            description: Operation type, in this case, `cancel-order`.
            enum: [cancel-order]
            example: "cancel-order"
          args:
            type: array
            description: Request parameters for canceling an order.
            items:
              type: object
              properties:
                instId:
                  type: string
                  description: Instrument ID.
                  example: "BTC-USDT"
                ordId:
                  type: string
                  description: Order ID. Either `ordId` or `clOrdId` is required. If both are provided, `ordId` will be used.
                  example: "order123456"
                clOrdId:
                  type: string
                  description: Client Order ID as assigned by the client. Either `ordId` or `clOrdId` is required.
                  maxLength: 32
                  pattern: "^[a-zA-Z0-9]{1,32}$"
                  example: "clientOrder123"
    CancelOrderResponse:
      name: CancelOrderResponseMessage
      contentType: application/json
      payload:
        type: object
        properties:
          id:
            type: string
            description: Unique identifier of the message, matching the request message ID.
            example: "clientMessage123"
          op:
            type: string
            description: Operation type, which is `cancel-order`.
            enum: [cancel-order]
            example: "cancel-order"
          code:
            type: string
            description: Error code, if applicable.
            example: "404"
          msg:
            type: string
            description: Error message, if applicable.
            example: "Order not found"
          data:
            type: array
            description: Response data containing details of the processed request.
            items:
              type: object
              properties:
                ordId:
                  type: string
                  description: Order ID.
                  example: "order123456"
                clOrdId:
                  type: string
                  description: Client Order ID as assigned by the client.
                  example: "clientOrder123"
                ts:
                  type: string
                  format: date-time
                  description: Timestamp when the order request processing is finished, in milliseconds.
                  example: "1597026383085"
                sCode:
                  type: string
                  description: Order status code, where `0` means success.
                  example: "0"
                sMsg:
                  type: string
                  description: Status message describing the order result.
                  example: "Order successfully canceled"
          inTime:
            type: string
            format: date-time
            description: Timestamp at WebSocket gateway when the request was received, in microseconds.
            example: "1597026383085123"
          outTime:
            type: string
            format: date-time
            description: Timestamp at WebSocket gateway when the response was sent, in microseconds.
            example: "1597026383085123"
    AmendOrderRequest:
      name: AmendOrderRequestMessage
      contentType: application/json
      payload:
        type: object
        properties:
          id:
            type: string
            description: Unique identifier of the message, provided by the client.
            maxLength: 32
            example: "clientMessage123"
          op:
            type: string
            description: Operation type, which is `amend-order`.
            enum: [amend-order]
            example: "amend-order"
          args:
            type: array
            description: Request parameters for the amend-order operation.
            items:
              type: object
              properties:
                instId:
                  type: string
                  description: Instrument ID.
                  example: "BTC-USDT"
                cxlOnFail:
                  type: boolean
                  description: Whether the order should be automatically canceled if the amendment fails. Default is `false`.
                  default: false
                  example: true
                ordId:
                  type: string
                  description: Order ID. Either `ordId` or `clOrdId` is required. If both are provided, `ordId` will be used.
                  example: "order123456"
                clOrdId:
                  type: string
                  description: Client Order ID as assigned by the client.
                  example: "clientOrder123"
                reqId:
                  type: string
                  description: Client Request ID for order amendment.
                  maxLength: 32
                  example: "amendReq456"
                newSz:
                  type: string
                  description: New quantity after amendment. Must be greater than 0. Either `newSz` or `newPx` is required.
                  example: "2.5"
                newPx:
                  type: string
                  description: New price after amendment.
                  example: "45000"
                newPxUsd:
                  type: string
                  description: New price in USD for options orders. Only one of `newPx`, `newPxUsd`, or `newPxVol` should be provided.
                  example: "300"
                newPxVol:
                  type: string
                  description: New implied volatility for options orders, where 1 represents 100%. Only one of `newPx`, `newPxUsd`, or `newPxVol` should be provided.
                  example: "0.5"
                expTime:
                  type: string
                  format: date-time
                  description: Effective deadline for the request, in milliseconds.
                  example: "1597026383085"
    AmendOrderResponse:
      name: AmendOrderResponseMessage
      contentType: application/json
      payload:
        type: object
        properties:
          id:
            type: string
            description: Unique identifier of the message, matching the request ID for correlation.
            example: "clientMessage123"
          op:
            type: string
            description: Operation type, which is `amend-order`.
            enum: [amend-order]
            example: "amend-order"
          code:
            type: string
            description: Error code, if applicable.
            example: "400"
          msg:
            type: string
            description: Error message or status message for the response.
            example: "Invalid order ID"
          data:
            type: array
            description: Data returned for the amend-order operation.
            items:
              type: object
              properties:
                ordId:
                  type: string
                  description: Order ID.
                  example: "order123456"
                clOrdId:
                  type: string
                  description: Client Order ID as assigned by the client.
                  example: "clientOrder123"
                ts:
                  type: string
                  format: date-time
                  description: Timestamp when the order request was processed, in milliseconds.
                  example: "1597026383085"
                reqId:
                  type: string
                  description: Client Request ID for the order amendment.
                  example: "amendReq456"
                sCode:
                  type: string
                  description: Order status code. `0` means success.
                  example: "0"
                sMsg:
                  type: string
                  description: Status message for the order amendment.
                  example: "Order amendment successful"
          inTime:
            type: string
            format: date-time
            description: Timestamp at the WebSocket gateway when the request was received, in microseconds.
            example: "1597026383085123"
          outTime:
            type: string
            format: date-time
            description: Timestamp at the WebSocket gateway when the response was sent, in microseconds.
            example: "1597026383085123"
    MassCancelRequest:
      summary: Mass cancel request message
      description: |
        This message is used to send a mass-cancel request. 
        The `id` field acts as a unique identifier for the request and will be returned in the response message.
      contentType: application/json
      payload:
        type: object
        required:
          - id
          - op
          - args
        properties:
          id:
            type: string
            description: |
              Unique identifier of the message provided by the client. 
              It will be returned in the response message for identifying the corresponding request.
            pattern: "^[a-zA-Z0-9]{1,32}$"
          op:
            type: string
            description: |
              Operation type.
              Allowed value: `mass-cancel`
            enum:
              - mass-cancel
          args:
            type: array
            description: Request parameters
            items:
              type: object
              required:
                - instType
              properties:
                instType:
                  type: string
                  description: Instrument type
                  enum:
                    - OPTION
                instFamily:
                  type: string
                  description: Instrument family
                lockInterval:
                  type: integer
                  description: |
                    Lock interval in milliseconds. The range should be [0, 10,000]. 
                    Default is 0. Set it to "0" to unlock immediately.
                    Error `54008` will be thrown if an order is placed during the lock interval, 
                    which is different from `51034` triggered when MMP is reached.
                  minimum: 0
                  maximum: 10000
    MassCancelResponse:
      description: Mass cancel response
      contentType: application/json
      payload:
        type: object
        required:
          - id
          - op
          - code
          - msg
        properties:
          id:
            type: string
            description: Unique identifier of the message corresponding to the request.
          op:
            type: string
            description: Operation that triggered the error.
          code:
            type: string
            description: Error code representing the specific issue encountered.
          msg:
            type: string
            description: Human-readable error message providing details about the issue.
          data:
            type: array
            description: Additional data related to the error.
            items:
              type: object
              properties:
                result:
                  type: boolean
                  description: Result of the request. `true` if successful, otherwise `false`.
    AlgoOrdersRequest:
      description: |
        This message is used to subscribe or unsubscribe to algo orders channels.
        The `op` field specifies whether the request is a subscription or an unsubscription.
      contentType: application/json
      payload:
        type: object
        required:
          - op
          - args
        properties:
          op:
            type: string
            description: Operation type, either `subscribe` or `unsubscribe`.
            enum:
              - subscribe
              - unsubscribe
          args:
            type: array
            description: List of subscribed channels.
            items:
              type: object
              required:
                - channel
                - instType
              properties:
                channel:
                  type: string
                  description: Name of the channel.
                  enum:
                    - orders-algo
                instType:
                  type: string
                  description: Instrument type.
                  enum:
                    - SPOT
                    - MARGIN
                    - SWAP
                    - FUTURES
                    - ANY
                instFamily:
                  type: string
                  description: |
                    Instrument family. Applicable only to `FUTURES`, `SWAP`, or `OPTION`.
                instId:
                  type: string
                  description: Instrument ID.
    AlgoOrderResponse:
      summary: Event response message
      description: |
        This message is used to confirm events such as `subscribe`, `unsubscribe`, or report an `error`.
        It also contains details about the channel and additional metadata such as error codes and WebSocket connection ID.
      contentType: application/json
      payload:
        type: object
        required:
          - event
          - connId
        properties:
          event:
            type: string
            description: Event type.
            enum:
              - subscribe
              - unsubscribe
              - error
          arg:
            type: object
            description: Details of the subscribed channel (only present for `subscribe` or `unsubscribe` events).
            required:
              - channel
              - instType
            properties:
              channel:
                type: string
                description: Name of the channel.
              instType:
                type: string
                description: Instrument type.
                enum:
                  - SPOT
                  - MARGIN
                  - SWAP
                  - FUTURES
                  - ANY
              instFamily:
                type: string
                description: |
                  Instrument family. Applicable only for `FUTURES`, `SWAP`, or `OPTION`.
              instId:
                type: string
                description: Instrument ID.
          code:
            type: string
            description: Error code (only present for `error` events).
          msg:
            type: string
            description: Error message (only present for `error` events).
          connId:
            type: string
            description: Unique WebSocket connection ID.
    AlgoOrderPushResponse:
      summary: Response parameters when data is pushed.
      contentType: application/json
      payload:
        type: object
        description: Subscribed channel response containing detailed order information and additional metadata.
        required:
          - channel
          - uid
          - instType
        properties:
          channel:
            type: string
            description: Name of the subscribed channel.
          uid:
            type: string
            description: Unique identifier for the user.
          instType:
            type: string
            description: Type of instrument.
            enum:
              - SPOT
              - MARGIN
              - SWAP
              - FUTURES
          instFamily:
            type: string
            description: Instrument family. Applicable only for certain instrument types.
          instId:
            type: string
            description: Instrument ID.
          data:
            type: array
            description: Subscribed data.
            items:
              type: object
              properties:
                instType:
                  type: string
                  description: Type of instrument.
                instId:
                  type: string
                  description: Instrument ID.
                ccy:
                  type: string
                  description: |
                    Margin currency. Only applicable to cross-margin orders in Spot and Futures modes.
                ordId:
                  type: string
                  description: Latest order ID. Deprecated.
                ordIdList:
                  type: array
                  items:
                    type: string
                  description: List of order IDs.
                algoId:
                  type: string
                  description: Algo ID.
                clOrdId:
                  type: string
                  description: Client Order ID assigned by the client.
                sz:
                  type: string
                  description: |
                    Quantity to buy or sell.
                    - SPOT/MARGIN: Unit of currency.
                    - FUTURES/SWAP/OPTION: Unit of contract.
                ordType:
                  type: string
                  description: Order type.
                  enum:
                    - conditional
                    - oco
                    - trigger
                side:
                  type: string
                  description: Order side.
                  enum:
                    - buy
                    - sell
                posSide:
                  type: string
                  description: |
                    Position side. Applicable only to FUTURES/SWAP.
                  enum:
                    - net
                    - long
                    - short
                tdMode:
                  type: string
                  description: Trade mode.
                  enum:
                    - cross
                    - isolated
                    - cash
                tgtCcy:
                  type: string
                  description: |
                    Order quantity unit setting for `sz`. Applicable to SPOT Market Orders.
                    Default is `quote_ccy` for buy, `base_ccy` for sell.
                  enum:
                    - base_ccy
                    - quote_ccy
                lever:
                  type: string
                  description: Leverage (0.01 to 125). Applicable only to MARGIN/FUTURES/SWAP.
                state:
                  type: string
                  description: Order status.
                  enum:
                    - live
                    - effective
                    - canceled
                    - order_failed
                    - partially_failed
                    - partially_effective
                tpTriggerPx:
                  type: string
                  description: Take-profit trigger price.
                tpTriggerPxType:
                  type: string
                  description: Take-profit trigger price type.
                  enum:
                    - last
                    - index
                    - mark
                tpOrdPx:
                  type: string
                  description: Take-profit order price.
                slTriggerPx:
                  type: string
                  description: Stop-loss trigger price.
                slTriggerPxType:
                  type: string
                  description: Stop-loss trigger price type.
                  enum:
                    - last
                    - index
                    - mark
                slOrdPx:
                  type: string
                  description: Stop-loss order price.
                triggerPx:
                  type: string
                  description: Trigger price.
                triggerPxType:
                  type: string
                  description: Trigger price type.
                  enum:
                    - last
                    - index
                    - mark
                ordPx:
                  type: string
                  description: Order price for the trigger order.
                last:
                  type: string
                  description: Last filled price while placing the order.
                actualSz:
                  type: string
                  description: Actual order quantity.
                actualPx:
                  type: string
                  description: Actual order price.
                notionalUsd:
                  type: string
                  description: Estimated notional value in USD of the order.
                tag:
                  type: string
                  description: Order tag.
                actualSide:
                  type: string
                  description: |
                    Actual trigger side. Applicable to `oco` and `conditional` orders.
                triggerTime:
                  type: string
                  format: int64
                  description: Trigger time in Unix timestamp format (milliseconds).
                reduceOnly:
                  type: boolean
                  description: Whether the order can only reduce the position size.
                failCode:
                  type: string
                  description: |
                    Failure reason for algo order trigger. Empty for `effective/canceled` state.
                algoClOrdId:
                  type: string
                  description: Client Algo Order ID assigned by the client.
                reqId:
                  type: string
                  description: Client Request ID for order amendment. Empty if no amendment.
                amendResult:
                  type: string
                  description: Result of amending the order.
                  enum:
                    - -1
                    - 0
                amendPxOnTriggerType:
                  type: string
                  description: Whether to enable Cost-price SL for split TPs.
                  enum:
                    - 0
                    - 1
                attachAlgoOrds:
                  type: array
                  items:
                    type: object
                    description: Attached SL/TP orders info.
                    properties:
                      attachAlgoClOrdId:
                        type: string
                        description: Client-supplied Algo ID for attached TP/SL order.
                      tpTriggerPx:
                        type: string
                        description: Take-profit trigger price.
                      tpTriggerPxType:
                        type: string
                        description: Take-profit trigger price type.
                        enum:
                          - last
                          - index
                          - mark
                      tpOrdPx:
                        type: string
                        description: Take-profit order price.
                      slTriggerPx:
                        type: string
                        description: Stop-loss trigger price.
                      slTriggerPxType:
                        type: string
                        description: Stop-loss trigger price type.
                        enum:
                          - last
                          - index
                          - mark
                      slOrdPx:
                        type: string
                        description: Stop-loss order price.
                linkedOrd:
                  type: object
                  description: Linked TP order details. Applicable to SL order from OCO.
                  properties:
                    ordId:
                      type: string
                      description: Order ID.
                cTime:
                  type: string
                  format: int64
                  description: Creation time in Unix timestamp format (milliseconds).
                uTime:
                  type: string
                  format: int64
                  description: Update time in Unix timestamp format (milliseconds).
                isTradeBorrowMode:
                  type: boolean
                  description: Whether currency borrowing is enabled automatically.
                chaseType:
                  type: string
                  description: Chase type. Applicable to chase orders.
                chaseVal:
                  type: string
                maxChaseType:
                  type: string
                  description: Maximum chase type. Applicable to chase orders.
                maxChaseVal:
                  type: string
                  description: Maximum chase value. Applicable to chase orders.
    AdvanceAlgoOrdersRequest:
      description: |
        This message is used to subscribe or unsubscribe to advance algo orders channels.
        The `op` field specifies whether the request is a subscription or an unsubscription.
      contentType: application/json
      payload:
        type: object
        required:
          - op
          - args
        properties:
          op:
            type: string
            description: Operation type, either `subscribe` or `unsubscribe`.
            enum:
              - subscribe
              - unsubscribe
          args:
            type: array
            description: List of subscribed channels.
            items:
              type: object
              required:
                - channel
                - instType
              properties:
                channel:
                  type: string
                  description: Name of the channel.
                  enum:
                    - orders-algo
                instType:
                  type: string
                  description: Instrument type.
                  enum:
                    - SPOT
                    - MARGIN
                    - SWAP
                    - FUTURES
                    - ANY
                instFamily:
                  type: string
                  description: |
                    Instrument family. Applicable only to `FUTURES`, `SWAP`, or `OPTION`.
                instId:
                  type: string
                  description: Instrument ID.
                algoId:
                  type: string
                  description: Algo ID.
    SpotGridPushResponse:
      summary: Grid Orders Spot Message
      description: Represents grid order data for spot market trading.
      payload:
        type: object
        properties:
          arg:
            type: object
            properties:
              channel:
                type: string
                description: Subscribed channel name.
                example: "grid-orders-spot"
              instType:
                type: string
                description: Instrument type.
                example: "ANY"
              uid:
                type: string
                description: User identifier.
                example: "44705892343619584"
          data:
            type: array
            items:
              type: object
              properties:
                algoClOrdId:
                  type: string
                  description: Client-supplied ID for the algo order.
                  example: ""
                algoId:
                  type: string
                  description: Unique identifier for the algorithmic order.
                  example: "568028283477164032"
                activeOrdNum:
                  type: string
                  description: Number of active grid orders.
                  example: "10"
                algoOrdType:
                  type: string
                  description: Type of the algorithmic order.
                  example: "grid"
                annualizedRate:
                  type: string
                  description: Annualized return rate.
                  example: "0"
                arbitrageNum:
                  type: string
                  description: Arbitrage number.
                  example: "0"
                baseSz:
                  type: string
                  description: Initial base currency size.
                  example: "0"
                cTime:
                  type: string
                  format: date-time
                  description: Creation time in Unix timestamp.
                  example: "1681700496249"
                cancelType:
                  type: string
                  description: Cancelation type.
                  example: "0"
                curBaseSz:
                  type: string
                  description: Current base currency size.
                  example: "0"
                curQuoteSz:
                  type: string
                  description: Current quote currency size.
                  example: "25"
                floatProfit:
                  type: string
                  description: Floating profit.
                  example: "0"
                gridNum:
                  type: string
                  description: Total number of grids.
                  example: "10"
                gridProfit:
                  type: string
                  description: Profit from the grid.
                  example: "0"
                instId:
                  type: string
                  description: Instrument ID.
                  example: "BTC-USDT"
                instType:
                  type: string
                  description: Instrument type.
                  example: "SPOT"
                investment:
                  type: string
                  description: Total investment in the grid.
                  example: "25"
                maxPx:
                  type: string
                  description: Maximum price level for the grid.
                  example: "5000"
                minPx:
                  type: string
                  description: Minimum price level for the grid.
                  example: "400"
                pTime:
                  type: string
                  format: date-time
                  description: Execution time in Unix timestamp.
                  example: "1682416738467"
                perMaxProfitRate:
                  type: string
                  description: Maximum profit rate per grid.
                  example: "1.14570215"
                perMinProfitRate:
                  type: string
                  description: Minimum profit rate per grid.
                  example: "0.0991200440528634356837"
                pnlRatio:
                  type: string
                  description: Profit and loss ratio.
                  example: "0"
                profit:
                  type: string
                  description: Total profit.
                  example: "0"
                quoteSz:
                  type: string
                  description: Initial quote currency size.
                  example: "25"
                rebateTrans:
                  type: array
                  description: Rebate information.
                  items:
                    type: object
                    properties:
                      rebate:
                        type: string
                        description: Rebate amount.
                        example: "0"
                      rebateCcy:
                        type: string
                        description: Currency of the rebate.
                        example: "BTC"
                runPx:
                  type: string
                  description: Current running price.
                  example: "30031.7"
                runType:
                  type: string
                  description: Run type.
                  example: "1"
                triggerParams:
                  type: array
                  description: Parameters for starting and stopping grid orders.
                  items:
                    type: object
                    properties:
                      triggerAction:
                        type: string
                        description: Trigger action.
                        example: "start"
                      triggerStrategy:
                        type: string
                        description: Trigger strategy.
                        example: "instant"
                      delaySeconds:
                        type: string
                        description: Delay in seconds.
                        example: "0"
                      triggerType:
                        type: string
                        description: Trigger type.
                        example: "auto"
                      triggerTime:
                        type: string
                        description: Trigger time.
                        example: ""
                singleAmt:
                  type: string
                  description: Amount for a single grid order.
                  example: "0.00101214"
                slTriggerPx:
                  type: string
                  description: Stop-loss trigger price.
                  example: ""
                state:
                  type: string
                  description: Current state of the grid order.
                  example: "running"
                stopResult:
                  type: string
                  description: Result of the stop action.
                  example: "0"
                stopType:
                  type: string
                  description: Stop type.
                  example: "2"
                tag:
                  type: string
                  description: Metadata tag.
                  example: ""
                totalAnnualizedRate:
                  type: string
                  description: Total annualized return rate.
                  example: "0"
                totalPnl:
                  type: string
                  description: Total profit and loss.
                  example: "0"
                tpTriggerPx:
                  type: string
                  description: Take-profit trigger price.
                  example: ""
                tradeNum:
                  type: string
                  description: Number of trades.
                  example: "0"
                uTime:
                  type: string
                  format: date-time
                  description: Last updated time in Unix timestamp.
                  example: "1682406665527"
                profitSharingRatio:
                  type: string
                  description: Ratio for profit sharing.
                  example: ""
                copyType:
                  type: string
                  description: Copy type.
                  example: "0"
    ContractGridPushResponse:
      summary: Update on Algo Order
      description: Details of the algo order updates.
      contentType: application/json
      payload:
        type: object
        properties:
          arg:
            type: object
            description: Successfully subscribed channel
            properties:
              channel:
                type: string
                description: Channel name
              instType:
                type: string
                description: Instrument type
              uid:
                type: string
                description: User ID
          data:
            type: array
            description: Subscribed data
            items:
              type: object
              properties:
                algoId:
                  type: string
                  description: Algo ID
                algoClOrdId:
                  type: string
                  description: Client-supplied Algo ID
                instType:
                  type: string
                  description: Instrument type
                instId:
                  type: string
                  description: Instrument ID
                cTime:
                  type: string
                  format: date-time
                  description: Algo order created time, Unix timestamp in milliseconds
                uTime:
                  type: string
                  format: date-time
                  description: Algo order updated time, Unix timestamp in milliseconds
                algoOrdType:
                  type: string
                  description: Algo order type
                contract_grid:
                  type: object
                  properties:
                    state:
                      type: string
                      enum:
                        [
                          starting,
                          running,
                          stopping,
                          no_close_position,
                          stopped,
                        ]
                      description: Algo order state
                    rebateTrans:
                      type: array
                      description: Rebate transfer info
                      items:
                        type: object
                        properties:
                          rebate:
                            type: string
                            description: Rebate amount
                          rebateCcy:
                            type: string
                            description: Rebate currency
                    triggerParams:
                      type: array
                      description: Trigger parameters
                      items:
                        type: object
                        properties:
                          triggerAction:
                            type: string
                            enum: [start, stop]
                            description: Trigger action
                          triggerStrategy:
                            type: string
                            enum: [instant, price, rsi]
                            description: Trigger strategy
                          delaySeconds:
                            type: string
                            description: Delay seconds after action triggered
                          triggerTime:
                            type: string
                            format: date-time
                            description: Actual action triggered time
                          triggerType:
                            type: string
                            enum: [manual, auto]
                            description: Actual action triggered type
                          timeframe:
                            type: string
                            enum: [3m, 5m, 15m, 30m, 1H, 4H, 1D]
                            description: K-line type (valid for RSI trigger strategy)
                          thold:
                            type: integer
                            minimum: 1
                            maximum: 100
                            description: Threshold (valid for RSI trigger strategy)
                          triggerCond:
                            type: string
                            enum: [cross_up, cross_down, above, below, cross]
                            description: Trigger condition (valid for RSI trigger strategy)
                          timePeriod:
                            type: string
                            description: Time Period (valid for RSI trigger strategy)
                          triggerPx:
                            type: string
                            description: Trigger Price (valid for price trigger strategy)
                          stopType:
                            type: string
                            description: Stop type
                          maxPx:
                            type: string
                            description: Upper price of price range
                          minPx:
                            type: string
                            description: Lower price of price range
                          gridNum:
                            type: string
                            description: Grid quantity
                          runType:
                            type: string
                            enum: [1, 2]
                            description: "Grid type (1: Arithmetic, 2: Geometric)"
                          tpTriggerPx:
                            type: string
                            description: Take-profit trigger price
                          slTriggerPx:
                            type: string
                            description: Stop-loss trigger price
                          tradeNum:
                            type: string
                            description: The number of trades executed
                          arbitrageNum:
                            type: string
                            description: The number of arbitrages executed
                          singleAmt:
                            type: string
                            description: Amount per grid
                          perMinProfitRate:
                            type: string
                            description: Estimated minimum profit margin per grid
                          perMaxProfitRate:
                            type: string
                            description: Estimated maximum profit margin per grid
                          runPx:
                            type: string
                            description: Price at launch
                          totalPnl:
                            type: string
                            description: Total P&L
                          pnlRatio:
                            type: string
                            description: P&L ratio
                          investment:
                            type: string
                            description: Accumulated investment amount
                          gridProfit:
                            type: string
                            description: Grid profit
                          floatProfit:
                            type: string
                            description: Variable P&L
                          totalAnnualizedRate:
                            type: string
                            description: Total annualized rate
                          annualizedRate:
                            type: string
                            description: Grid annualized rate
                          cancelType:
                            type: string
                            description: Algo order stop reason
                          direction:
                            type: string
                            enum: [long, short, neutral]
                            description: Contract grid type
                          basePos:
                            type: boolean
                            description: Whether to open a position when the strategy is activated
                          sz:
                            type: string
                            description: Used margin based on USDT
                          lever:
                            type: string
                            description: Leverage
                          actualLever:
                            type: string
                            description: Actual Leverage
                          liqPx:
                            type: string
                            description: Estimated liquidation price
                          ordFrozen:
                            type: string
                            description: Margin used by pending orders
                          availEq:
                            type: string
                            description: Available margin
                          eq:
                            type: string
                            description: Total equity of strategy account
                          activeOrdNum:
                            type: string
                            description: Total count of pending sub orders
                          tag:
                            type: string
                            description: Order tag
                          profitSharingRatio:
                            type: string
                            description: Profit sharing ratio
                          copyType:
                            type: string
                            description: Profit sharing order type
                          tpRatio:
                            type: string
                            description: Take profit ratio
                          slRatio:
                            type: string
                            description: Stop loss ratio
                          fee:
                            type: string
                            description: Accumulated fee
                          fundingFee:
                            type: string
                            description: Accumulated funding fee
                          pTime:
                            type: string
                            format: date-time
                            description: Push time of algo grid information
    GridPositionPushResponse:
      contentType: "application/json"
      description: "Message containing real-time updates for an algo order."
      payload:
        type: "object"
        properties:
          arg:
            type: "object"
            description: "Successfully subscribed channel details."
            properties:
              channel:
                type: "string"
                description: "Channel name."
              uid:
                type: "string"
                description: "User Identifier."
              algoId:
                type: "string"
                description: "Algo Order ID."
          data:
            type: "array"
            description: "Subscribed data array containing algo order details."
            items:
              type: "object"
              properties:
                algoId:
                  type: "string"
                  description: "Algo ID."
                algoClOrdId:
                  type: "string"
                  description: "Client-supplied Algo ID."
                instType:
                  type: "string"
                  description: "Instrument type."
                instId:
                  type: "string"
                  description: "Instrument ID."
                cTime:
                  type: "string"
                  description: "Algo order creation time (Unix timestamp in ms)."
                uTime:
                  type: "string"
                  description: "Algo order last update time (Unix timestamp in ms)."
                avgPx:
                  type: "string"
                  description: "Average open price."
                ccy:
                  type: "string"
                  description: "Margin currency."
                lever:
                  type: "string"
                  description: "Leverage applied to the position."
                liqPx:
                  type: "string"
                  description: "Estimated liquidation price."
                posSide:
                  type: "string"
                  description: "Position side (e.g., net)."
                pos:
                  type: "string"
                  description: "Quantity of positions."
                mgnMode:
                  type: "string"
                  description: "Margin mode (cross or isolated)."
                  enum: ["cross", "isolated"]
                mgnRatio:
                  type: "string"
                  description: "Margin ratio."
                imr:
                  type: "string"
                  description: "Initial margin requirement."
                mmr:
                  type: "string"
                  description: "Maintenance margin requirement."
                upl:
                  type: "string"
                  description: "Unrealized profit and loss."
                uplRatio:
                  type: "string"
                  description: "Unrealized profit and loss ratio."
                last:
                  type: "string"
                  description: "Latest traded price."
                notionalUsd:
                  type: "string"
                  description: "Notional value of positions in USD."
                adl:
                  type: "string"
                  description: "Auto decrease line, divided into 5 levels."
                markPx:
                  type: "string"
                  description: "Mark price."
                pTime:
                  type: "string"
                  description: "Push time of positions information (Unix timestamp in ms)."
    GridSuborderPushResponse:
      contentType: "application/json"
      description: "Message containing real-time updates for an algo order and sub-orders."
      payload:
        type: "object"
        properties:
          arg:
            type: "object"
            description: "Successfully subscribed channel details."
            properties:
              channel:
                type: "string"
                description: "Channel name."
              uid:
                type: "string"
                description: "User Identifier."
              algoId:
                type: "string"
                description: "Algo Order ID."
          data:
            type: "array"
            description: "Subscribed data array containing algo order and sub-order details."
            items:
              type: "object"
              properties:
                algoId:
                  type: "string"
                  description: "Algo ID."
                algoClOrdId:
                  type: "string"
                  description: "Client-supplied Algo ID."
                instType:
                  type: "string"
                  description: "Instrument type."
                instId:
                  type: "string"
                  description: "Instrument ID."
                algoOrdType:
                  type: "string"
                  description: "Algo order type (grid, contract_grid)."
                  enum: ["grid", "contract_grid"]
                groupId:
                  type: "string"
                  description: "Group ID."
                ordId:
                  type: "string"
                  description: "Sub order ID."
                cTime:
                  type: "string"
                  description: "Sub order created time (Unix timestamp in ms)."
                uTime:
                  type: "string"
                  description: "Sub order last update time (Unix timestamp in ms)."
                tdMode:
                  type: "string"
                  description: "Sub order trade mode (margin or non-margin)."
                  enum: ["cross", "isolated", "cash"]
                tag:
                  type: "string"
                  description: "Order tag."
                ordType:
                  type: "string"
                  description: "Sub order type (market, limit, ioc)."
                  enum: ["market", "limit", "ioc"]
                sz:
                  type: "string"
                  description: "Sub order quantity to buy or sell."
                state:
                  type: "string"
                  description: "Sub order state."
                  enum:
                    [
                      "canceled",
                      "live",
                      "partially_filled",
                      "filled",
                      "cancelling",
                    ]
                side:
                  type: "string"
                  description: "Sub order side (buy/sell)."
                  enum: ["buy", "sell"]
                px:
                  type: "string"
                  description: "Sub order price."
                fee:
                  type: "string"
                  description: "Sub order fee amount."
                feeCcy:
                  type: "string"
                  description: "Sub order fee currency."
                rebate:
                  type: "string"
                  description: "Sub order rebate amount."
                rebateCcy:
                  type: "string"
                  description: "Sub order rebate currency."
                avgPx:
                  type: "string"
                  description: "Sub order average filled price."
                accFillSz:
                  type: "string"
                  description: "Sub order accumulated fill quantity."
                posSide:
                  type: "string"
                  description: "Sub order position side (net)."
                pnl:
                  type: "string"
                  description: "Sub order profit and loss."
                ctVal:
                  type: "string"
                  description: "Contract value (only for FUTURES/SWAP/OPTION)."
                lever:
                  type: "string"
                  description: "Leverage applied to the sub order."
                pTime:
                  type: "string"
                  description: "Push time of sub-order information (Unix timestamp in ms)."
    RecurringOrderResponse:
      contentType: "application/json"
      description: Message containing real-time updates for algo orders, including recurring buy details.
      payload:
        type: object
        properties:
          arg:
            type: "object"
            description: "Successfully subscribed channel details."
            properties:
              channel:
                type: "string"
                description: "Channel name."
              instType:
                type: "string"
                description: "Instrument type."
              algoId:
                type: "string"
                description: "Algo Order ID."
              uid:
                type: "string"
                description: "User ID."
          data:
            type: "array"
            description: "Subscribed data array containing algo order and recurring buy details."
            items:
              type: "object"
              properties:
                algoId:
                  type: "string"
                  description: "Algo ID."
                algoClOrdId:
                  type: "string"
                  description: "Client-supplied Algo ID."
                instType:
                  type: "string"
                  description: "Instrument type."
                cTime:
                  type: "string"
                  description: "Algo order created time (Unix timestamp in ms)."
                uTime:
                  type: "string"
                  description: "Algo order last updated time (Unix timestamp in ms)."
                algoOrdType:
                  type: "string"
                  description: "Algo order type (recurring)."
                  enum: ["recurring"]
                state:
                  type: "string"
                  description: "Algo order state."
                  enum: ["running", "stopping", "stopped", "pause"]
                stgyName:
                  type: "string"
                  description: "Custom name for trading bot (max 40 characters)."
                recurringList:
                  type: "array"
                  description: "List of recurring buy information."
                  items:
                    type: "object"
                    properties:
                      ccy:
                        type: "string"
                        description: "Recurring buy currency (e.g. BTC)."
                      ratio:
                        type: "string"
                        description: 'Proportion of recurring currency assets (e.g., "0.2" for 20%).'
                      totalAmt:
                        type: "string"
                        description: "Accumulated quantity in the recurring buy currency."
                      profit:
                        type: "string"
                        description: "Profit in the unit of investment currency (e.g., USDT)."
                      avgPx:
                        type: "string"
                        description: "Average price of recurring buy (quote currency is investmentCcy)."
                      px:
                        type: "string"
                        description: "Current market price (quote currency is investmentCcy)."
                period:
                  type: "string"
                  description: "Period for recurring buy."
                  enum: ["monthly", "weekly", "daily", "hourly"]
                recurringDay:
                  type: "string"
                  description: "Recurring buy date (e.g., day of month, week, or cycle)."
                recurringHour:
                  type: "string"
                  description: "Recurring buy hour for hourly period (e.g., 4 for every 4 hours)."
                recurringTime:
                  type: "string"
                  description: "Recurring buy time (range: 0-23)."
                timeZone:
                  type: "string"
                  description: "UTC time zone (range: -12 to 14)."
                amt:
                  type: "string"
                  description: "Quantity invested per cycle."
                investmentAmt:
                  type: "string"
                  description: "Accumulated quantity invested."
                investmentCcy:
                  type: "string"
                  description: "Investment currency unit (USDT or USDC)."
                  enum: ["USDT", "USDC"]
                nextInvestTime:
                  type: "string"
                  description: "Next investment time (Unix timestamp in ms)."
                totalPnl:
                  type: "string"
                  description: "Total profit and loss."
                totalAnnRate:
                  type: "string"
                  description: "Total annualized rate of yield."
                pnlRatio:
                  type: "string"
                  description: "Rate of yield."
                mktCap:
                  type: "string"
                  description: "Market value in unit of USDT."
                cycles:
                  type: "string"
                  description: "Accumulated recurring buy cycles."
                tag:
                  type: "string"
                  description: "Order tag."
                pTime:
                  type: "string"
                  description: "Push time of algo order information (Unix timestamp in ms)."
    CopyTradingResponse:
      contentType: "application/json"
      description: "Message containing real-time updates for copy trading positions and events."
      payload:
        type: "object"
        properties:
          arg:
            type: "object"
            description: "Successfully subscribed channel details."
            properties:
              channel:
                type: "string"
                description: "Channel name."
              uid:
                type: "string"
                description: "User Identifier."
              instType:
                type: "string"
                description: "Instrument type."
          data:
            type: "array"
            description: "Subscribed data array containing copy trading events and position details."
            items:
              type: "object"
              properties:
                instType:
                  type: "string"
                  description: "Instrument type."
                infoType:
                  type: "string"
                  description: "Information type for the copy trading event."
                  enum:
                    - "1" # open copy position successfully for complete fill
                    - "2" # close copy position for complete fill
                    - "3" # more than customized total stop loss amount
                    - "4" # the lead trader cancels copy trader
                    - "5" # copy trading failed, insufficient account balance
                    - "6" # copy trading failed for fixed amount mode, copy amount less than the value of one contract
                    - "7" # copy trading failed for ratio copy mode, the number of copying less than 1 contract
                    - "8" # copy trading failed, more than customized copy total amount
                    - "9" # copy trading failed due to slippage protection
                    - "12" # fail to close copy position
                subPosId:
                  type: "string"
                  description: "Copy position ID."
                uniqueCode:
                  type: "string"
                  description: "Lead trader unique code."
                instId:
                  type: "string"
                  description: "Instrument ID."
                lever:
                  type: "string"
                  description: "Leverage for the copy position."
                avgPx:
                  type: "string"
                  description: "Average filled price for the copy position."
                ccy:
                  type: "string"
                  description: "Currency used for the copy position."
                side:
                  type: "string"
                  description: "Side of the copy position."
                  enum:
                    - "buy"
                    - "sell"
                posSide:
                  type: "string"
                  description: "Position side."
                  enum:
                    - "long"
                    - "short"
                    - "net"
                slTotalAmt:
                  type: "string"
                  description: "Total stop loss for the trader."
                rmThold:
                  type: "string"
                  description: "The balance threshold below which the lead trader can remove the copy trader."
                minNotional:
                  type: "string"
                  description: "A contract value in USDT."
                copyTotalAmt:
                  type: "string"
                  description: "Total amount of the copy position."
                slippageRatio:
                  type: "string"
                  description: "Slippage ratio for the copy trading position."
                maxLeadTraderNum:
                  type: "string"
                  description: "Maximum number of lead traders per day."
    LeadTradingResponse:
      contentType: "application/json"
      description: "Message containing real-time updates for lead trading positions and failure events."
      payload:
        type: "object"
        properties:
          arg:
            type: "object"
            description: "Successfully subscribed channel details."
            properties:
              channel:
                type: "string"
                description: "Channel name."
              uid:
                type: "string"
                description: "User Identifier."
              instType:
                type: "string"
                description: "Instrument type."
          data:
            type: "array"
            description: "Subscribed data array containing lead trading events and position details."
            items:
              type: "object"
              properties:
                instType:
                  type: "string"
                  description: "Instrument type."
                infoType:
                  type: "string"
                  description: "Information type for the lead trading event."
                  enum:
                    - "1" # lead trading failed due to touch max position limitation
                    - "2" # lead trading failed due to touch the maximum daily number of lead trading
                    - "3" # lead trading failed due to USDT equity less than the minimum USDT equity
                subPosId:
                  type: "string"
                  description: "Lead position ID."
                uniqueCode:
                  type: "string"
                  description: "Lead trader unique code."
                instId:
                  type: "string"
                  description: "Instrument ID."
                side:
                  type: "string"
                  description: "Side of the lead position."
                  enum:
                    - "buy"
                    - "sell"
                posSide:
                  type: "string"
                  description: "Position side of the lead position."
                  enum:
                    - "long"
                    - "short"
                    - "net"
                maxLeadTraderNum:
                  type: "string"
                  description: "Maximum daily number of lead trading allowed."
                minLeadEq:
                  type: "string"
                  description: "Minimum USDT equity required for lead trading."
    TickersRequest:
      contentType: "application/json"
      description: "Message for subscribing and unsubscribing from channels related to instruments."
      payload:
        type: "object"
        properties:
          op:
            type: "string"
            description: "Operation type for subscription or unsubscription."
            enum:
              - "subscribe"
              - "unsubscribe"
          args:
            type: "array"
            description: "List of subscribed channels."
            items:
              type: "object"
              properties:
                channel:
                  type: "string"
                  description: "Channel name."
                  enum:
                    - "tickers"
                instId:
                  type: "string"
                  description: "Instrument ID for the channel subscription."
    TickersResponse:
      contentType: "application/json"
      description: "Message for subscribing to ticker channels and receiving real-time data for instruments."
      payload:
        type: "object"
        properties:
          channel:
            type: "string"
            description: "Channel name, e.g., tickers."
          instId:
            type: "string"
            description: "Instrument ID for the ticker."
          data:
            type: "array"
            description: "List of subscribed data for the instrument."
            items:
              type: "object"
              properties:
                instType:
                  type: "string"
                  description: "Instrument type."
                instId:
                  type: "string"
                  description: "Instrument ID."
                last:
                  type: "string"
                  description: "Last traded price."
                lastSz:
                  type: "string"
                  description: "Last traded size. 0 represents no trading volume."
                askPx:
                  type: "string"
                  description: "Best ask price."
                askSz:
                  type: "string"
                  description: "Best ask size."
                bidPx:
                  type: "string"
                  description: "Best bid price."
                bidSz:
                  type: "string"
                  description: "Best bid size."
                open24h:
                  type: "string"
                  description: "Open price in the past 24 hours."
                high24h:
                  type: "string"
                  description: "Highest price in the past 24 hours."
                low24h:
                  type: "string"
                  description: "Lowest price in the past 24 hours."
                volCcy24h:
                  type: "string"
                  description: "24h trading volume in quote currency (or base currency for derivatives)."
                vol24h:
                  type: "string"
                  description: "24h trading volume in base currency (or number of contracts for derivatives)."
                sodUtc0:
                  type: "string"
                  description: "Open price in UTC 0 timezone."
                sodUtc8:
                  type: "string"
                  description: "Open price in UTC 8 timezone."
                ts:
                  type: "string"
                  description: "Ticker data generation time, Unix timestamp format in milliseconds."
    CandleStickResponse:
      contentType: "application/json"
      description: "Message for subscribing to candlestick channels and receiving real-time candlestick data for instruments."
      payload:
        type: "object"
        properties:
          channel:
            type: "string"
            description: "Channel name, e.g., candlesticks."
          instId:
            type: "string"
            description: "Instrument ID for the candlestick data."
          data:
            type: "array"
            description: "List of candlestick data for the instrument."
            items:
              type: "object"
              properties:
                ts:
                  type: "string"
                  description: "Opening time of the candlestick in Unix timestamp format (milliseconds)."
                o:
                  type: "string"
                  description: "Open price."
                h:
                  type: "string"
                  description: "Highest price during the candlestick period."
                l:
                  type: "string"
                  description: "Lowest price during the candlestick period."
                c:
                  type: "string"
                  description: "Close price."
                vol:
                  type: "string"
                  description: "Trading volume in base currency (or number of contracts for derivatives)."
                volCcy:
                  type: "string"
                  description: "Trading volume in quote currency (or base currency for derivatives)."
                volCcyQuote:
                  type: "string"
                  description: "Trading volume in quote currency (e.g., USDT for BTC-USDT)."
                confirm:
                  type: "string"
                  enum: ["0", "1"]
                  description: "State of the candlestick: 0 for uncompleted, 1 for completed."
    TradesResponse:
      contentType: "application/json"
      description: "Message for subscribing to aggregated trade channels and receiving real-time trade data for instruments."
      payload:
        type: "object"
        properties:
          channel:
            type: "string"
            description: "Channel name for the trade subscription (e.g., aggregated trades)."
          instId:
            type: "string"
            description: "Instrument ID for the aggregated trades (e.g., BTC-USDT)."
          data:
            type: "array"
            description: "List of aggregated trade data for the instrument."
            items:
              type: "object"
              properties:
                instId:
                  type: "string"
                  description: "Instrument ID for the trade."
                tradeId:
                  type: "string"
                  description: "The last trade ID in the trades aggregation."
                px:
                  type: "string"
                  description: "Trade price."
                sz:
                  type: "string"
                  description: "Trade size."
                side:
                  type: "string"
                  enum: ["buy", "sell"]
                  description: "Trade direction (buy or sell)."
                ts:
                  type: "string"
                  description: "Trade filled time in Unix timestamp format (milliseconds)."
                count:
                  type: "string"
                  description: "The count of trades aggregated."
    AllTradesResponse:
      contentType: "application/json"
      description: "Message for subscribing to individual trade channels and receiving real-time trade data for instruments."
      payload:
        type: "object"
        properties:
          channel:
            type: "string"
            description: "Channel name for the trade subscription (e.g., individual trades)."
          instId:
            type: "string"
            description: "Instrument ID for the trade subscription (e.g., BTC-USDT)."
          data:
            type: "array"
            description: "List of individual trade data for the instrument."
            items:
              type: "object"
              properties:
                instId:
                  type: "string"
                  description: "Instrument ID for the trade."
                tradeId:
                  type: "string"
                  description: "The unique trade ID."
                px:
                  type: "string"
                  description: "Trade price."
                sz:
                  type: "string"
                  description: "Trade size."
                side:
                  type: "string"
                  enum: ["buy", "sell"]
                  description: "Trade direction (buy or sell)."
                ts:
                  type: "string"
                  description: "Filled time in Unix timestamp format (milliseconds)."
    OrderbookResponse:
      contentType: "application/json"
      description: "Message for subscribing to order book channels and receiving real-time updates for instruments."
      payload:
        type: "object"
        properties:
          channel:
            type: "string"
            description: "Channel name for the order book subscription."
          instId:
            type: "string"
            description: "Instrument ID for the order book subscription (e.g., BTC-USDT)."
          action:
            type: "string"
            enum: ["snapshot", "update"]
            description: "Action type: full snapshot or incremental update."
          data:
            type: "array"
            description: "List of order book data, including asks and bids."
            items:
              type: "object"
              properties:
                asks:
                  type: "array"
                  description: "Order book data on the sell side (ask orders)."
                  items:
                    type: "array"
                    items:
                      type: "string"
                      description: "Price and size of each ask order."
                bids:
                  type: "array"
                  description: "Order book data on the buy side (bid orders)."
                  items:
                    type: "array"
                    items:
                      type: "string"
                      description: "Price and size of each bid order."
                ts:
                  type: "string"
                  description: "Timestamp of order book generation in Unix milliseconds."
                checksum:
                  type: "integer"
                  description: "Checksum for validation (implementation details)."
                prevSeqId:
                  type: "integer"
                  description: "Sequence ID of the last sent message (only applicable to certain order books)."
                seqId:
                  type: "integer"
                  description: "Sequence ID of the current message."
    OptionTradesResponse:
      summary: Trade data message
      payload:
        type: object
        properties:
          arg:
            type: object
            description: Successfully subscribed channel
            properties:
              channel:
                type: string
                description: Channel name
              data:
                type: array
                description: Subscribed data
                items:
                  type: object
                  properties:
                    instId:
                      type: string
                      description: Instrument ID
                    instFamily:
                      type: string
                      description: Instrument family
                    tradeId:
                      type: string
                      description: Trade ID
                    px:
                      type: string
                      description: Trade price
                    sz:
                      type: string
                      description: Trade quantity
                    side:
                      type: string
                      description: Trade side, either "buy" or "sell"
                      enum: [buy, sell]
                    optType:
                      type: string
                      description: Option type
                      enum: [C, P]
                    fillVol:
                      type: string
                      description: Implied volatility while trading (corresponding to trade price)
                    fwdPx:
                      type: string
                      description: Forward price while trading
                    idxPx:
                      type: string
                      description: Index price while trading
                    markPx:
                      type: string
                      description: Mark price while trading
                    ts:
                      type: string
                      format: date-time
                      description: Trade time in Unix timestamp format (milliseconds)
        required:
          - arg
          - data
    AuctionResponse:
      summary: Auction data message
      payload:
        type: object
        properties:
          arg:
            type: object
            description: Metadata for the subscribed channel
            properties:
              channel:
                type: string
                description: Channel name
              instId:
                type: string
                description: Instrument ID
            required:
              - channel
              - instId
          data:
            type: array
            description: Subscribed auction data
            items:
              type: object
              properties:
                instId:
                  type: string
                  description: Instrument ID
                eqPx:
                  type: string
                  description: Equilibrium price
                matchedSz:
                  type: string
                  description: Matched size for both buy and sell (in base currency)
                unmatchedSz:
                  type: string
                  description: Unmatched size
                auctionEndTime:
                  type: string
                  format: date-time
                  description: Call auction end time (Unix timestamp in milliseconds)
                state:
                  type: string
                  description: Trading state of the symbol
                  enum: [call_auction, continuous_trading]
                ts:
                  type: string
                  format: date-time
                  description: Data generation time (Unix timestamp in milliseconds)
            required:
              - instId
              - eqPx
              - matchedSz
              - auctionEndTime
              - state
              - ts
        required:
          - arg
          - data
    SpreadOrderRequest:
      summary: Auction data message
      payload:
        type: object
        properties:
          arg:
            type: object
            description: Metadata for the subscribed channel
            properties:
              channel:
                type: string
                description: Channel name
              instId:
                type: string
                description: Instrument ID
            required:
              - channel
              - instId
          data:
            type: array
            description: Subscribed auction data
            items:
              type: object
              properties:
                instId:
                  type: string
                  description: Instrument ID
                eqPx:
                  type: string
                  description: Equilibrium price
                matchedSz:
                  type: string
                  description: Matched size for both buy and sell (in base currency)
                unmatchedSz:
                  type: string
                  description: Unmatched size
                auctionEndTime:
                  type: string
                  format: date-time
                  description: Call auction end time (Unix timestamp in milliseconds)
                state:
                  type: string
                  description: Trading state of the symbol
                  enum: [call_auction, continuous_trading]
                ts:
                  type: string
                  format: date-time
                  description: Data generation time (Unix timestamp in milliseconds)
            required:
              - instId
              - eqPx
              - matchedSz
              - auctionEndTime
              - state
              - ts
        required:
          - arg
          - data
    SpreadOrderResponse:
      summary: Order status or error response message
      payload:
        type: object
        properties:
          id:
            type: string
            description: Unique identifier of the message.
            example: "abc123"
          op:
            type: string
            description: Operation name.
            example: "order-response"
          code:
            type: string
            description: Error code indicating the type of error or status.
            example: "ERR123"
          msg:
            type: string
            description: Human-readable error message or status message.
            example: "Order successfully processed."
          data:
            type: array
            description: Additional details about the order status or error.
            items:
              type: object
              properties:
                ordId:
                  type: string
                  description: Order ID.
                  example: "123456789"
                clOrdId:
                  type: string
                  description: Client Order ID as assigned by the client.
                  example: "clientOrder123"
                tag:
                  type: string
                  description: Order tag.
                  example: "urgent-order"
                sCode:
                  type: string
                  description: Order status code. `0` indicates success.
                  example: "0"
                sMsg:
                  type: string
                  description: Rejection or success message of event execution.
                  example: "Order successfully executed."
        required:
          - id
          - op
          - code
          - msg
          - data
    SpreadAmendOrderRequest:
      summary: Request to amend an existing order
      payload:
        type: object
        properties:
          id:
            type: string
            description: Unique identifier of the message provided by the client. Returned in the response to identify the corresponding request.
            maxLength: 32
            pattern: "^[a-zA-Z0-9]{1,32}$"
            example: "amend123"
          op:
            type: string
            description: Operation type.
            enum:
              - sprd-amend-order
            example: "sprd-amend-order"
          args:
            type: array
            description: Request parameters for the amendment.
            items:
              type: object
              properties:
                ordId:
                  type: string
                  description: Order ID. Either `ordId` or `clOrdId` is required. If both are provided, `ordId` will be used.
                  example: "order123"
                clOrdId:
                  type: string
                  description: Client Order ID as assigned by the client. Either `ordId` or `clOrdId` is required.
                  example: "clientOrder456"
                reqId:
                  type: string
                  description: Client Request ID as assigned by the client for the amendment.
                  maxLength: 32
                  pattern: "^[a-zA-Z0-9]{1,32}$"
                  example: "req789"
                newSz:
                  type: string
                  description: New quantity after amendment. Either `newSz` or `newPx` is required. For partially-filled orders, include the filled and unfilled amounts.
                  example: "100"
                newPx:
                  type: string
                  description: New price after amendment. Either `newSz` or `newPx` is required.
                  example: "1500.50"
    SpreadAmendResponse:
      summary: Response or error message for order amendment requests
      payload:
        type: object
        properties:
          id:
            type: string
            description: Unique identifier of the message. Matches the `id` in the request for tracking.
            maxLength: 32
            example: "amend123"
          op:
            type: string
            description: Operation type.
            example: "sprd-amend-order"
          code:
            type: string
            description: Error code for the response. If `code` is `0`, it indicates success.
            example: "0"
          msg:
            type: string
            description: Error message or general response description.
            example: "Amendment successful"
          data:
            type: array
            description: Additional data related to the response.
            items:
              type: object
              properties:
                ordId:
                  type: string
                  description: Order ID of the amended order.
                  example: "order123"
                clOrdId:
                  type: string
                  description: Client Order ID as assigned by the client.
                  example: "clientOrder456"
                reqId:
                  type: string
                  description: Client Request ID as assigned by the client for the order amendment.
                  example: "req789"
                sCode:
                  type: string
                  description: Status code of the order. A value of `0` indicates success.
                  example: "0"
                sMsg:
                  type: string
                  description: Status message describing the result of the operation.
                  example: "Amendment executed successfully"
    SpreadCancelOrderRequest:
      summary: Request to cancel
      payload:
        type: object
        properties:
          id:
            type: string
            description: Unique identifier of the message provided by the client. Returned in the response to identify the corresponding request.
            maxLength: 32
            pattern: "^[a-zA-Z0-9]{1,32}$"
            example: "amend123"
          op:
            type: string
            description: Operation type.
            enum:
              - sprd-amend-order
            example: "sprd-amend-order"
          args:
            type: array
            description: Request parameters for the amendment.
            items:
              type: object
              properties:
                ordId:
                  type: string
                  description: Order ID. Either `ordId` or `clOrdId` is required. If both are provided, `ordId` will be used.
                  example: "order123"
                clOrdId:
                  type: string
                  description: Client Order ID as assigned by the client. Either `ordId` or `clOrdId` is required.
                  example: "clientOrder456"
    SpreadCancelAllRequest:
      summary: Request to cancel
      payload:
        type: object
        properties:
          id:
            type: string
            description: Unique identifier of the message provided by the client. Returned in the response to identify the corresponding request.
            maxLength: 32
            pattern: "^[a-zA-Z0-9]{1,32}$"
            example: "amend123"
          op:
            type: string
            description: Operation type.
            enum:
              - sprd-amend-order
            example: "sprd-amend-order"
          args:
            type: array
            description: Request parameters for the amendment.
            items:
              type: object
              properties:
                sprdId:
                  type: string
                  description: Spread Id
    SpreadCancelAllResponse:
      summary: Response or error message for order cancel
      payload:
        type: object
        properties:
          id:
            type: string
            description: Unique identifier of the message. Matches the `id` in the request for tracking.
            maxLength: 32
            example: "amend123"
          op:
            type: string
            description: Operation type.
            example: "sprd-amend-order"
          code:
            type: string
            description: Error code for the response. If `code` is `0`, it indicates success.
            example: "0"
          msg:
            type: string
            description: Error message or general response description.
            example: "Amendment successful"
          data:
            type: array
            description: Additional data related to the response.
            items:
              type: object
              properties:
                result:
                  type: boolean
                  example: true
    OrderChannelRequest:
      summary: Request to subscribe or unsubscribe from channels
      payload:
        type: object
        required:
          - op
          - args
        properties:
          op:
            type: string
            description: Operation type. Either `subscribe` or `unsubscribe`.
            enum:
              - subscribe
              - unsubscribe
            example: "subscribe"
          args:
            type: array
            description: List of subscribed channels.
            items:
              type: object
              required:
                - channel
              properties:
                channel:
                  type: string
                  description: Channel name.
                  enum:
                    - sprd-orders
                  example: "sprd-orders"
                sprdId:
                  type: string
                  description: Spread ID for the subscription. Optional field.
                  example: "BTC-USDT_BTC-USD-SWAP"
    OrderChannelResponse:
      summary: Response message for subscription events
      payload:
        type: object
        required:
          - event
          - connId
        properties:
          event:
            type: string
            description: Event type
            enum:
              - subscribe
              - unsubscribe
              - error
          arg:
            type: object
            description: Subscribed channel details
            properties:
              channel:
                type: string
                description: Channel name
              sprdId:
                type: string
                description: Spread ID
          code:
            type: string
            description: Error code (optional)
          msg:
            type: string
            description: Error message (optional)
          connId:
            type: string
            description: WebSocket connection ID
    OrderChannelPushResponse:
      summary: Response message for successfully subscribed channel
      payload:
        type: object
        required:
          - arg
          - data
        properties:
          arg:
            type: object
            description: Subscribed channel details
            required:
              - channel
              - uid
              - sprdId
            properties:
              channel:
                type: string
                description: Channel name
              uid:
                type: string
                description: User Identifier
              sprdId:
                type: string
                description: Spread ID
          data:
            type: array
            description: Subscribed data details
            items:
              type: object
              required:
                - sprdId
                - ordId
                - px
                - sz
                - ordType
                - side
                - state
                - uTime
                - cTime
              properties:
                sprdId:
                  type: string
                  description: Spread ID
                ordId:
                  type: string
                  description: Order ID
                clOrdId:
                  type: string
                  description: Client Order ID as assigned by the client
                tag:
                  type: string
                  description: Order tag
                px:
                  type: string
                  description: Order price
                sz:
                  type: string
                  description: The original order quantity, in the unit of szCcy
                ordType:
                  type: string
                  description: Order type
                  enum:
                    - market
                    - limit
                    - post_only
                    - ioc
                side:
                  type: string
                  description: Order side
                  enum:
                    - buy
                    - sell
                fillSz:
                  type: string
                  description: Last trade quantity, only applicable to order updates representing successful settlement
                fillPx:
                  type: string
                  description: Last trade price, only applicable to order updates representing successful settlement
                tradeId:
                  type: string
                  description: Last trade ID
                accFillSz:
                  type: string
                  description: Accumulated fill quantity
                pendingFillSz:
                  type: string
                  description: Quantity still remaining to be filled
                pendingSettleSz:
                  type: string
                  description: Quantity that's pending settlement
                canceledSz:
                  type: string
                  description: Quantity canceled due to order cancellations or trade rejections
                avgPx:
                  type: string
                  description: Average filled price. If none is filled, it will return "0".
                state:
                  type: string
                  description: Order state
                  enum:
                    - canceled
                    - live
                    - partially_filled
                    - filled
                cancelSource:
                  type: string
                  description: Source of the order cancellation
                  enum:
                    - "0"
                    - "1"
                    - "14"
                    - "15"
                    - "20"
                    - "31"
                    - "32"
                    - "34"
                    - "35"
                uTime:
                  type: string
                  format: date-time
                  description: Update time, Unix timestamp in milliseconds
                cTime:
                  type: string
                  format: date-time
                  description: Creation time, Unix timestamp in milliseconds
                code:
                  type: string
                  description: Error code, default is 0
                msg:
                  type: string
                  description: Error message, default is ""
                reqId:
                  type: string
                  description: Client Request ID as assigned by the client for order amendment
                amendResult:
                  type: string
                  description: The result of amending the order
                  enum:
                    - "-1"
                    - "0"
                    - ""
    TradeChannelPushResponse:
      summary: Response message for successfully subscribed trade data
      payload:
        type: object
        required:
          - arg
          - data
        properties:
          arg:
            type: object
            description: Successfully subscribed channel details
            required:
              - channel
              - uid
              - sprdId
            properties:
              channel:
                type: string
                description: Channel name
              uid:
                type: string
                description: User Identifier
              sprdId:
                type: string
                description: Spread ID
          data:
            type: array
            description: Subscribed trade data
            items:
              type: object
              required:
                - sprdId
                - tradeId
                - ordId
                - fillPx
                - fillSz
                - side
                - state
                - execType
                - ts
              properties:
                sprdId:
                  type: string
                  description: Spread ID
                tradeId:
                  type: string
                  description: Trade ID
                ordId:
                  type: string
                  description: Order ID
                clOrdId:
                  type: string
                  description: Client Order ID as assigned by the client
                tag:
                  type: string
                  description: Order tag
                fillPx:
                  type: string
                  description: Last filled price
                fillSz:
                  type: string
                  description: Last filled quantity
                side:
                  type: string
                  description: Order side
                  enum:
                    - buy
                    - sell
                state:
                  type: string
                  description: Trade state
                  enum:
                    - filled
                    - rejected
                execType:
                  type: string
                  description: Liquidity taker or maker
                  enum:
                    - T
                    - M
                ts:
                  type: string
                  format: date-time
                  description: Data generation time, Unix timestamp in milliseconds
                legs:
                  type: array
                  description: Legs of trade
                  items:
                    type: object
                    required:
                      - instId
                      - px
                      - sz
                      - side
                    properties:
                      instId:
                        type: string
                        description: Instrument ID, e.g., BTC-USDT-SWAP
                      px:
                        type: string
                        description: The price the leg executed
                      sz:
                        type: string
                        description: Size of the leg in contracts or spot
                      szCont:
                        type: string
                        description: Filled amount of the contract, applicable to contracts only (returns "" for spot)
                      side:
                        type: string
                        description: The direction of the leg
                        enum:
                          - buy
                          - sell
                      fillPnl:
                        type: string
                        description: Last filled profit and loss, applicable to orders that aim to close a position (otherwise, always 0)
                      fee:
                        type: string
                        description: Fee amount (negative for user transaction fee charged by the platform, positive for rebate)
                      feeCcy:
                        type: string
                        description: Fee currency
                      tradeId:
                        type: string
                        description: Trade ID in the OKX orderbook
                code:
                  type: string
                  description: Error Code, default is 0
                msg:
                  type: string
                  description: Error Message, default is ""
    OrderbookChannelPushResponse:
      summary: Response message for successfully subscribed order book data
      payload:
        type: object
        required:
          - arg
          - action
          - data
        properties:
          arg:
            type: object
            required:
              - channel
              - sprdId
            properties:
              channel:
                type: string
              sprdId:
                type: string
          action:
            type: string
            enum:
              - snapshot
              - update
          data:
            type: array
            items:
              type: object
              required:
                - asks
                - bids
                - ts
                - seqId
              properties:
                asks:
                  type: array
                  items:
                    type: array
                    items:
                      type: string
                bids:
                  type: array
                  items:
                    type: array
                    items:
                      type: string
                ts:
                  type: string
                  description: Unix timestamp in milliseconds
                seqId:
                  type: integer
    PublicTradePushResponse:
      payload:
        type: object
        required:
          - arg
          - data
        properties:
          arg:
            type: object
            required:
              - channel
              - sprdId
            properties:
              channel:
                type: string
                description: Channel name
              sprdId:
                type: string
                description: Spread ID
          data:
            type: array
            items:
              type: object
              required:
                - sprdId
                - tradeId
                - px
                - sz
                - side
                - ts
              properties:
                sprdId:
                  type: string
                  description: Spread ID, e.g. BTC-USDT
                tradeId:
                  type: string
                  description: Trade ID
                px:
                  type: string
                  description: Trade price
                sz:
                  type: string
                  description: Trade size
                side:
                  type: string
                  enum: [buy, sell]
                  description: Trade direction (buy/sell)
                ts:
                  type: string
                  format: date-time
                  description: Filled time in Unix timestamp format in milliseconds, e.g. 1597026383085
    PublicTickersPushResponse:
      payload:
        type: object
        required:
          - arg
          - data
        properties:
          arg:
            type: object
            required:
              - channel
              - sprdId
            properties:
              channel:
                type: string
                description: Channel name
              sprdId:
                type: string
                description: Spread ID
          data:
            type: array
            items:
              type: object
              required:
                - sprdId
                - last
                - lastSz
                - askPx
                - askSz
                - bidPx
                - bidSz
                - open24h
                - high24h
                - low24h
                - vol24h
                - ts
              properties:
                sprdId:
                  type: string
                  description: Spread ID
                last:
                  type: string
                  description: Last traded price
                lastSz:
                  type: string
                  description: Last traded size
                askPx:
                  type: string
                  description: Best ask price
                askSz:
                  type: string
                  description: Best ask size
                bidPx:
                  type: string
                  description: Best bid price
                bidSz:
                  type: string
                  description: Best bid size
                open24h:
                  type: string
                  description: Open price in the past 24 hours
                high24h:
                  type: string
                  description: Highest price in the past 24 hours
                low24h:
                  type: string
                  description: Lowest price in the past 24 hours
                vol24h:
                  type: string
                  description: 24h trading volume, with a unit of base currency or USD
                ts:
                  type: string
                  format: date-time
                  description: Ticker data generation time in Unix timestamp format in milliseconds, e.g. 1597026383085
    PublicCandlestickPushResponse:
      payload:
        type: object
        required:
          - arg
          - data
        properties:
          arg:
            type: object
            required:
              - channel
              - sprdId
            properties:
              channel:
                type: string
                description: Channel name
              sprdId:
                type: string
                description: Spread ID
          data:
            type: array
            items:
              type: object
              required:
                - ts
                - o
                - h
                - l
                - c
                - vol
                - confirm
              properties:
                ts:
                  type: string
                  format: date-time
                  description: Opening time of the candlestick, in Unix timestamp format in milliseconds, e.g. 1597026383085
                o:
                  type: string
                  description: Open price
                h:
                  type: string
                  description: Highest price
                l:
                  type: string
                  description: Lowest price
                c:
                  type: string
                  description: Close price
                vol:
                  type: string
                  description: Trading volume, in `szCcy`
                confirm:
                  type: string
                  description: The state of candlesticks. `0` represents uncompleted, `1` represents completed
    InstrumentRequest:
      payload:
        type: object
        required:
          - op
          - args
        properties:
          op:
            type: string
            enum: [subscribe, unsubscribe]
            description: The operation type, either `subscribe` or `unsubscribe`.
          args:
            type: array
            items:
              type: object
              required:
                - channel
                - instType
              properties:
                channel:
                  type: string
                  description: The name of the channel to subscribe to or unsubscribe from. In this case, it's `instruments`.
                instType:
                  type: string
                  enum: [SPOT, MARGIN, SWAP, FUTURES, OPTION]
                  description: The type of the instrument.
    InstrumentPushResponse:
      payload:
        type: object
        required:
          - channel
          - instType
          - data
        properties:
          channel:
            type: string
            description: The name of the subscribed channel.
          instType:
            type: string
            enum: [SPOT, MARGIN, SWAP, FUTURES, OPTION]
            description: The instrument type.
          data:
            type: array
            items:
              type: object
              required:
                - instId
              properties:
                instId:
                  type: string
                  description: Instrument ID (e.g., BTC-UST).
                uly:
                  type: string
                  description: Underlying instrument for FUTURES/SWAP/OPTION.
                instFamily:
                  type: string
                  description: Instrument family (e.g., BTC-USD) for FUTURES/SWAP/OPTION.
                category:
                  type: string
                  description: Currency category (deprecated).
                baseCcy:
                  type: string
                  description: Base currency for SPOT/MARGIN (e.g., BTC in BTC-USDT).
                quoteCcy:
                  type: string
                  description: Quote currency for SPOT/MARGIN (e.g., USDT in BTC-USDT).
                settleCcy:
                  type: string
                  description: Settlement and margin currency for FUTURES/SWAP/OPTION.
                ctVal:
                  type: string
                  description: Contract value.
                ctMult:
                  type: string
                  description: Contract multiplier.
                ctValCcy:
                  type: string
                  description: Contract value currency.
                optType:
                  type: string
                  enum: [C, P]
                  description: "Option type (C: Call, P: Put) for OPTION."
                stk:
                  type: string
                  description: Strike price for OPTION.
                listTime:
                  type: string
                  description: Listing time for FUTURES/SWAP/OPTION.
                auctionEndTime:
                  type: string
                  description: End time of call auction for SPOT (only applicable to SPOT listed via call auctions).
                expTime:
                  type: string
                  description: Expiry time for SPOT/MARGIN/FUTURES/SWAP/OPTION.
                lever:
                  type: string
                  description: Max leverage for MARGIN.
                tickSz:
                  type: string
                  description: Tick size (e.g., 0.0001) for OPTION.
                lotSz:
                  type: string
                  description: Lot size (number of contracts for derivatives, quantity in base currency for SPOT/MARGIN).
                minSz:
                  type: string
                  description: Minimum order size (number of contracts for derivatives, quantity in base currency for SPOT/MARGIN).
                ctType:
                  type: string
                  enum: [linear, inverse]
                  description: Contract type (linear or inverse) for FUTURES/SWAP.
                alias:
                  type: string
                  enum:
                    [
                      this_week,
                      next_week,
                      this_month,
                      next_month,
                      quarter,
                      next_quarter,
                    ]
                  description: Alias for FUTURES.
                state:
                  type: string
                  enum: [live, suspend, expired, preopen, test]
                  description: Instrument status.
                ruleType:
                  type: string
                  enum: [normal, pre_market]
                  description: Trading rule types.
                maxLmtSz:
                  type: string
                  description: Maximum order quantity for a single limit order.
                maxMktSz:
                  type: string
                  description: Maximum order quantity for a single market order.
                maxTwapSz:
                  type: string
                  description: Maximum order quantity for a single TWAP order.
                maxIcebergSz:
                  type: string
                  description: Maximum order quantity for a single Iceberg order.
                maxTriggerSz:
                  type: string
                  description: Maximum order quantity for a single trigger order.
                maxStopSz:
                  type: string
                  description: Maximum order quantity for a single stop market order.
    OpenInterestPushResponse:
      payload:
        type: object
        required:
          - channel
          - instId
          - data
        properties:
          channel:
            type: string
            description: The name of the subscribed channel.
          instId:
            type: string
            description: Instrument ID (e.g., LTC-USD-SWAP).
          data:
            type: array
            items:
              type: object
              required:
                - instType
                - instId
                - ts
              properties:
                instType:
                  type: string
                  description: Instrument type.
                instId:
                  type: string
                  description: Instrument ID (e.g., LTC-USD-SWAP).
                oi:
                  type: string
                  description: Open interest, in units of contracts.
                oiCcy:
                  type: string
                  description: Open interest, in currency units.
                ts:
                  type: string
                  description: The time when the data was updated, in Unix timestamp format (milliseconds), e.g., 1597026383085.
    FundingratePushResponse:
      payload:
        type: object
        required:
          - channel
          - instId
          - data
        properties:
          channel:
            type: string
            description: The name of the subscribed channel.
          instId:
            type: string
            description: Instrument ID (e.g., BTC-USD-SWAP).
          data:
            type: array
            items:
              type: object
              required:
                - instType
                - instId
                - method
                - fundingRate
                - fundingTime
                - nextFundingRate
                - nextFundingTime
                - minFundingRate
                - maxFundingRate
                - settState
                - ts
              properties:
                instType:
                  type: string
                  description: Instrument type (e.g., SWAP).
                instId:
                  type: string
                  description: Instrument ID (e.g., BTC-USD-SWAP).
                method:
                  type: string
                  enum: [current_period, next_period]
                  description: Funding rate mechanism.
                fundingRate:
                  type: string
                  description: Current funding rate.
                fundingTime:
                  type: string
                  description: Funding time of the upcoming settlement, Unix timestamp format in milliseconds (e.g., 1597026383085).
                nextFundingRate:
                  type: string
                  description: Forecasted funding rate for the next period.
                nextFundingTime:
                  type: string
                  description: Forecasted funding time for the next period, Unix timestamp format in milliseconds (e.g., 1597026383085).
                minFundingRate:
                  type: string
                  description: The lower limit of the predicted funding rate for the next cycle.
                maxFundingRate:
                  type: string
                  description: The upper limit of the predicted funding rate for the next cycle.
                settState:
                  type: string
                  enum: [processing, settled]
                  description: Settlement state of funding rate.
                settFundingRate:
                  type: string
                  description: If settState = processing, it is the funding rate being used for the current settlement cycle. If settState = settled, it is the funding rate used for the previous settlement cycle.
                premium:
                  type: string
                  description: Premium between the mid price of perps market and the index price.
                ts:
                  type: string
                  description: Data return time, Unix timestamp format in milliseconds (e.g., 1597026383085).
    PriceLimitPushResponse:
      payload:
        type: object
        required:
          - channel
          - instId
          - data
        properties:
          channel:
            type: string
            description: The name of the subscribed channel.
          instId:
            type: string
            description: Instrument ID (e.g., BTC-USDT).
          data:
            type: array
            items:
              type: object
              required:
                - instType
                - instId
                - buyLmt
                - sellLmt
                - ts
                - enabled
              properties:
                instType:
                  type: string
                  description: Instrument type.
                instId:
                  type: string
                  description: Instrument ID (e.g., BTC-USDT).
                buyLmt:
                  type: string
                  description: Maximum buy price. Returns `""` when `enabled` is false.
                sellLmt:
                  type: string
                  description: Minimum sell price. Returns `""` when `enabled` is false.
                ts:
                  type: string
                  description: Price update time in Unix timestamp format (e.g., 1597026383085).
                enabled:
                  type: boolean
                  description: Whether the price limit is effective. `true` if effective, `false` if not effective.
    OptionPushResponse:
      payload:
        type: object
        required:
          - channel
          - instFamily
          - data
        properties:
          channel:
            type: string
            description: The name of the subscribed channel.
          instFamily:
            type: string
            description: The instrument family (e.g., BTC-USD).
          data:
            type: array
            items:
              type: object
              required:
                - instType
                - instId
                - uly
                - delta
                - gamma
                - vega
                - theta
                - deltaBS
                - gammaBS
                - vegaBS
                - thetaBS
                - lever
                - markVol
                - bidVol
                - askVol
                - realVol
                - volLv
                - fwdPx
                - ts
              properties:
                instType:
                  type: string
                  description: The instrument type (e.g., OPTION).
                instId:
                  type: string
                  description: Instrument ID (e.g., BTC-USD-OPTION).
                uly:
                  type: string
                  description: Underlying instrument (e.g., BTC-USD).
                delta:
                  type: string
                  description: Sensitivity of the option price to the underlying price.
                gamma:
                  type: string
                  description: The delta's sensitivity to the underlying price.
                vega:
                  type: string
                  description: Sensitivity of the option price to implied volatility.
                theta:
                  type: string
                  description: Sensitivity of the option price to remaining maturity.
                deltaBS:
                  type: string
                  description: Sensitivity of the option price to the underlying price in Black-Scholes (BS) mode.
                gammaBS:
                  type: string
                  description: The delta's sensitivity to the underlying price in BS mode.
                vegaBS:
                  type: string
                  description: Sensitivity of the option price to implied volatility in BS mode.
                thetaBS:
                  type: string
                  description: Sensitivity of the option price to remaining maturity in BS mode.
                lever:
                  type: string
                  description: Leverage applied to the option.
                markVol:
                  type: string
                  description: Mark volatility of the option.
                bidVol:
                  type: string
                  description: Bid volatility of the option.
                askVol:
                  type: string
                  description: Ask volatility of the option.
                realVol:
                  type: string
                  description: Realized volatility (currently not in use).
                volLv:
                  type: string
                  description: Implied volatility of at-the-money options.
                fwdPx:
                  type: string
                  description: Forward price of the option.
                ts:
                  type: string
                  description: The time when the data was updated (in Unix timestamp format).
    PricePushResponse:
      payload:
        type: object
        required:
          - channel
          - instType
          - data
        properties:
          channel:
            type: string
            description: The name of the subscribed channel.
          instType:
            type: string
            enum:
              - FUTURES
              - OPTION
              - SWAP
            description: The type of instrument (FUTURES, OPTION, or SWAP).
          instFamily:
            type: string
            description: The instrument family (e.g., BTC-USD).
          data:
            type: array
            items:
              type: object
              required:
                - instType
                - instId
                - settlePx
                - ts
              properties:
                instType:
                  type: string
                  description: The instrument type (FUTURES, OPTION, SWAP).
                instId:
                  type: string
                  description: The instrument ID (e.g., BTC-USD-170310).
                settlePx:
                  type: string
                  description: Estimated delivery or exercise price for the instrument.
                ts:
                  type: string
                  description: The timestamp when the data was updated (Unix timestamp format in milliseconds).
    MarkPricePushResponse:
      payload:
        type: object
        required:
          - channel
          - instType
          - data
        properties:
          channel:
            type: string
            description: The name of the subscribed channel.
          instType:
            type: string
            enum:
              - FUTURES
              - OPTION
              - SWAP
            description: The type of instrument (FUTURES, OPTION, or SWAP).
          data:
            type: array
            items:
              type: object
              required:
                - instType
                - instId
                - markPx
                - ts
              properties:
                instType:
                  type: string
                  description: The instrument type (FUTURES, OPTION, SWAP).
                instId:
                  type: string
                  description: The instrument ID (e.g., BTC-USD).
                markPx:
                  type: string
                  description: The mark price for the instrument.
                ts:
                  type: string
                  description: The timestamp when the data was updated (Unix timestamp format in milliseconds).
    LiquidationResponse:
      payload:
        type: object
        required:
          - channel
          - instType
          - data
        properties:
          channel:
            type: string
            description: The name of the subscribed channel.
          instType:
            type: string
            enum:
              - FUTURES
              - SWAP
              - OPTION
            description: The type of instrument (FUTURES, SWAP, or OPTION).
          data:
            type: array
            items:
              type: object
              required:
                - instType
                - instId
                - details
              properties:
                instType:
                  type: string
                  description: The type of instrument (FUTURES, SWAP, or OPTION).
                instId:
                  type: string
                  description: The instrument ID (e.g., BTC-USD-SWAP).
                uly:
                  type: string
                  description: The underlying asset, applicable only to FUTURES/SWAP/OPTION.
                details:
                  type: array
                  items:
                    type: object
                    required:
                      - side
                      - posSide
                      - sz
                      - ts
                    properties:
                      side:
                        type: string
                        enum:
                          - buy
                          - sell
                        description: The order side (buy or sell), only applicable to FUTURES/SWAP.
                      posSide:
                        type: string
                        enum:
                          - long
                          - short
                        description: The position side (long or short), applicable only to FUTURES/SWAP.
                      bkPx:
                        type: string
                        description: The bankruptcy price, applicable only to FUTURES/SWAP.
                      sz:
                        type: string
                        description: The quantity of liquidation, applicable to MARGIN/FUTURES/SWAP.
                      bkLoss:
                        type: string
                        description: The bankruptcy loss.
                      ccy:
                        type: string
                        description: The liquidation currency, applicable only to MARGIN.
                      ts:
                        type: string
                        description: The liquidation time in Unix timestamp format (milliseconds).
    ADLResponse:
      payload:
        type: object
        required:
          - channel
          - instType
          - data
        properties:
          channel:
            type: string
            description: The name of the subscribed channel (e.g., adl-warning).
          instType:
            type: string
            description: The type of instrument (e.g., FUTURES, SWAP, OPTION).
          instFamily:
            type: string
            description: The instrument family (e.g., BTC, ETH).
          data:
            type: array
            items:
              type: object
              required:
                - instType
                - instFamily
                - state
                - bal
                - ccy
              properties:
                instType:
                  type: string
                  description: The type of instrument (e.g., FUTURES, SWAP, OPTION).
                instFamily:
                  type: string
                  description: The instrument family (e.g., BTC, ETH).
                state:
                  type: string
                  enum:
                    - normal
                    - warning
                    - adl
                  description: The state of the insurance fund.
                bal:
                  type: string
                  description: The real-time insurance fund balance.
                ccy:
                  type: string
                  description: The corresponding currency of the insurance fund balance.
                maxBal:
                  type: string
                  description: The maximum insurance fund balance in the past eight hours (applicable when state is warning or adl).
                maxBalTs:
                  type: string
                  description: Timestamp when the insurance fund balance reached the maximum in the past eight hours (Unix timestamp, applicable when state is warning or adl).
                decRate:
                  type: string
                  description: The real-time insurance fund decline rate (compare bal and maxBal), applicable when state is warning or adl.
                adlType:
                  type: string
                  enum:
                    - rate_adl_start
                    - bal_adl_start
                    - pos_adl_start
                    - adl_end
                  description: The type of ADL related event.
                adlBal:
                  type: string
                  description: The insurance fund balance that triggers ADL.
                adlRate:
                  type: string
                  description: The insurance fund decline rate that triggers ADL.
                adlRecBal:
                  type: string
                  description: The insurance fund balance that turns off ADL.
                adlRecRate:
                  type: string
                  description: The insurance fund decline rate that turns off ADL.
                ts:
                  type: string
                  description: The data push time in Unix timestamp format (milliseconds).
    CalenderRequest:
      summary: Request to subscribe or unsubscribe from channels
      payload:
        type: object
        required:
          - op
          - args
        properties:
          op:
            type: string
            description: Operation type. Either `subscribe` or `unsubscribe`.
            enum:
              - subscribe
              - unsubscribe
            example: "subscribe"
          args:
            type: array
            description: List of subscribed channels.
            items:
              type: object
              required:
                - channel
              properties:
                channel:
                  type: string
                  description: Channel name.
                  enum:
                    - economic-calendar
                  example: "economic-calendar"
    CalenderPushResponse:
      payload:
        type: object
        required:
          - channel
          - data
        properties:
          channel:
            type: string
            description: The name of the subscribed channel (e.g., economic events).
          data:
            type: array
            items:
              type: object
              required:
                - event
                - region
                - category
                - actual
                - previous
                - forecast
                - date
                - refDate
                - calendarId
                - unit
                - ccy
                - importance
                - ts
              properties:
                event:
                  type: string
                  description: The name of the economic event (e.g., GDP report, unemployment rate).
                region:
                  type: string
                  description: The country, region, or entity associated with the event (e.g., USA, Eurozone).
                category:
                  type: string
                  description: The category name of the event (e.g., Economic Indicators, Inflation).
                actual:
                  type: string
                  description: The actual value of the event.
                previous:
                  type: string
                  description: The latest actual value from the previous period. The value will be revised if applicable.
                forecast:
                  type: string
                  description: The average forecast among a representative group of economists.
                prevInitial:
                  type: string
                  description: The initial value of the previous period, only applicable when revision happens.
                date:
                  type: string
                  description: The estimated release time of the actual field value, Unix timestamp format in milliseconds.
                refDate:
                  type: string
                  description: The date for which the data point refers to.
                calendarId:
                  type: string
                  description: The calendar ID associated with the event.
                unit:
                  type: string
                  description: The unit of the data (e.g., percentage, USD).
                ccy:
                  type: string
                  description: The currency of the data (e.g., USD, EUR).
                importance:
                  type: string
                  enum:
                    - "1"
                    - "2"
                    - "3"
                  description: "The level of importance of the event (1: low, 2: medium, 3: high)."
                ts:
                  type: string
                  description: The time of the latest update in Unix timestamp format (milliseconds).
    DepositRequest:
      payload:
        type: object
        required:
          - op
          - args
        properties:
          op:
            type: string
            enum:
              - subscribe
              - unsubscribe
            description: The operation to perform (subscribe or unsubscribe).
          args:
            type: array
            items:
              type: object
              required:
                - channel
              properties:
                channel:
                  type: string
                  description: The name of the channel (e.g., deposit-info).
                ccy:
                  type: string
                  description: The currency associated with the channel (e.g., BTC).
    DepositResponse:
      payload:
        type: object
        required:
          - event
          - connId
        properties:
          event:
            type: string
            enum:
              - subscribe
              - unsubscribe
              - error
            description: The event operation (subscribe, unsubscribe, or error).
          arg:
            type: object
            properties:
              channel:
                type: string
                description: The name of the channel (e.g., `deposit-info`).
              ccy:
                type: string
                description: The currency associated with the channel (e.g., `BTC`).
          code:
            type: string
            description: Error code, only relevant if `event` is `error`.
          msg:
            type: string
            description: Error message, only relevant if `event` is `error`.
          connId:
            type: string
            description: WebSocket connection ID, required for all events.
    DepositPushResponse:
      payload:
        type: object
        required:
          - event
          - connId
        properties:
          event:
            type: string
            enum:
              - subscribe
              - unsubscribe
              - error
            description: The event operation (subscribe, unsubscribe, or error).
          arg:
            type: object
            properties:
              channel:
                type: string
                description: The name of the channel (e.g., `deposit-info`).
              uid:
                type: string
                description: The user identifier.
              ccy:
                type: string
                description: The currency associated with the deposit (e.g., `BTC`).
          data:
            type: array
            items:
              type: object
              properties:
                uid:
                  type: string
                  description: The user identifier of the message producer.
                subAcct:
                  type: string
                  description: The sub-account name. Returns an empty string if the message producer is the master account.
                pTime:
                  type: string
                  description: The push time, in Unix timestamp format in milliseconds.
                ccy:
                  type: string
                  description: The currency of the deposit.
                chain:
                  type: string
                  description: The chain name of the deposit.
                amt:
                  type: string
                  description: The amount of the deposit.
                from:
                  type: string
                  description: The deposit account (internal OKX account, not a blockchain address).
                areaCodeFrom:
                  type: string
                  description: The area code of the phone number if the `from` is a phone number.
                to:
                  type: string
                  description: The deposit address.
                txId:
                  type: string
                  description: The transaction hash record of the deposit.
                ts:
                  type: string
                  description: The time when the deposit record was created, in Unix timestamp format in milliseconds.
                state:
                  type: string
                  enum:
                    - "0"
                    - "1"
                    - "2"
                    - "8"
                    - "11"
                    - "12"
                    - "13"
                    - "14"
                  description: The status of the deposit.
                depId:
                  type: string
                  description: The deposit ID.
                fromWdId:
                  type: string
                  description: The internal transfer initiator's withdrawal ID if the deposit comes from an internal transfer.
                actualDepBlkConfirm:
                  type: string
                  description: The actual amount of blockchain-confirmed deposit.
          code:
            type: string
            description: Error code, only relevant if `event` is `error`.
          msg:
            type: string
            description: Error message, only relevant if `event` is `error`.
          connId:
            type: string
            description: WebSocket connection ID, required for all events.
    WithdrawPushResponse:
      payload:
        type: object
        required:
          - event
          - connId
        properties:
          event:
            type: string
            enum:
              - subscribe
              - unsubscribe
              - error
            description: The event operation (subscribe, unsubscribe, or error).
          arg:
            type: object
            properties:
              channel:
                type: string
                description: The name of the channel (e.g., `deposit-info`).
              uid:
                type: string
                description: The user identifier.
              ccy:
                type: string
                description: The currency associated with the deposit (e.g., `BTC`).
          data:
            type: array
            items:
              type: object
              properties:
                uid:
                  type: string
                  description: The user identifier of the message producer.
                subAcct:
                  type: string
                  description: The sub-account name. Returns an empty string if the message producer is the master account.
                pTime:
                  type: string
                  description: The push time, in Unix timestamp format in milliseconds.
                ccy:
                  type: string
                  description: The currency of the deposit.
                chain:
                  type: string
                  description: The chain name of the deposit.
                amt:
                  type: string
                  description: The amount of the deposit.
                from:
                  type: string
                  description: The deposit account (internal OKX account, not a blockchain address).
                areaCodeFrom:
                  type: string
                  description: The area code of the phone number if the `from` is a phone number.
                to:
                  type: string
                  description: The deposit address.
                txId:
                  type: string
                  description: The transaction hash record of the deposit.
                ts:
                  type: string
                  description: The time when the deposit record was created, in Unix timestamp format in milliseconds.
                state:
                  type: string
                  enum:
                    - "0"
                    - "1"
                    - "2"
                    - "8"
                    - "11"
                    - "12"
                    - "13"
                    - "14"
                  description: The status of the deposit.
                depId:
                  type: string
                  description: The deposit ID.
                fromWdId:
                  type: string
                  description: The internal transfer initiator's withdrawal ID if the deposit comes from an internal transfer.
                actualDepBlkConfirm:
                  type: string
                  description: The actual amount of blockchain-confirmed deposit.
          code:
            type: string
            description: Error code, only relevant if `event` is `error`.
          msg:
            type: string
            description: Error message, only relevant if `event` is `error`.
          connId:
            type: string
            description: WebSocket connection ID, required for all events.
