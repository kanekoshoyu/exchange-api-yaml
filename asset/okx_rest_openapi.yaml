openapi: 3.0.0
info:
  title: OKX API
  version: 1.0.0
  description: |
    Welcome to OKX Developer document!  
    excluded below endpoints as they are if you need them please add and commit to https://github.com/kanekoshoyu/exchange-collection):
    - Trading Account (this might become needed, will add when we need it)
    - Block Trading
    - Financial Producer
    - Affiliate
    - Status
    - Announcement

servers:
  - url: https://www.okx.com/api/v5
    description: Main REST API

tags:
  - name: Order Book Trading
  - name: Spread Trading
  - name: Public Data
  - name: Trading Statistics
  - name: Funding Account
  - name: Sub-account
paths:
  /trade/order:
    post:
      summary: Place a trade order
      tags:
        - Order Book Trading
      requestBody:
        description: Order details to place a trade
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlaceOrderRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderInfo"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      summary: get a trade order
      tags:
        - Order Book Trading
      parameters:
        - name: instId
          in: query
          description: >
            Instrument ID (e.g., BTC-USDT).  
            Only applicable to live instruments.
          required: true
          schema:
            type: string
            example: "BTC-USDT"
        - name: ordId
          in: query
          description: >
            Order ID.  
            Either `ordId` or `clOrdId` is required.  
            If both are provided, `ordId` will take precedence.
          required: false
          schema:
            type: string
            example: "123456789"
        - name: clOrdId
          in: query
          description: >
            Client Order ID as assigned by the client.  
            If the `clOrdId` is associated with multiple orders, only the latest one will be returned.  
            Either `ordId` or `clOrdId` is required.
          required: false
          schema:
            type: string
            example: "clientOrder123"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /trade/batch-orders:
    post:
      summary: Place a batch orders
      tags:
        - Order Book Trading
      requestBody:
        description: Order details to place a trade
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/PlaceOrderRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderInfo"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /trade/cancel-order:
    post:
      summary: cancel an order
      description: "Cancel an incomplete order.<br>Rate Limit: 60 requests per 2 seconds<br>Rate limit rule (except Options): UserID + Instrument ID<br>Rate limit rule (Options only): UserID + Instrument Family"
      tags:
        - Order Book Trading
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelOrderRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderInfo"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /trade/cancel-batch-orders:
    post:
      summary: cancel multiple order
      description: "Cancel incomplete orders in batches. Maximum 20 orders can be canceled per request. Request parameters should be passed in the form of an array.<br>Rate Limit: 300 orders per 2 seconds<br>Rate limit rule (except Options): UserID + Instrument ID<br>Rate limit rule (Options only): UserID + Instrument Family"
      tags:
        - Order Book Trading
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/CancelOrderRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderInfo"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /trade/amend-order:
    post:
      summary: amend an order
      description: "Amend an incomplete order.<br>Rate Limit: 60 requests per 2 seconds<br>Rate Limit of lead instruments for Copy Trading: 4 requests per 2 seconds<br>Rate limit rule (except Options): UserID + Instrument ID<br>Rate limit rule (Options only): UserID + Instrument Family<br>Rate limit of this endpoint will also be affected by the rules Sub-account rate limit and Fill ratio based sub-account rate limit."
      tags:
        - Order Book Trading
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/AmendOrderRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderInfo"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /trade/amend-batch-orders:
    post:
      summary: amend an order
      description: "Amend an incomplete order.<br>Rate Limit: 60 requests per 2 seconds<br>Rate Limit of lead instruments for Copy Trading: 4 requests per 2 seconds<br>Rate limit rule (except Options): UserID + Instrument ID<br>Rate limit rule (Options only): UserID + Instrument Family<br>Rate limit of this endpoint will also be affected by the rules Sub-account rate limit and Fill ratio based sub-account rate limit."
      tags:
        - Order Book Trading
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/AmendOrderRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderInfo"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /trade/close-position:
    post:
      summary: close position of an instrument
      description: "Close the position of an instrument via a market order.<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule (except Options): UserID + Instrument ID<br>Rate limit rule (Options only): UserID + Instrument Family"
      tags:
        - Order Book Trading
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClosePositionRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/PositionInfo"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /trade/orders-pending:
    get:
      summary: get Order list
      description: "Retrieve all incomplete orders under the current account.<br>Rate Limit: 60 requests per 2 seconds<br>Rate limit rule: UserID"
      tags:
        - Order Book Trading
      parameters:
        - name: instType
          in: query
          description: Instrument type
          required: false
          schema:
            type: string
            enum: [SPOT, MARGIN, SWAP, FUTURES, OPTION]
        - name: uly
          in: query
          description: Underlying
          required: false
          schema:
            type: string
        - name: instFamily
          in: query
          description: Instrument family (Applicable to FUTURES/SWAP/OPTION)
          required: false
          schema:
            type: string
        - name: instId
          in: query
          description: Instrument ID, e.g., BTC-USD-200927
          required: false
          schema:
            type: string
        - name: ordType
          in: query
          description: Order type
          required: false
          schema:
            type: string
            enum:
              - market
              - limit
              - post_only
              - fok
              - ioc
              - optimal_limit_ioc
              - mmp
              - mmp_and_post_only
              - op_fok
        - name: state
          in: query
          description: State of the order
          required: false
          schema:
            type: string
            enum: [live, partially_filled]
        - name: after
          in: query
          description: Pagination of data to return records earlier than the requested ordId
          required: false
          schema:
            type: string
        - name: before
          in: query
          description: Pagination of data to return records newer than the requested ordId
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Number of results per request. The maximum is 100; The default is 100.
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /trade/orders-history:
    get:
      summary: get Order history
      description: "Get completed orders which are placed in the last 7 days, including those placed 7 days ago but completed in the last 7 days.<br>The incomplete orders that have been canceled are only reserved for 2 hours.<br>Rate Limit: 40 requests per 2 seconds<br>Rate limit rule: UserID"
      tags:
        - Order Book Trading
      parameters:
        - name: instType
          in: query
          description: Instrument type
          required: true
          schema:
            type: string
            enum: [SPOT, MARGIN, SWAP, FUTURES, OPTION]
        - name: uly
          in: query
          description: Underlying (Applicable to FUTURES/SWAP/OPTION)
          required: false
          schema:
            type: string
        - name: instFamily
          in: query
          description: Instrument family (Applicable to FUTURES/SWAP/OPTION)
          required: false
          schema:
            type: string
        - name: instId
          in: query
          description: Instrument ID, e.g., BTC-USDT
          required: false
          schema:
            type: string
        - name: ordType
          in: query
          description: Order type
          required: false
          schema:
            type: string
            enum:
              - market
              - limit
              - post_only
              - fok
              - ioc
              - optimal_limit_ioc
              - mmp
              - mmp_and_post_only
              - op_fok
        - name: state
          in: query
          description: State of the order
          required: false
          schema:
            type: string
            enum: [canceled, filled, mmp_canceled]
        - name: category
          in: query
          description: Category of the order
          required: false
          schema:
            type: string
            enum:
              [twap, adl, full_liquidation, partial_liquidation, delivery, ddh]
        - name: after
          in: query
          description: Pagination of data to return records earlier than the requested ordId
          required: false
          schema:
            type: string
        - name: before
          in: query
          description: Pagination of data to return records newer than the requested ordId
          required: false
          schema:
            type: string
        - name: begin
          in: query
          description: Filter with a begin timestamp (Unix timestamp format in milliseconds)
          required: false
          schema:
            type: string
        - name: end
          in: query
          description: Filter with an end timestamp (Unix timestamp format in milliseconds)
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Number of results per request. The maximum is 100; The default is 100.
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /trade/orders-history-archive:
    get:
      summary: GET Order history (last 3 months)
      description: "Get completed orders which are placed in the last 7 days, including those placed 3 months ago but completed in the last 7 days.<br>The incomplete orders that have been canceled are only reserved for 2 hours.<br>Rate Limit: 40 requests per 2 seconds<br>Rate limit rule: UserID"
      tags:
        - Order Book Trading
      parameters:
        - name: instType
          in: query
          description: Instrument type
          required: true
          schema:
            type: string
            enum: [SPOT, MARGIN, SWAP, FUTURES, OPTION]
        - name: uly
          in: query
          description: Underlying (Applicable to FUTURES/SWAP/OPTION)
          required: false
          schema:
            type: string
        - name: instFamily
          in: query
          description: Instrument family (Applicable to FUTURES/SWAP/OPTION)
          required: false
          schema:
            type: string
        - name: instId
          in: query
          description: Instrument ID, e.g., BTC-USDT
          required: false
          schema:
            type: string
        - name: ordType
          in: query
          description: Order type
          required: false
          schema:
            type: string
            enum:
              - market
              - limit
              - post_only
              - fok
              - ioc
              - optimal_limit_ioc
              - mmp
              - mmp_and_post_only
              - op_fok
        - name: state
          in: query
          description: State of the order
          required: false
          schema:
            type: string
            enum: [canceled, filled, mmp_canceled]
        - name: category
          in: query
          description: Category of the order
          required: false
          schema:
            type: string
            enum:
              [twap, adl, full_liquidation, partial_liquidation, delivery, ddh]
        - name: after
          in: query
          description: Pagination of data to return records earlier than the requested ordId
          required: false
          schema:
            type: string
        - name: before
          in: query
          description: Pagination of data to return records newer than the requested ordId
          required: false
          schema:
            type: string
        - name: begin
          in: query
          description: Filter with a begin timestamp (Unix timestamp format in milliseconds)
          required: false
          schema:
            type: string
        - name: end
          in: query
          description: Filter with an end timestamp (Unix timestamp format in milliseconds)
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Number of results per request. The maximum is 100; The default is 100.
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /trade/fills:
    get:
      summary: GET transaction details
      description: "Retrieve recently-filled transaction details in the last 3 day.<br>Rate Limit: 60 requests per 2 seconds<br>Rate limit rule: UserID"
      tags:
        - Order Book Trading
      parameters:
        - name: instType
          in: query
          description: Instrument type.
          required: false
          schema:
            type: string
            enum: [SPOT, MARGIN, SWAP, FUTURES, OPTION]
        - name: uly
          in: query
          description: Underlying (Applicable to FUTURES/SWAP/OPTION).
          required: false
          schema:
            type: string
        - name: instFamily
          in: query
          description: Instrument family (Applicable to FUTURES/SWAP/OPTION).
          required: false
          schema:
            type: string
        - name: instId
          in: query
          description: Instrument ID, e.g., BTC-USDT.
          required: false
          schema:
            type: string
        - name: ordId
          in: query
          description: Order ID.
          required: false
          schema:
            type: string
        - name: subType
          in: query
          description: Transaction type.
          required: false
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
              - 100
              - 101
              - 102
              - 103
              - 104
              - 105
              - 106
              - 107
              - 110
              - 111
              - 118
              - 119
              - 125
              - 126
              - 127
              - 128
              - 204
              - 205
              - 206
              - 207
              - 208
              - 209
              - 212
              - 213
              - 270
              - 271
              - 272
              - 273
              - 274
              - 275
        - name: after
          in: query
          description: Pagination to return records earlier than the requested billId.
          required: false
          schema:
            type: string
        - name: before
          in: query
          description: Pagination to return records newer than the requested billId.
          required: false
          schema:
            type: string
        - name: begin
          in: query
          description: Filter with a begin timestamp (ts). Unix timestamp in milliseconds, e.g., 1597026383085.
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: Filter with an end timestamp (ts). Unix timestamp in milliseconds, e.g., 1597026383085.
          required: false
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          description: Number of results per request. Maximum is 100; Default is 100.
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/TransactionsResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /trade/fills-history:
    get:
      summary: GET transaction history
      tags:
        - Order Book Trading
      parameters:
        - name: instType
          in: query
          description: Instrument type.
          required: false
          schema:
            type: string
            enum: [SPOT, MARGIN, SWAP, FUTURES, OPTION]
        - name: uly
          in: query
          description: Underlying (Applicable to FUTURES/SWAP/OPTION).
          required: false
          schema:
            type: string
        - name: instFamily
          in: query
          description: Instrument family (Applicable to FUTURES/SWAP/OPTION).
          required: false
          schema:
            type: string
        - name: instId
          in: query
          description: Instrument ID, e.g., BTC-USDT.
          required: false
          schema:
            type: string
        - name: ordId
          in: query
          description: Order ID.
          required: false
          schema:
            type: string
        - name: subType
          in: query
          description: Transaction type.
          required: false
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
              - 100
              - 101
              - 102
              - 103
              - 104
              - 105
              - 106
              - 107
              - 110
              - 111
              - 118
              - 119
              - 125
              - 126
              - 127
              - 128
              - 204
              - 205
              - 206
              - 207
              - 208
              - 209
              - 212
              - 213
              - 270
              - 271
              - 272
              - 273
              - 274
              - 275
        - name: after
          in: query
          description: Pagination to return records earlier than the requested billId.
          required: false
          schema:
            type: string
        - name: before
          in: query
          description: Pagination to return records newer than the requested billId.
          required: false
          schema:
            type: string
        - name: begin
          in: query
          description: Filter with a begin timestamp (ts). Unix timestamp in milliseconds, e.g., 1597026383085.
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: Filter with an end timestamp (ts). Unix timestamp in milliseconds, e.g., 1597026383085.
          required: false
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          description: Number of results per request. Maximum is 100; Default is 100.
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/TransactionsResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /trade/easy-convert-currency-list:
    get:
      summary: Easy convert currency list
      tags:
        - Order Book Trading
      parameters:
        - name: source
          in: query
          description: Funding Source
          schema:
            type: string
            enum: ["1", "2"]
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/ConvertorResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /trade/easy-convert:
    get:
      summary: Easy convert currency list
      tags:
        - Order Book Trading
      parameters:
        - name: fromCcy
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
            maxItems: 5
          description: Comma-separated list of small payment currencies to convert from. Maximum 5 currencies allowed.
        - name: toCcy
          in: query
          required: true
          schema:
            type: string
          description: Type of mainstream currency to convert to. Only one receiving currency is allowed, and it cannot be the same as the small payment currencies.
        - name: source
          in: query
          required: false
          schema:
            type: string
            enum:
              - "1"
              - "2"
          description: "Funding source for the conversion. Default is 1. Possible values: <br>`1`: Trading account  <br>                       `2`: Funding account"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/EasyConvertorResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      summary: Place Easy convert currency
      tags:
        - Order Book Trading
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlaceConversionRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/EasyConvertorResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /trade/easy-convert-history:
    get:
      summary: Easy convert history
      tags:
        - Order Book Trading
      description: "Get the history and status of easy convert trades in the past 7 days.<br>Rate Limit: 1 request per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - name: after
          in: query
          required: false
          description: Pagination of data to return records earlier than the requested time (exclude), Unix timestamp format in milliseconds, e.g. 1597026383085
          schema:
            type: string
        - name: before
          in: query
          required: false
          description: Pagination of data to return records newer than the requested time (exclude), Unix timestamp format in milliseconds, e.g. 1597026383085
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: "Number of results per request. The maximum is 100. The default is 100."
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/EasyConvertorResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /trade/one-click-repay-currency-list:
    get:
      summary: Easy convert history
      tags:
        - Order Book Trading
      description: "Get list of debt currency data and repay currencies. Debt currencies include both cross and isolated debts.<br>Rate Limit: 1 request per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - name: deptType
          in: query
          required: false
          description: "Debt type,cross: cross,isolated: isolated"
          schema:
            type: string
            enum: ["isolated", "cross"]

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/RepayResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /trade/one-click-repay:
    post:
      summary: Trade one-click repay
      tags:
        - Order Book Trading
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DebtRepayRequest"
      parameters:
        - name: deptType
          in: query
          required: false
          description: "Debt type,cross: cross,isolated: isolated"
          schema:
            type: string
            enum: ["isolated", "cross"]

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/EasyConvertorResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /trade/one-click-repay-history:
    get:
      summary: Trade one-click repay
      tags:
        - Order Book Trading
      parameters:
        - name: after
          in: query
          required: false
          description: Pagination of data to return records earlier than the requested time (exclude), Unix timestamp format in milliseconds, e.g. 1597026383085
          schema:
            type: string
        - name: before
          in: query
          required: false
          description: Pagination of data to return records newer than the requested time (exclude), Unix timestamp format in milliseconds, e.g. 1597026383085
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: "Number of results per request. The maximum is 100. The default is 100."
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/EasyConvertorResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /trade/mass-cancel:
    post:
      summary: Mass Cancel Order
      tags:
        - Order Book Trading
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MassCancelRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/CancelAllResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /trade/account-rate-limit:
    get:
      summary: Get account rate limit
      tags:
        - Order Book Trading
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/RateLimitResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /trade/order-precheck:
    post:
      summary: Get order precheck
      tags:
        - Order Book Trading
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrecheckResponse"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/PreCheckResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /trade/order-algo:
    post:
      summary: place algo order
      tags:
        - Order Book Trading
      description: "The algo order includes trigger order, oco order, conditional order, twap order and trailing order.<br>Rate Limit: 20 requests per 2 seconds<br>Rate Limit of lead instruments for Copy Trading: 1 request per 2 seconds<br>Rate limit rule (except Options): UserID + Instrument ID<br>Rate limit rule (Options only): UserID + Instrument Family"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/StopLossRequest"
                - $ref: "#/components/schemas/TriggerRequest"
                - $ref: "#/components/schemas/TrailingRequest"
                - $ref: "#/components/schemas/TwapRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/AlgoOrderResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      summary: Algo order details
      tags:
        - Order Book Trading
      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - name: algoId
          in: query
          required: false
          schema:
            type: string
          description: |
            Algorithmic Order ID. Either `algoId` or `algoClOrdId` must be provided.
            If both are passed, `algoId` will be used.
        - name: algoClOrdId
          in: query
          required: false
          schema:
            type: string
            pattern: "^[a-zA-Z0-9]{1,32}$"
          description: |
            Client-supplied Algorithmic Order ID. A combination of case-sensitive alphanumerics, all numbers, or all letters of up to 32 characters.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/AlgoOrderDetailedResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /trade/cancel-algos:
    post:
      summary: cancel algo order
      tags:
        - Order Book Trading
      description: "Cancel unfilled algo orders. A maximum of 10 orders can be canceled per request. Request parameters should be passed in the form of an array.<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule (except Options): UserID + Instrument ID<br>Rate limit rule (Options only): UserID + Instrument Family"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AlgoOrderRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/AlgoOrderCancelResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /trade/amend-algos:
    post:
      summary: Amend algo order
      tags:
        - Order Book Trading
      description: "Amend unfilled algo orders (Support Stop order and Trigger order only, not including Move_order_stop order, Iceberg order, TWAP order, Trailing Stop order).<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/AlgoAmendRequest"
                - $ref: "#/components/schemas/AlgoStopRequest"
                - $ref: "#/components/schemas/AlgoTriggerRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/AlgoOrderResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /trade/orders-algo-pending:
    get:
      summary: Retrieve a list of untriggered Algo orders under the current account.
      tags:
        - Order Book Trading
      parameters:
        - in: query
          name: ordType
          required: false
          schema:
            type: string
            description: |
              Order type. Supported values:
              - conditional: One-way stop order
              - oco: One-cancels-the-other order
              - trigger: Trigger order
              - move_order_stop: Trailing order
              - iceberg: Iceberg order
              - twap: TWAP order
              For conditional and oco, both can be used and separated with a comma.
        - in: query
          name: algoId
          required: false
          schema:
            type: string
            description: Algo ID.
        - in: query
          name: algoClOrdId
          required: false
          schema:
            type: string
            description: |
              Client-supplied Algo ID. A combination of case-sensitive alphanumerics, all numbers, or all letters of up to 32 characters.
        - in: query
          name: instType
          required: false
          schema:
            type: string
            enum:
              - SPOT
              - SWAP
              - FUTURES
              - MARGIN
            description: Instrument type.
        - in: query
          name: instId
          required: false
          schema:
            type: string
            description: Instrument ID, e.g. BTC-USDT.
        - in: query
          name: after
          required: false
          schema:
            type: string
            description: Pagination of data to return records earlier than the requested algoId.
        - in: query
          name: before
          required: false
          schema:
            type: string
            description: Pagination of data to return records newer than the requested algoId.
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
            description: Number of results per request.

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/AlgoOrderDetailedResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /trade/orders-algo-history:
    get:
      summary: Retrieve a list of all algo orders under the current account in the last 3 months.
      tags:
        - Order Book Trading
      parameters:
        - in: query
          name: Type
          required: true
          schema:
            type: string
            description: |
              Order type. Supported values:
              - conditional: One-way stop order
              - oco: One-cancels-the-other order
              - trigger: Trigger order
              - move_order_stop: Trailing order
              - iceberg: Iceberg order
              - twap: TWAP order
              For conditional and oco, both can be used and separated with a comma.
        - in: query
          name: state
          required: false
          schema:
            type: string
            enum:
              - effective
              - canceled
              - order_failed
            description: State. Either `state` or `algoId` is required.
        - in: query
          name: algoId
          required: false
          schema:
            type: string
            description: Algo ID. Either `state` or `algoId` is required.
        - in: query
          name: instType
          required: false
          schema:
            type: string
            enum:
              - SPOT
              - SWAP
              - FUTURES
              - MARGIN
            description: Instrument type.
        - in: query
          name: instId
          required: false
          schema:
            type: string
            description: Instrument ID, e.g., BTC-USDT.
        - in: query
          name: after
          required: false
          schema:
            type: string
            description: Pagination of data to return records earlier than the requested algoId.
        - in: query
          name: before
          required: false
          schema:
            type: string
            description: Pagination of data to return records newer than the requested algoId.
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
            description: Number of results per request. The maximum is 100.

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/AlgoOrderDetailedResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/grid/order-algo:
    post:
      summary: Amend algo order
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []

      description: "Grid trading works by the simple strategy of buy low and sell high. After you set the parameters, the system automatically places orders at incrementally increasing or decreasing prices. Overall, the grid bot seeks to capitalize on normal price volatility by placing buy and sell orders at certain regular intervals above and below a predefined base price.<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/GridAlgoPlaceRequest"
                - $ref: "#/components/schemas/GridSpotRequest"
                - $ref: "#/components/schemas/GridContractRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderInfo"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/grid/amend-order-algo:
    post:
      summary: Amend grid algo order
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []

      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GridAmendRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderInfo"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/grid/stop-order-algo:
    post:
      summary: A maximum of 10 orders can be stopped per request.
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []

      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GridStopRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderInfo"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/grid/close-position:
    post:
      summary: A maximum of 10 orders can be stopped per request.
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []

      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BotClosePositionRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderInfo"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/grid/cancel-close-order:
    post:
      summary: Cancel close position order for contract grid
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []

      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BotCloseRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderInfo"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/grid/order-instant-trigger:
    post:
      summary: Instant trigger Grid algo
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []

      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BotTriggerRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/BotTriggerResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/grid/orders-algo-pending:
    get:
      summary: Grid order list
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []

      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      parameters:
        - in: query
          name: algoOrdType
          required: true
          schema:
            type: string
            enum:
              - grid
              - contract_grid
          description: |
            Algo order type:
            - `grid`: Spot grid
            - `contract_grid`: Contract grid
        - in: query
          name: algoId
          required: false
          schema:
            type: string
          description: Algo ID.
        - in: query
          name: instId
          required: false
          schema:
            type: string
          description: |
            Instrument ID, e.g., BTC-USDT.
        - in: query
          name: instType
          required: false
          schema:
            type: string
            enum:
              - SPOT
              - MARGIN
              - FUTURES
              - SWAP
          description: |
            Instrument type:
            - `SPOT`
            - `MARGIN`
            - `FUTURES`
            - `SWAP`
        - in: query
          name: after
          required: false
          schema:
            type: string
          description: |
            Pagination of data to return records earlier than the requested `algoId`.
        - in: query
          name: before
          required: false
          schema:
            type: string
          description: |
            Pagination of data to return records newer than the requested `algoId`.
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            default: 100
            maximum: 100
          description: |
            Number of results per request.
            - The maximum is 100.
            - The default is 100.

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/BotAlgoPendingResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/grid/orders-algo-history:
    get:
      summary: algo order history
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []

      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      parameters:
        - in: query
          name: algoOrdType
          required: true
          schema:
            type: string
            enum:
              - grid
              - contract_grid
          description: |
            Algo order type:
            - `grid`: Spot grid
            - `contract_grid`: Contract grid
        - in: query
          name: algoId
          required: false
          schema:
            type: string
          description: Algo ID.
        - in: query
          name: instId
          required: false
          schema:
            type: string
          description: |
            Instrument ID, e.g., BTC-USDT.
        - in: query
          name: instType
          required: false
          schema:
            type: string
            enum:
              - SPOT
              - MARGIN
              - FUTURES
              - SWAP
          description: |
            Instrument type:
            - `SPOT`
            - `MARGIN`
            - `FUTURES`
            - `SWAP`
        - in: query
          name: after
          required: false
          schema:
            type: string
          description: |
            Pagination of data to return records earlier than the requested `algoId`.
        - in: query
          name: before
          required: false
          schema:
            type: string
          description: |
            Pagination of data to return records newer than the requested `algoId`.
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            default: 100
            maximum: 100
          description: |
            Number of results per request.
            - The maximum is 100.
            - The default is 100.

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/BotAlgoPendingResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/grid/orders-algo-details:
    get:
      summary: algo order details
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []

      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      parameters:
        - in: query
          name: algoOrdType
          required: true
          schema:
            type: string
            enum:
              - grid
              - contract_grid
          description: |
            Algo order type:
            - `grid`: Spot grid
            - `contract_grid`: Contract grid
        - in: query
          name: algoId
          required: false
          schema:
            type: string
          description: Algo ID.

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/BotAlgoPendingResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/grid/sub-orders:
    get:
      summary: algo order details
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []

      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      parameters:
        - name: algoOrdType
          in: query
          required: true
          schema:
            type: string
            enum:
              - grid
              - contract_grid
          description: |
            Algo order type:
            - `grid`: Spot grid
            - `contract_grid`: Contract grid
        - name: algoId
          in: query
          required: true
          schema:
            type: string
          description: Algo ID
        - name: type
          in: query
          required: true
          schema:
            type: string
            enum:
              - live
              - filled
          description: Sub order state
        - name: groupId
          in: query
          required: false
          schema:
            type: string
          description: Group ID
        - name: after
          in: query
          required: false
          schema:
            type: string
          description: |
            Pagination of data to return records earlier than the requested `ordId`.
        - name: before
          in: query
          required: false
          schema:
            type: string
          description: |
            Pagination of data to return records newer than the requested `ordId`.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: Number of results per request. The maximum is 100.

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderInfo"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/grid/positions:
    get:
      summary: Grid algo order positions
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []

      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      parameters:
        - name: algoOrdType
          in: query
          required: true
          schema:
            type: string
            enum:
              - grid
              - contract_grid
          description: |
            Algo order type:
            - `grid`: Spot grid
            - `contract_grid`: Contract grid
        - name: algoId
          in: query
          required: true
          schema:
            type: string
          description: Algo ID
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderInfo"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/grid/withdraw-income:
    post:
      summary: Spot grid withdraw income
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []

      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                algoId:
                  type: string
                  example: "448965992920907776"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/withdrawResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/grid/compute-margin-balance:
    post:
      summary: Compute margin balance
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []

      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                algoId:
                  type: string
                  description: Algo ID
                type:
                  type: string
                  description: Adjust margin balance type
                  enum:
                    - add
                    - reduce
                amt:
                  type: string
                  description: Adjust margin balance amount. Default is zero.
              required:
                - algoId
                - type
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/MarginResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/grid/margin-balance:
    post:
      summary: Adjust margin balance
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []

      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                algoId:
                  type: string
                  description: Algo ID
                type:
                  type: string
                  description: Adjust margin balance type
                  enum:
                    - add
                    - reduce
                amt:
                  type: string
                  description: Adjust margin balance amount. Default is zero.
              required:
                - algoId
                - type
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/BotTriggerResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/grid/adjust-investment:
    post:
      summary: Adjust investment
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []

      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                algoId:
                  type: string
                  description: Algo ID
                amt:
                  type: string
                  description: Adjust margin balance amount. Default is zero.
              required:
                - algoId
                - amt
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            algoId:
                              type: string

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/grid/ai-param:
    get:
      summary: Grid AI parameter (public)
      tags:
        - Order Book Trading
      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      parameters:
        - name: algoOrdType
          in: query
          required: true
          schema:
            type: string
            enum:
              - grid
              - contract_grid
          description: Algo order type (Spot grid or Contract grid)

        - name: instId
          in: query
          required: true
          schema:
            type: string
          description: Instrument ID, e.g., BTC-USDT

        - name: direction
          in: query
          required: false
          schema:
            type: string
            enum:
              - long
              - short
              - neutral
          description: Contract grid type, required when `algoOrdType` is contract_grid

        - name: duration
          in: query
          required: false
          schema:
            type: string
            enum:
              - 7D
              - 30D
              - 180D
          description: Back testing duration. Default is 7D for Spot grid. Only 7D is available for Contract grid.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/AIParams"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/grid/min-investment:
    post:
      summary: Compute min investment (public)
      tags:
        - Order Book Trading
      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MinInvestmentRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/MinInvestmentResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/grid/rsi-back-testing:
    post:
      summary: RSI back testing (public)
      tags:
        - Order Book Trading
      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      parameters:
        - name: instId
          in: query
          required: true
          description: Instrument ID (e.g., BTC-USDT), only applicable to SPOT.
          schema:
            type: string
        - name: timeframe
          in: query
          required: true
          description: K-line type (e.g., 3m, 5m, 1H, 1D).
          schema:
            type: string
            enum:
              - "3m"
              - "5m"
              - "15m"
              - "30m"
              - "1H"
              - "4H"
              - "1D"
        - name: thold
          in: query
          required: true
          description: Threshold value between 1 and 100.
          schema:
            type: string
            pattern: "^[1-9][0-9]?$|^100$" # Ensures a number between 1 and 100
        - name: timePeriod
          in: query
          required: true
          description: Time period, default is 14.
          schema:
            type: string
            example: "14"
        - name: triggerCond
          in: query
          required: false
          description: Trigger condition. Default is 'cross_down'.
          schema:
            type: string
            enum:
              - "cross_up"
              - "cross_down"
              - "above"
              - "below"
              - "cross"
            default: "cross_down"
        - name: duration
          in: query
          required: false
          description: Back testing duration. Default is 1M (1 Month).
          schema:
            type: string
            enum:
              - "1M"
            default: "1M"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            triggerNum:
                              type: string
                              example: "164"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/grid/grid-quantity:
    get:
      summary: Max grid quantity (public)
      tags:
        - Order Book Trading
      description: "Maximum grid quantity can be retrieved from this endpoint. Minimum grid quantity always is 2.<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      parameters:
        - name: instId
          in: query
          required: true
          description: Instrument ID (e.g., BTC-USDT).
          schema:
            type: string
        - name: runType
          in: query
          required: true
          description: "Grid type (1: Arithmetic, 2: Geometric)."
          schema:
            type: string
            enum:
              - "1"
              - "2"
        - name: algoOrdType
          in: query
          required: true
          description: "Algo order type (grid: Spot grid, contract_grid: Contract grid)."
          schema:
            type: string
            enum:
              - "grid"
              - "contract_grid"
        - name: maxPx
          in: query
          required: true
          description: Upper price of the price range.
          schema:
            type: string
        - name: minPx
          in: query
          required: true
          description: Lower price of the price range.
          schema:
            type: string
        - name: lever
          in: query
          required: false
          description: Leverage (only required for contract grid).
          schema:
            type: string
            default: "null"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            maxGridQty:
                              type: string
                              example: "164"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/signal/create-signal:
    post:
      summary: Create Signal
      tags:
        - Order Book Trading
      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignalRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/SignalResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/signal/signals:
    get:
      summary: Signals information
      tags:
        - Order Book Trading
      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      parameters:
        - name: signalSourceType
          in: query
          required: true
          schema:
            type: string
            enum:
              - "1"
              - "2"
              - "3"
          description: |
            Signal source type:
            1: Created by yourself
            2: Subscribe
            3: Free signal

        - name: signalChanId
          in: query
          required: false
          schema:
            type: string
          description: Signal channel ID (optional)

        - name: after
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: |
            Pagination of data to return records signalChanId earlier than the requested timestamp.
            Format: Unix timestamp in milliseconds, e.g., 1597026383085

        - name: before
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: |
            Pagination of data to return records signalChanId newer than the requested timestamp.
            Format: Unix timestamp in milliseconds, e.g., 1597026383085

        - name: limit
          in: query
          required: false
          schema:
            type: string
            default: "100"
          description: |
            Number of results per request. The maximum is 100. Default is 100.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/SignalChannelResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/signal/order-algo:
    post:
      summary: create signal bot
      tags:
        - Order Book Trading
      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignalsRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/SignalsResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/signal/stop-order-algo:
    post:
      summary: A maximum of 10 orders can be stopped per request.
      tags:
        - Order Book Trading
      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                algoId:
                  type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/SignalsResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/signal/margin-balance:
    post:
      summary: Adjust margin balance
      tags:
        - Order Book Trading
      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarginSignal"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            algoId:
                              type: string

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/signal/amendTPSL:
    post:
      summary: Adjust margin balance
      tags:
        - Order Book Trading
      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TPSLSignal"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            algoId:
                              type: string

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/signal/set-instruments:
    post:
      summary: Set instruments
      tags:
        - Order Book Trading
      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstrumentRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            algoId:
                              type: string

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/signal/orders-algo-details:
    get:
      summary: Signal bot order
      tags:
        - Order Book Trading
      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      parameters:
        - name: algoOrdType
          in: query
          required: true
          schema:
            type: string
            enum:
              - grid
              - contract_grid
          description: |
            Algo order type:
            - `grid`: Spot grid
            - `contract_grid`: Contract grid
        - name: algoId
          in: query
          required: true
          schema:
            type: string
          description: Algo ID

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/SignalBotResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/signal/orders-algo-pending:
    get:
      summary: Active Signal bot order
      tags:
        - Order Book Trading
      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      parameters:
        - name: algoOrdType
          in: query
          required: true
          schema:
            type: string
            enum:
              - grid
              - contract_grid
          description: |
            Algo order type:
            - `grid`: Spot grid
            - `contract_grid`: Contract grid
        - name: algoId
          in: query
          required: true
          schema:
            type: string
          description: Algo ID
        - name: after
          in: query
          schema:
            type: string
            description: "Pagination of data to return records algoId earlier than the requested timestamp, Unix timestamp format in milliseconds, e.g. 1597026383085"
        - name: before
          in: query
          schema:
            type: string
            description: "Pagination of data to return records algoId newer than the requested timestamp, Unix timestamp format in milliseconds, e.g. 1597026383085"
        - name: limit
          in: query
          schema:
            type: string
            description: "Number of results per request. The maximum is 100. The default is 100."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/ActiveSignalResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/signal/orders-algo-history:
    get:
      summary: Active Signal bot History
      tags:
        - Order Book Trading
      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      parameters:
        - name: algoOrdType
          in: query
          required: true
          schema:
            type: string
            enum:
              - grid
              - contract_grid
          description: |
            Algo order type:
            - `grid`: Spot grid
            - `contract_grid`: Contract grid
        - name: algoId
          in: query
          required: true
          schema:
            type: string
          description: Algo ID
        - name: after
          in: query
          schema:
            type: string
            description: "Pagination of data to return records algoId earlier than the requested timestamp, Unix timestamp format in milliseconds, e.g. 1597026383085"
        - name: before
          in: query
          schema:
            type: string
            description: "Pagination of data to return records algoId newer than the requested timestamp, Unix timestamp format in milliseconds, e.g. 1597026383085"
        - name: limit
          in: query
          schema:
            type: string
            description: "Number of results per request. The maximum is 100. The default is 100."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/ActiveSignalResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/signal/positions:
    get:
      summary: Signal bot order positions
      tags:
        - Order Book Trading
      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID + Instrument ID"
      parameters:
        - name: algoOrdType
          in: query
          required: true
          schema:
            type: string
            enum:
              - grid
              - contract_grid
          description: |
            Algo order type:
            - `grid`: Spot grid
            - `contract_grid`: Contract grid
        - name: algoId
          in: query
          required: true
          schema:
            type: string
          description: Algo ID
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/SignalPositionResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/signal/positions-history:
    get:
      summary: Signal bot order positions history
      tags:
        - Order Book Trading
      description: "Retrieve the updated position data for the last 3 months. Return in reverse chronological order using utime."
      parameters:
        - name: instId
          in: query
          required: true
          schema:
            type: string

          description: |
            Instrument ID, e.g.：BTC-USD-SWAP
        - name: algoId
          in: query
          required: true
          schema:
            type: string
          description: Algo ID
        - name: after
          in: query
          required: true
          schema:
            type: string
          description: "Pagination of data to return records earlier than the requested uTime, Unix timestamp format in milliseconds, e.g.1597026383085"
        - name: before
          in: query
          required: true
          schema:
            type: string
          description: "Pagination of data to return records newer than the requested uTime, Unix timestamp format in milliseconds, e.g 1597026383085"
        - name: limit
          in: query
          required: true
          schema:
            type: string
          description: "Number of results per request. The maximum is 100. The default is 100."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/PositionHistoryResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/signal/close-position:
    post:
      summary: Signal bot order positions history
      tags:
        - Order Book Trading
      description: "Retrieve the updated position data for the last 3 months. Return in reverse chronological order using utime."
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                algoId:
                  type: string
                instId:
                  type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            algoId:
                              type: string

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/signal/sub-order:
    post:
      summary: place sub order
      tags:
        - Order Book Trading
      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubOrderResponse"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/signal/cancel-sub-order:
    post:
      summary: cancel sub order
      tags:
        - Order Book Trading
      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelOrder"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/CancelOrder"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/signal/sub-orders:
    get:
      summary: signal bot sub orders
      tags:
        - Order Book Trading
      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - name: algoId
          in: query
          required: true
          schema:
            type: string
          description: Algo ID for the order.
        - name: algoOrdType
          in: query
          required: true
          schema:
            type: string
            enum:
              - contract
          description: Algo order type. Only "contract" is supported.
        - name: state
          in: query
          schema:
            type: string
            enum:
              - live
              - partially_filled
              - filled
              - cancelled
          description: Sub-order state. If provided, it takes precedence over `signalOrdId`.
        - name: signalOrdId
          in: query
          schema:
            type: string
          description: Sub-order ID. Used when `state` is not provided.
        - name: after
          in: query
          schema:
            type: string
          description: Return records earlier than the specified `ordId`.
        - name: before
          in: query
          schema:
            type: string
          description: Return records newer than the specified `ordId`.
        - name: begin
          in: query
          schema:
            type: string
            format: int64
          description: Return records with `ctime` after the specified timestamp (inclusive).
        - name: end
          in: query
          schema:
            type: string
            format: int64
          description: Return records with `ctime` before the specified timestamp (inclusive).
        - name: limit
          in: query
          schema:
            type: integer
            default: 100
            maximum: 100
          description: Number of results per request. Default is 100.
        - name: type
          in: query
          schema:
            type: string
            enum:
              - live
              - filled
          description: Sub-order type. If provided, takes precedence over `clOrdId`.
        - name: clOrdId
          in: query
          schema:
            type: string
          deprecated: true
          description: Sub-order client-supplied ID. This parameter is being deprecated.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/BotSuborderResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/signal/event-history:
    get:
      summary: Signal bot event history
      tags:
        - Order Book Trading
      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - name: algoId
          in: query
          required: true
          schema:
            type: string
          description: Algo ID for the order.
        - name: algoOrdType
          in: query
          required: true
          schema:
            type: string
            enum:
              - contract
          description: Algo order type. Only "contract" is supported.
        - name: after
          in: query
          schema:
            type: string
          description: Return records earlier than the specified `ordId`.
        - name: before
          in: query
          schema:
            type: string
          description: Return records newer than the specified `ordId`.
        - name: limit
          in: query
          schema:
            type: integer
            default: 100
            maximum: 100
          description: Number of results per request. Default is 100.

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/EventHistoryResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/recurring/order-algo:
    post:
      summary: Signal bot event history
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Recurring buy is a strategy for investing a fixed amount in crypto at fixed intervals. An appropriate recurring approach in volatile markets allows you to buy crypto at lower costs.<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: UserID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecurringOrder"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderInfo"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/recurring/amend-order-algo:
    post:
      summary: Amend recurring buy order
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecurringAmendOrder"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderInfo"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/recurring/stop-order-algo:
    post:
      summary: Stop recurring buy order
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                algoId:
                  type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderInfo"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/recurring/orders-algo-pending:
    get:
      summary: Recurring buy order list
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      parameters:
        - name: after
          in: query
          required: false
          schema:
            type: string
          description: Pagination of data to return records earlier than the requested algoId.
        - name: before
          in: query
          required: false
          schema:
            type: string
          description: Pagination of data to return records newer than the requested algoId.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: |
            Number of results per request.
            - Maximum: 100.
            - Default: 100.

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/RecurringAlgoOrder"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/recurring/orders-algo-history:
    get:
      summary: Recurring buy order history
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      parameters:
        - name: algoId
          in: query
          required: true
          schema:
            type: string
        - name: after
          in: query
          required: false
          schema:
            type: string
          description: Pagination of data to return records earlier than the requested algoId.
        - name: before
          in: query
          required: false
          schema:
            type: string
          description: Pagination of data to return records newer than the requested algoId.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: |
            Number of results per request.
            - Maximum: 100.
            - Default: 100.

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/RecurringAlgoOrder"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/recurring/orders-algo-details:
    get:
      summary: Recurring buy order history
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      parameters:
        - name: algoId
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/RecurringAlgoOrder"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /tradingBot/recurring/sub-orders:
    get:
      summary: Recurring buy sub orders
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      parameters:
        - name: algoId
          in: query
          required: true
          schema:
            type: string
        - name: ordId
          in: query
          required: true
          schema:
            type: string
        - name: after
          in: query
          required: false
          schema:
            type: string
          description: Pagination of data to return records earlier than the requested algoId.
        - name: before
          in: query
          required: false
          schema:
            type: string
          description: Pagination of data to return records newer than the requested algoId.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: |
            Number of results per request.
            - Maximum: 100.
            - Default: 100.

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/current-subpositions:
    get:
      summary: Existing lead or copy positions
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Retrieve lead or copy positions that are not closed.<br>Returns reverse chronological order with openTime"
      parameters:
        - name: instType
          in: query
          required: false
          schema:
            type: string
            enum:
              - SPOT
              - SWAP
          description: |
            Instrument type. Returns all types by default.
        - name: instId
          in: query
          required: false
          schema:
            type: string
          description: Instrument ID, e.g., BTC-USDT-SWAP
        - name: uniqueCode
          in: query
          required: false
          schema:
            type: string
            pattern: "^[a-zA-Z0-9]{16}$"
          description: |
            Unique code, only applicable to copy trading.
            A combination of case-sensitive alphanumerics or all numbers with a length of 16 characters.
            Example: 213E8C92DC61EFAC.
        - name: subPosType
          in: query
          required: false
          schema:
            type: string
            enum:
              - lead
              - copy
          description: |
            Data type.
            - lead: lead trading (default value).
            - copy: copy trading.
        - name: after
          in: query
          required: false
          schema:
            type: string
          description: |
            Pagination of data to return records earlier than the requested subPosId.
        - name: before
          in: query
          required: false
          schema:
            type: string
          description: |
            Pagination of data to return records newer than the requested subPosId.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            maximum: 500
            default: 500
          description: |
            Number of results per request.
            Maximum is 500. Default is 500.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/LeadResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/subpositions-history:
    get:
      summary: Lead or copy position history
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Retrieve the completed lead or copy position of the last 3 months.<br>Returns reverse chronological order with subPosId.<br>Rate limit: 20 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - name: instType
          in: query
          required: false
          schema:
            type: string
            enum:
              - SPOT
              - SWAP
          description: |
            Instrument type. Returns all types by default.
        - name: instId
          in: query
          required: false
          schema:
            type: string
          description: Instrument ID, e.g., BTC-USDT-SWAP
        - name: subPosType
          in: query
          required: false
          schema:
            type: string
            enum:
              - lead
              - copy
          description: |
            Data type.
            - lead: lead trading (default value).
            - copy: copy trading.
        - name: after
          in: query
          required: false
          schema:
            type: string
          description: |
            Pagination of data to return records earlier than the requested subPosId.
        - name: before
          in: query
          required: false
          schema:
            type: string
          description: |
            Pagination of data to return records newer than the requested subPosId.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            maximum: 500
            default: 500
          description: |
            Number of results per request.
            Maximum is 500. Default is 500.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/LeadResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/algo-order:
    post:
      summary: Set TP/SL for the current lead or copy position that are not closed.
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Rate limit: 20 requests per 2 seconds<br>Rate limit rule: UserID"
      requestBody:
        content:
          applications/json:
            schema:
              $ref: "#/components/schemas/LeadPlaceRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/LeadPlaceResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/close-subposition:
    post:
      summary: Close lead or copy position
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "You can only close a lead or copy position once a time.<br>It is required to pass subPosId.<br>Rate limit: 20 requests per 2 seconds<br>Rate limit rule: UserID"
      requestBody:
        content:
          applications/json:
            schema:
              $ref: "#/components/schemas/LeadSubPositionRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/LeadPlaceResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/instruments:
    get:
      summary: Leading instruments
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Rate limit: 20 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - in: query
          name: instType
          required: true
          schema:
            type: string
            example: SWAP or SPOT
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            instId:
                              type: string
                            enabled:
                              type: boolean
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/set-instruments:
    post:
      summary: Amend leading instruments
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "The leading trader can amend current leading instruments, need to set initial leading instruments while applying to become a leading trader.<br>All non-leading instruments can't have position or pending orders for the current request when setting non-leading instruments as leading instruments.<br>Rate limit: 20 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - in: query
          name: instType
          required: false
          schema:
            type: string
            example: SWAP or SPOT
        - in: query
          name: instId
          required: true
          schema:
            type: string
            example: Instrument ID, e.g. BTC-USDT-SWAP. If there are multiple instruments, separate them with commas
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            instId:
                              type: string
                            enabled:
                              type: boolean
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/profit-sharing-details:
    get:
      summary: Profit sharing details
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "The leading trader gets profits shared details for the last 3 months.<br>Rate limit: 20 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - in: query
          name: instType
          required: false
          schema:
            type: string
            example: SWAP or SPOT
        - in: query
          name: after
          required: true
          schema:
            type: string
            example: Pagination of data to return records earlier than the requested profitSharingId
        - in: query
          name: before
          required: true
          schema:
            type: string
            example: Pagination of data to return records newer than the requested profitSharingId
        - in: query
          name: limit
          required: true
          schema:
            type: string
            example: Number of results per request. Maximum is 100. Default is 100.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/ProfitLeadResponse"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/total-profit-sharing:
    get:
      summary: total profit sharing
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "The leading trader gets the total amount of profit shared since joining the platform..<br>Rate limit: 20 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - in: query
          name: instType
          required: false
          schema:
            type: string
            example: SWAP or SPOT

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/ProfitLeadResponse"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/unrealized-profit-sharing-details:
    get:
      summary: Unrealized profit sharing details
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "The leading trader gets the profit sharing details that are expected to be shared in the next settlement cycle.<br>The unrealized profit sharing details will update once there copy position is closed.<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - in: query
          name: instType
          required: false
          schema:
            type: string
            example: SWAP or SPOT

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/ProfitLeadResponse"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/total-unrealized-profit-sharing:
    get:
      summary: total Unrealized profit sharing details
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "The leading trader gets the profit sharing details that are expected to be shared in the next settlement cycle.<br>The unrealized profit sharing details will update once there copy position is closed.<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - in: query
          name: instType
          required: false
          schema:
            type: string
            example: SWAP or SPOT

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/ProfitLeadResponse"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/apply-lead-trading:
    post:
      summary: Apply for lead trading
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Only ND broker sub-account whitelisted can apply for lead trader by this endpoint. It will be passed immediately.<br>Please reach out to BD for help if you want to be whitelisted.<br>For other accounts, e.g. ND main accounts and general main and sub-accounts, still need to apply on the web manually<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                instType:
                  type: string
                instId:
                  type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          result:
                            type: boolean
                            example: true

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/stop-lead-trading:
    post:
      summary: It is used to stop lead trading for ND broker sub-account.
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Only ND broker sub-account whitelisted can apply for lead trader by this endpoint. It will be passed immediately.<br>Please reach out to BD for help if you want to be whitelisted.<br>For other accounts, e.g. ND main accounts and general main and sub-accounts, still need to apply on the web manually<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                instType:
                  type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          result:
                            type: boolean
                            example: true

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/amend-profit-sharing-ratio:
    post:
      summary: Amend profit sharing ratio
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "It is used to amend profit sharing ratio.<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                instType:
                  type: string
                profitSharingRatio:
                  type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          result:
                            type: boolean
                            example: true

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/config:
    get:
      summary: Account Configuration
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Retrieve current account configuration related to copy/lead trading.<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/ConfigTrading"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/first-copy-setting:
    post:
      summary: First Copy Setting
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "The first copy settings for the certain lead trader. You need to first copy settings after stopping copying.<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FirstCopyTrading"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          result:
                            type: boolean

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/amend-copy-settings:
    post:
      summary: Amend Copy Setting
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "You need to use this endpoint to amend copy settings.<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FirstCopyTrading"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          result:
                            type: boolean

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/stop-copy-trading:
    post:
      summary: Stop copy trading
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FirstCopyTrading"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          result:
                            type: boolean

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/copy-settings:
    get:
      summary: Stop copy trading
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Retrieve the copy settings about certain lead trader.<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - in: query
          name: instType
          required: false
          schema:
            type: string
            example: "SWAP"
        - in: query
          name: uniqueCode
          required: true
          schema:
            type: string
            description: "Lead trader unique code
              A combination of case-sensitive alphanumerics, all numbers and the length is 16 characters, e.g. 213E8C92DC61EFAC"

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/CopySettings"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/batch-leverage-info:
    get:
      summary: Multiple Leverages
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Retrieve leverages that belong to the lead trader and you.<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - in: query
          name: mgnMode
          required: true
          schema:
            type: string
            example: "CROSS or ISOLATED"
        - in: query
          name: instId
          required: false
          schema:
            type: string
            example: "Instrument ID.If there are multiple instruments, separate them with commas."
        - in: query
          name: uniqueCode
          required: true
          schema:
            type: string
            description: "Lead trader unique code
              A combination of case-sensitive alphanumerics, all numbers and the length is 16 characters, e.g. 213E8C92DC61EFAC"

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Leverages"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/batch-set-leverage:
    post:
      summary: Multiple Leverages
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Retrieve leverages that belong to the lead trader and you.<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LeveragesRequest"

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/LeveragesResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/current-lead-traders:
    get:
      summary: My Lead Traders
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Retrieve leverages that belong to the lead trader and you.<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - in: query
          name: instType
          required: true
          schema:
            type: string
            example: "SWAP"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/CurrentLeaderTrader"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/public-config:
    get:
      summary: Copy trading configuration
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Public endpoint. Retrieve copy trading parameter configuration information of copy settings.<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - in: query
          name: instType
          required: true
          schema:
            type: string
            example: "SWAP"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/CopyTradingConfig"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/public-lead-traders:
    get:
      summary: Public endpoint. Retrieve lead trader ranks.
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Public endpoint. Retrieve lead trader ranks.<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - name: instType
          in: query
          description: Instrument type
          required: false
          schema:
            type: string
            enum:
              - SWAP
            default: SWAP
        - name: sortType
          in: query
          description: Sort type
          required: false
          schema:
            type: string
            enum:
              - overview
              - pnl
              - aum
              - win_ratio
              - pnl_ratio
              - current_copy_trader_pnl
            default: overview
        - name: state
          in: query
          description: Lead trader state
          required: false
          schema:
            type: string
            enum:
              - "0" # All lead traders, including vacancy and non-vacancy
              - "1" # Lead traders who have vacancy
            default: "0"
        - name: minLeadDays
          in: query
          description: Minimum lead days
          required: false
          schema:
            type: string
            enum:
              - "1" # 7 days
              - "2" # 30 days
              - "3" # 90 days
              - "4" # 180 days
            default: "1"
        - name: minAssets
          in: query
          description: Minimum assets in USDT
          required: false
          schema:
            type: string
        - name: maxAssets
          in: query
          description: Maximum assets in USDT
          required: false
          schema:
            type: string
        - name: minAum
          in: query
          description: Minimum assets under management (AUM) in USDT
          required: false
          schema:
            type: string
        - name: maxAum
          in: query
          description: Maximum assets under management (AUM) in USDT
          required: false
          schema:
            type: string
        - name: dataVer
          in: query
          description: Data version (14 digits)
          required: false
          schema:
            type: string
            example: "20231010182400"
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: string
            default: "1"
        - name: limit
          in: query
          description: Number of results per request (maximum 20, default 10)
          required: false
          schema:
            type: string
            default: "10"
            maximum: 20
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/LeadTradersResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/public-weekly-pnl:
    get:
      summary: Leader trader weekly pnl
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Public endpoint. Retrieve lead trader weekly pnl. Results are returned in counter chronological order.<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - name: instType
          in: query
          description: Instrument type
          required: false
          schema:
            type: string
            enum:
              - SWAP
            default: SWAP
        - name: uniqueCode
          in: query
          description: Lead trader unique code
          required: false
          schema:
            type: string
            default: 213E8C92DC61EFAC
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/LeaderPnl"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/public-pnl:
    get:
      summary: Leader trader daily pnl
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Public endpoint. Retrieve lead trader daily pnl. Results are returned in counter chronological order.<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - name: instType
          in: query
          description: Instrument type
          required: false
          schema:
            type: string
            enum:
              - SWAP
            default: SWAP
        - name: uniqueCode
          in: query
          description: Lead trader unique code
          required: false
          schema:
            type: string
            default: 213E8C92DC61EFAC
        - name: lastDays
          in: query
          required: true
          schema:
            type: string
            enum:
              - 1 //7 days
              - 2 //30 days
              - 3 //90 days
              - 4 //365 days
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/LeaderPnl"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/public-stats:
    get:
      summary: Leader trader stats
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Public endpoint. Retrieve lead trader daily pnl. Results are returned in counter chronological order.<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - name: instType
          in: query
          description: Instrument type
          required: false
          schema:
            type: string
            enum:
              - SWAP
            default: SWAP
        - name: uniqueCode
          in: query
          description: Lead trader unique code
          required: false
          schema:
            type: string
            default: 213E8C92DC61EFAC
        - name: lastDays
          in: query
          required: true
          schema:
            type: string
            enum:
              - 1 //7 days
              - 2 //30 days
              - 3 //90 days
              - 4 //365 days
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/PublicStats"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/public-preference-currency:
    get:
      summary: Leader trader currency preference
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Public endpoint. Retrieve lead trader daily pnl. Results are returned in counter chronological order.<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - name: instType
          in: query
          description: Instrument type
          required: false
          schema:
            type: string
            enum:
              - SWAP
            default: SWAP
        - name: uniqueCode
          in: query
          description: Lead trader unique code
          required: false
          schema:
            type: string
            default: 213E8C92DC61EFAC

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/PrefStats"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/public-current-subpositions:
    get:
      summary: Get current leading positions of lead trader
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - name: instType
          in: query
          description: Instrument type
          required: false
          schema:
            type: string
            enum:
              - SWAP
            default: SWAP
        - name: after
          in: query
          required: false
          schema:
            type: string
        - name: before
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: string

        - name: uniqueCode
          in: query
          description: Lead trader unique code
          required: false
          schema:
            type: string
            default: 213E8C92DC61EFAC

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/SubPosition"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/public-subpositions-history:
    get:
      summary: Get current leading positions of lead trader
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Public endpoint. Retrieve the lead trader completed leading position of the last 3 months.<br>Returns reverse chronological order with subPosId.<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - name: instType
          in: query
          description: Instrument type
          required: false
          schema:
            type: string
            enum:
              - SWAP
            default: SWAP
        - name: after
          in: query
          required: false
          schema:
            type: string
        - name: before
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: string

        - name: uniqueCode
          in: query
          description: Lead trader unique code
          required: false
          schema:
            type: string
            default: 213E8C92DC61EFAC

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/SubPositionHistory"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/public-copy-traders:
    get:
      summary: Copy Traders
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Public endpoint. Retrieve copy trader coming from certain lead trader. Return according to pnl from high to low.<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - name: instType
          in: query
          description: Instrument type
          required: false
          schema:
            type: string
            enum:
              - SWAP
            default: SWAP
        - name: limit
          in: query
          required: false
          schema:
            type: string

        - name: uniqueCode
          in: query
          description: Lead trader unique code
          required: false
          schema:
            type: string
            default: 213E8C92DC61EFAC

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/CopyTraders"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/lead-traders:
    get:
      summary: Lead trader ranks (private)
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Public endpoint. Retrieve copy trader coming from certain lead trader. Return according to pnl from high to low.<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - name: instType
          in: query
          description: Instrument type (e.g., SWAP). The default value is SWAP.
          required: false
          schema:
            type: string
            enum:
              - SWAP
              - FUTURE
              - SPOT

        - name: sortType
          in: query
          description: Sorting type for the lead trader rankings.
          required: false
          schema:
            type: string
            enum:
              - overview
              - pnl
              - aum
              - win_ratio
              - pnl_ratio
              - current_copy_trader_pnl

        - name: state
          in: query
          description: "The state of the lead trader (0: All, 1: With vacancy)."
          required: false
          schema:
            type: string
            enum:
              - "0"
              - "1"

        - name: minLeadDays
          in: query
          description: " Minimum lead days for the trader (1: 7 days, 2: 30 days, etc.)."
          required: false
          schema:
            type: string
            enum:
              - "1"
              - "2"
              - "3"
              - "4"

        - name: minAssets
          in: query
          description: Minimum assets in USDT.
          required: false
          schema:
            type: string

        - name: maxAssets
          in: query
          description: Maximum assets in USDT.
          required: false
          schema:
            type: string

        - name: minAum
          in: query
          description: Minimum assets under management in USDT.
          required: false
          schema:
            type: string

        - name: maxAum
          in: query
          description: Maximum assets under management in USDT.
          required: false
          schema:
            type: string

        - name: dataVer
          in: query
          description: Data version used for pagination (14-digit timestamp).
          required: false
          schema:
            type: string

        - name: page
          in: query
          description: Page number for pagination.
          required: false
          schema:
            type: string

        - name: limit
          in: query
          description: Number of results per request (default is 10, max is 20).
          required: false
          schema:
            type: string
            enum:
              - "10"
              - "20"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/LeaderRanks"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/weekly-pnl:
    get:
      summary: Lead trader weekly pnl (private)
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Private endpoint. Retrieve lead trader weekly pnl. Results are returned in counter chronological order.<br>For requests from the ND sub-account, under the same ND broker, uniqueCode is supported for ND lead trader unique code by this endpoint, but the related public endpoint does not support it..<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - name: instType
          in: query
          description: Instrument type (e.g., SWAP). The default value is SWAP.
          required: false
          schema:
            type: string
            enum:
              - SWAP
              - FUTURE
              - SPOT

        - name: uniqueCode
          in: query
          description: "Lead trader unique code.A combination of case-sensitive alphanumerics, all numbers and the length is 16 characters."
          required: false
          schema:
            type: string
            example: 213E8C92DC61EFAC

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/LeaderPnl"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/pnl:
    get:
      summary: Lead trader daily pnl
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Private endpoint. Retrieve lead trader daily pnl. Results are returned in counter chronological order.<br>For requests from the ND sub-account, under the same ND broker, uniqueCode is supported for ND lead trader unique code by this endpoint, but the related public endpoint does not support it.<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - name: instType
          in: query
          description: Instrument type (e.g., SWAP). The default value is SWAP.
          required: true
          schema:
            type: string
            enum:
              - SWAP
              - FUTURE
              - SPOT

        - name: uniqueCode
          in: query
          description: "Lead trader unique code.A combination of case-sensitive alphanumerics, all numbers and the length is 16 characters."
          required: false
          schema:
            type: string
            example: 213E8C92DC61EFAC
        - name: lastDays
          in: query
          required: false
          schema:
            type: string
            enum:
              - "1"
              - "2"
              - "3"
              - "4"

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/LeaderPnl"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/stats:
    get:
      summary: Lead trader stats
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Private endpoint. Key data related to lead trader performance.<br>For requests from the ND sub-account, under the same ND broker, uniqueCode is supported for ND lead trader unique code by this endpoint, but the related public endpoint does not support it.<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - name: instType
          in: query
          description: Instrument type (e.g., SWAP). The default value is SWAP.
          required: true
          schema:
            type: string
            enum:
              - SWAP
              - FUTURE
              - SPOT

        - name: uniqueCode
          in: query
          description: "Lead trader unique code.A combination of case-sensitive alphanumerics, all numbers and the length is 16 characters."
          required: false
          schema:
            type: string
            example: 213E8C92DC61EFAC
        - name: lastDays
          in: query
          required: false
          schema:
            type: string
            enum:
              - "1"
              - "2"
              - "3"
              - "4"

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/PublicStats"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/preference-currency:
    get:
      summary: Lead trader currency preferences (private)
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Private endpoint. The most frequently traded crypto of this lead trader. Results are sorted by ratio from large to small.<br>For requests from the ND sub-account, under the same ND broker, uniqueCode is supported for ND lead trader unique code by this endpoint, but the related public endpoint does not support it.<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - name: instType
          in: query
          description: Instrument type (e.g., SWAP). The default value is SWAP.
          required: true
          schema:
            type: string
            enum:
              - SWAP
              - FUTURE
              - SPOT

        - name: uniqueCode
          in: query
          description: "Lead trader unique code.A combination of case-sensitive alphanumerics, all numbers and the length is 16 characters."
          required: false
          schema:
            type: string
            example: 213E8C92DC61EFAC
        - name: lastDays
          in: query
          required: false
          schema:
            type: string
            enum:
              - "1"
              - "2"
              - "3"
              - "4"

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/PrefStats"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/performance-current-subpositions:
    get:
      summary: Lead trader currency preferences (private)
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Private endpoint. Get current leading positions of lead trader<br>For requests from the ND sub-account, under the same ND broker, uniqueCode is supported for ND lead trader unique code by this endpoint, but the related public endpoint does not support it.<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - name: instType
          in: query
          description: Instrument type
          required: false
          schema:
            type: string
            enum:
              - SWAP
            default: SWAP
        - name: after
          in: query
          required: false
          schema:
            type: string
        - name: before
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: string

        - name: uniqueCode
          in: query
          description: Lead trader unique code
          required: false
          schema:
            type: string
            default: 213E8C92DC61EFAC

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/SubPosition"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/performance-subpositions-history:
    get:
      summary: Lead trader currency preferences (private)
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Private endpoint. Get current leading positions of lead trader<br>For requests from the ND sub-account, under the same ND broker, uniqueCode is supported for ND lead trader unique code by this endpoint, but the related public endpoint does not support it.<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - name: instType
          in: query
          description: Instrument type
          required: false
          schema:
            type: string
            enum:
              - SWAP
            default: SWAP
        - name: after
          in: query
          required: false
          schema:
            type: string
        - name: before
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: string

        - name: uniqueCode
          in: query
          description: Lead trader unique code
          required: false
          schema:
            type: string
            default: 213E8C92DC61EFAC

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/SubPositionHistory"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /copytrading/copy-traders:
    get:
      summary: Copy traders (private)
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Private endpoint. Retrieve copy trader coming from certain lead trader. Return according to pnl from high to low<br>For requests from the ND sub-account, under the same ND broker, uniqueCode is supported for ND lead trader unique code by this endpoint, but the related public endpoint does not support it.<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - name: instType
          in: query
          description: Instrument type
          required: false
          schema:
            type: string
            enum:
              - SWAP
            default: SWAP
        - name: after
          in: query
          required: false
          schema:
            type: string
        - name: before
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: string

        - name: uniqueCode
          in: query
          description: Lead trader unique code
          required: false
          schema:
            type: string
            default: 213E8C92DC61EFAC

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/CopyTraders"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /market/tickers:
    get:
      summary: Tickers
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Retrieve the latest price snapshot, best bid/ask price, and trading volume in the last 24 hours.<br>Rate limit: 5 requests per 2 seconds<br>Rate limit rule: UserID"
      parameters:
        - name: instType
          in: query
          description: Instrument type
          required: false
          schema:
            type: string
            enum:
              - SWAP
            default: SWAP
        - name: uly
          in: query
          required: false
          schema:
            type: string
            example: FUTURES/SWAP/OPTION
        - name: before
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: string

        - name: instFamily
          in: query
          required: false
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Tickers"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /market/ticker:
    get:
      summary: Ticker
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Retrieve the latest price snapshot, best bid/ask price, and trading volume in the last 24 hours.<br>Rate limit rule: UserID"
      parameters:
        - name: instId
          in: query
          description: Instrument ID
          required: false
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Tickers"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /market/books:
    get:
      summary: order books
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Retrieve order book of the instrument.<br>Rate limit rule: UserID"
      parameters:
        - name: instId
          in: query
          description: Instrument ID
          required: false
          schema:
            type: string
        - name: sz
          in: query
          description: order book depth per side
          required: false
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderBooks"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /market/books-full:
    get:
      summary: Full order book
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Retrieve order book of the instrument. The data will be updated once a second.<br>Rate limit rule: UserID"
      parameters:
        - name: instId
          in: query
          description: Instrument ID
          required: false
          schema:
            type: string
        - name: sz
          in: query
          description: order book depth per side
          required: false
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderBooks"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /market/candles:
    get:
      summary: Candlestick
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Retrieve the candlestick charts. This endpoint can retrieve the latest 1,440 data entries. Charts are returned in groups based on the requested bar.<br>Rate limit rule: UserID"
      parameters:
        - name: instId
          in: query
          required: true
          description: Instrument ID, e.g., BTC-USDT
          schema:
            type: string
            example: "BTC-USDT"
        - name: bar
          in: query
          required: false
          description: |
            Bar size, default is 1m.
            Examples: [1m/3m/5m/15m/30m/1H/2H/4H].
            Hong Kong time opening price k-line: [6H/12H/1D/2D/3D/1W/1M/3M].
            UTC time opening price k-line: [/6Hutc/12Hutc/1Dutc/2Dutc/3Dutc/1Wutc/1Mutc/3Mutc].
          schema:
            type: string
            example: "1m"
        - name: after
          in: query
          required: false
          description: Pagination parameter to return records earlier than the requested timestamp.
          schema:
            type: string
            format: date-time
            example: "2023-10-10T12:00:00Z"
        - name: before
          in: query
          required: false
          description: |
            Pagination parameter to return records newer than the requested timestamp. 
            The latest data will be returned if used individually.
          schema:
            type: string
            format: date-time
            example: "2023-10-10T15:00:00Z"
        - name: limit
          in: query
          required: false
          description: Number of results per request. Maximum is 300. Default is 100.
          schema:
            type: integer
            minimum: 1
            maximum: 300
            default: 100
            example: 50

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /market/history-candles:
    get:
      summary: Candlesticks history
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Retrieve history candlestick charts from recent years(It is last 3 months supported for 1s candlestick)<br>Rate limit rule: UserID"
      parameters:
        - name: instId
          in: query
          required: true
          description: Instrument ID, e.g., BTC-USDT
          schema:
            type: string
            example: "BTC-USDT"
        - name: bar
          in: query
          required: false
          description: |
            Bar size, default is 1m.
            Examples: [1m/3m/5m/15m/30m/1H/2H/4H].
            Hong Kong time opening price k-line: [6H/12H/1D/2D/3D/1W/1M/3M].
            UTC time opening price k-line: [/6Hutc/12Hutc/1Dutc/2Dutc/3Dutc/1Wutc/1Mutc/3Mutc].
          schema:
            type: string
            example: "1m"
        - name: after
          in: query
          required: false
          description: Pagination parameter to return records earlier than the requested timestamp.
          schema:
            type: string
            format: date-time
            example: "2023-10-10T12:00:00Z"
        - name: before
          in: query
          required: false
          description: |
            Pagination parameter to return records newer than the requested timestamp. 
            The latest data will be returned if used individually.
          schema:
            type: string
            format: date-time
            example: "2023-10-10T15:00:00Z"
        - name: limit
          in: query
          required: false
          description: Number of results per request. Maximum is 300. Default is 100.
          schema:
            type: integer
            minimum: 1
            maximum: 300
            default: 100
            example: 50

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /market/trades:
    get:
      summary: trades
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Retrieve the recent transactions of an instrument.<br>Rate limit rule: UserID"
      parameters:
        - name: instId
          in: query
          required: true
          description: Instrument ID, e.g., BTC-USDT
          schema:
            type: string
            example: "BTC-USDT"
        - name: limit
          in: query
          required: false
          description: Number of results per request. Maximum is 300. Default is 100.
          schema:
            type: integer
            minimum: 1
            maximum: 300
            default: 100
            example: 50

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Trades"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /market/history-trades:
    get:
      summary: trades history
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Retrieve the recent transactions of an instrument.<br>Rate limit rule: UserID"
      parameters:
        - name: instId
          in: query
          required: true
          description: Instrument ID, e.g., BTC-USDT
          schema:
            type: string
            example: "BTC-USDT"
        - name: type
          in: query
          required: false
          schema:
            type: string
            example: "1"
        - name: after
          in: query
          required: false
          description: Pagination parameter to return records earlier than the requested timestamp.
          schema:
            type: string
            format: date-time
            example: "2023-10-10T12:00:00Z"
        - name: before
          in: query
          required: false
          description: |
            Pagination parameter to return records newer than the requested timestamp. 
            The latest data will be returned if used individually.
          schema:
            type: string
            format: date-time
            example: "2023-10-10T15:00:00Z"
        - name: limit
          in: query
          required: false
          description: Number of results per request. Maximum is 300. Default is 100.
          schema:
            type: integer
            minimum: 1
            maximum: 300
            default: 100
            example: 50

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Trades"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /market/option/instrument-family-trades:
    get:
      summary: Option Trades By instrument family
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Retrieve the recent transactions of an instrument under same instFamily. The maximum is 100.<br>Rate limit rule: UserID"
      parameters:
        - name: instFamily
          in: query
          required: true
          description: Instrument family OPTION, e.g., BTC-USDT
          schema:
            type: string
            example: "BTC-USDT"

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OptionTrade"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /public/option-trades:
    get:
      summary: public Option Trades
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      parameters:
        - name: instFamily
          in: query
          required: true
          description: Instrument family OPTION, e.g., BTC-USDT
          schema:
            type: string
            example: "BTC-USDT"
        - name: instId
          in: query
          required: true
          description: Instrument id, e.g., BTC-USDT
          schema:
            type: string
            example: "BTC-USDT"
        - name: optType
          in: query
          required: true
          description: "option type c for call and p for put"
          schema:
            type: string
            example: "c"

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/PublicOptionTrade"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /market/platform-24-volume:
    get:
      summary: The 24-hour trading volume is calculated on a rolling basis.
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/vol24"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /market/call-auction-details:
    get:
      summary: retrieve auction details
      tags:
        - Order Book Trading
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      parameters:
        - in: query
          name: instId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Auction"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /sprd/order:
    post:
      summary: place spread order
      tags:
        - Spread Trading
      description: "Place a new order<br>Rate Limit: 20 requests per 2 seconds <br>Rate limit rule: UserID"

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpreadOrder"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderInfo"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      summary: get spread order
      tags:
        - Spread Trading
      description: "get order<br>Rate Limit: 20 requests per 2 seconds <br>Rate limit rule: UserID"
      parameters:
        - in: query
          name: ordId
          required: true
          schema:
            type: string
        - in: query
          name: clOrdId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/SpreadOrderInfo"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /sprd/cancel-order:
    post:
      summary: cancel spread order
      tags:
        - Spread Trading
      description: "cancel order<br>Rate Limit: 20 requests per 2 seconds <br>Rate limit rule: UserID"

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelOrderRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderInfo"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /sprd/mass-cancel:
    post:
      summary: cancel all spread orders
      tags:
        - Spread Trading
      description: "cancel all order<br>Rate Limit: 20 requests per 2 seconds <br>Rate limit rule: UserID"

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sprdId:
                  type: string
                  example: "spread ID"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          result:
                            type: boolean

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /sprd/amend-order:
    post:
      summary: Amend orders
      tags:
        - Spread Trading
      description: "Amend an incomplete order.<br>Rate Limit: 20 requests per 2 seconds <br>Rate limit rule: UserID"

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AmendOrder"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderInfo"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /sprd/orders-pending:
    get:
      summary: get active orders
      tags:
        - Spread Trading
      description: "Amend an incomplete order.<br>Rate Limit: 20 requests per 2 seconds <br>Rate limit rule: UserID"

      parameters:
        - name: sprdId
          in: query
          description: Spread ID, e.g.
          required: false
          schema:
            type: string
            example: "BTC-USDT_BTC-USD-SWAP"

        - name: ordType
          in: query
          description: Order type.
          required: false
          schema:
            type: string
            enum: [market, limit, post_only, ioc]
            example: "limit"

        - name: state
          in: query
          description: State of the order.
          required: false
          schema:
            type: string
            enum: [live, partially_filled]
            example: "live"

        - name: beginId
          in: query
          description: Start order ID the request to begin with. Pagination of data to return records newer than the requested order ID, not including beginId.
          required: false
          schema:
            type: string
            example: "1001"

        - name: endId
          in: query
          description: End order ID the request to end with. Pagination of data to return records earlier than the requested order ID, not including endId.
          required: false
          schema:
            type: string
            example: "2001"

        - name: limit
          in: query
          description: Number of results per request. The maximum is 100. The default is 100.
          required: false
          schema:
            type: integer
            example: 100

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/SpreadOrderInfo"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /sprd/orders-history:
    get:
      summary: get orders history
      tags:
        - Spread Trading
      description: "Amend an incomplete order.<br>Rate Limit: 20 requests per 2 seconds <br>Rate limit rule: UserID"

      parameters:
        - name: sprdId
          in: query
          description: Spread ID, e.g.
          required: false
          schema:
            type: string
            example: "BTC-USDT_BTC-USD-SWAP"

        - name: ordType
          in: query
          description: Order type.
          required: false
          schema:
            type: string
            enum: [market, limit, post_only, ioc]
            example: "limit"

        - name: state
          in: query
          description: State of the order.
          required: false
          schema:
            type: string
            enum: [canceled, filled]
            example: "canceled"

        - name: beginId
          in: query
          description: Start order ID the request to begin with. Pagination of data to return records newer than the requested order ID, not including beginId.
          required: false
          schema:
            type: string
            example: "1001"

        - name: endId
          in: query
          description: End order ID the request to end with. Pagination of data to return records earlier than the requested order ID, not including endId.
          required: false
          schema:
            type: string
            example: "2001"

        - name: begin
          in: query
          description: Filter with a begin timestamp. Unix timestamp format in milliseconds, e.g. 1597026383085. Dates older than 7 days will be truncated.
          required: false
          schema:
            type: string
            format: int64
            example: "1597026383085"

        - name: end
          in: query
          description: Filter with an end timestamp. Unix timestamp format in milliseconds, e.g. 1597026383085.
          required: false
          schema:
            type: string
            format: int64
            example: "1597027383085"

        - name: limit
          in: query
          description: Number of results per request. The maximum is 100. The default is 100.
          required: false
          schema:
            type: integer
            example: 100

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/SpreadOrderInfo"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /sprd/orders-history-archive:
    get:
      summary: get orders history (last 3 months)
      tags:
        - Spread Trading
      description: "Retrieve the completed order data for the last 3 months, including those placed 3 months ago but completed in the last 3 months. Results are returned in counter chronological order.<br>Rate limit rule: UserID"

      parameters:
        - name: sprdId
          in: query
          description: Spread ID, e.g.
          required: false
          schema:
            type: string
            example: "BTC-USDT_BTC-USD-SWAP"

        - name: ordType
          in: query
          description: Order type.
          required: false
          schema:
            type: string
            enum: [market, limit, post_only, ioc]
            example: "limit"

        - name: state
          in: query
          description: State of the order.
          required: false
          schema:
            type: string
            enum: [canceled, filled]
            example: "canceled"

        - name: beginId
          in: query
          description: Start order ID the request to begin with. Pagination of data to return records newer than the requested order ID, not including beginId.
          required: false
          schema:
            type: string
            example: "1001"

        - name: endId
          in: query
          description: End order ID the request to end with. Pagination of data to return records earlier than the requested order ID, not including endId.
          required: false
          schema:
            type: string
            example: "2001"

        - name: begin
          in: query
          description: Filter with a begin timestamp. Unix timestamp format in milliseconds, e.g. 1597026383085. Dates older than 7 days will be truncated.
          required: false
          schema:
            type: string
            format: int64
            example: "1597026383085"

        - name: end
          in: query
          description: Filter with an end timestamp. Unix timestamp format in milliseconds, e.g. 1597026383085.
          required: false
          schema:
            type: string
            format: int64
            example: "1597027383085"

        - name: limit
          in: query
          description: Number of results per request. The maximum is 100. The default is 100.
          required: false
          schema:
            type: integer
            example: 100

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/SpreadOrderInfo"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /sprd/get-trades:
    get:
      summary: get orders history (last 3 months)
      tags:
        - Spread Trading
      description: "Retrieve historical transaction details for the last 7 days. Results are returned in counter chronological order.<br>Rate limit rule: UserID"
      parameters:
        - name: sprdId
          in: query
          description: Spread ID, e.g.
          required: false
          schema:
            type: string
            example: "BTC-USDT_BTC-USD-SWAP"

        - name: tradeId
          in: query
          description: Trade ID.
          required: false
          schema:
            type: string
            example: "12345"

        - name: ordId
          in: query
          description: Order ID.
          required: false
          schema:
            type: string
            example: "67890"

        - name: beginId
          in: query
          description: Start trade ID the request to begin with. Pagination of data to return records newer than the requested tradeId, not including beginId.
          required: false
          schema:
            type: string
            example: "1001"

        - name: endId
          in: query
          description: End trade ID the request to end with. Pagination of data to return records earlier than the requested tradeId, not including endId.
          required: false
          schema:
            type: string
            example: "2001"

        - name: begin
          in: query
          description: Filter with a begin timestamp. Unix timestamp format in milliseconds, e.g. 1597026383085.
          required: false
          schema:
            type: string
            format: int64
            example: "1597026383085"

        - name: end
          in: query
          description: Filter with an end timestamp. Unix timestamp format in milliseconds, e.g. 1597026383085.
          required: false
          schema:
            type: string
            format: int64
            example: "1597027383085"

        - name: limit
          in: query
          description: Number of results per request. The maximum is 100. The default is 100.
          required: false
          schema:
            type: integer
            example: 100
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/SpreadTradeInfo"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /sprd/spreads:
    get:
      summary: get spreads
      tags:
        - Spread Trading
      description: "Retrieve all available spreads based on the request parameters.<br>Rate limit rule: UserID"
      parameters:
        - name: baseCcy
          in: query
          description: Currency instrument is based in, e.g. BTC, ETH
          required: false
          schema:
            type: string
            example: "BTC"

        - name: instId
          in: query
          description: The instrument ID to be included in the spread
          required: false
          schema:
            type: string
            example: "BTC-USDT-SWAP"

        - name: sprdId
          in: query
          description: The spread ID
          required: false
          schema:
            type: string
            example: "BTC-USDT_BTC-USD-SWAP"

        - name: state
          in: query
          description: Spreads which are available to trade, suspended or expired. Valid values include live, suspend, and expired.
          required: false
          schema:
            type: string
            enum:
              - live
              - suspend
              - expired
          example: "live"

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/SpreadTradeInfo"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /sprd/books:
    get:
      summary: get order books
      tags:
        - Spread Trading
      description: "Retrieve all order books.<br>Rate limit rule: UserID"
      parameters:
        - name: sprdId
          in: query
          description: The spread ID
          required: false
          schema:
            type: string
            example: "BTC-USDT_BTC-USD-SWAP"

        - name: sz
          in: query
          description: "Order book depth per side. Maximum value is 400. Default value is 5."
          required: false
          schema:
            type: string

          example: "5"

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderBooks"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /market/sprd-ticker:
    get:
      summary: get spread ticker
      tags:
        - Spread Trading
      parameters:
        - name: sprdId
          in: query
          description: The spread ID
          required: false
          schema:
            type: string
            example: "BTC-USDT_BTC-USD-SWAP"

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Tickers"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /sprd/public-ticker:
    get:
      summary: get all tickers
      tags:
        - Spread Trading
      description: "Retrieve all order books.<br>Rate limit rule: UserID"
      parameters:
        - name: sprdId
          in: query
          description: The spread ID
          required: false
          schema:
            type: string
            example: "BTC-USDT_BTC-USD-SWAP"

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/SpreadTickers"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /market/sprd-candles:
    get:
      summary: get candlesticks
      tags:
        - Spread Trading
      description: "Retrieve the candlestick charts. This endpoint can retrieve the latest 1,440 data entries. Charts are returned in groups based on the requested bar.<br>Rate Limit: 40 requests per 2 seconds<br>Rate limit rule: IP.<br>Rate limit rule: UserID"
      parameters:
        - name: sprdId
          in: query
          required: true
          schema:
            type: string
          description: Spread ID.
          example: "BTC-USDT_BTC-USD-SWAP"
        - name: bar
          in: query
          required: false
          schema:
            type: string
            enum:
              - 1m
              - 3m
              - 5m
              - 15m
              - 30m
              - 1H
              - 2H
              - 4H
              - 6H
              - 12H
              - 1D
              - 2D
              - 3D
              - 1W
              - 1M
              - 3M
              - 6Hutc
              - 12Hutc
              - 1Dutc
              - 2Dutc
              - 3Dutc
              - 1Wutc
              - 1Mutc
              - 3Mutc
          description: Bar size, defaults to 1m. Options include Hong Kong and UTC opening price k-lines.
          example: "1m"
        - name: after
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: Pagination to return records earlier than the requested timestamp.
          example: "1597026383085"
        - name: before
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: Pagination to return records newer than the requested timestamp. Use alone to get the latest data.
          example: "1597026383085"
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            maximum: 300
          description: Number of results per request. Default is 100, with a maximum of 300.
          example: 150

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: array
                          items:
                            type: string

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /market/sprd-history-candles:
    get:
      summary: get candlesticks history
      tags:
        - Spread Trading
      description: "Retrieve history candlestick charts from recent years.<br>Rate limit rule: IP.<br>Rate limit rule: UserID"
      parameters:
        - name: sprdId
          in: query
          required: true
          schema:
            type: string
          description: Spread ID.
          example: "BTC-USDT_BTC-USD-SWAP"
        - name: bar
          in: query
          required: false
          schema:
            type: string
            enum:
              - 1m
              - 3m
              - 5m
              - 15m
              - 30m
              - 1H
              - 2H
              - 4H
              - 6H
              - 12H
              - 1D
              - 2D
              - 3D
              - 1W
              - 1M
              - 3M
              - 6Hutc
              - 12Hutc
              - 1Dutc
              - 2Dutc
              - 3Dutc
              - 1Wutc
              - 1Mutc
              - 3Mutc
          description: Bar size, defaults to 1m. Options include Hong Kong and UTC opening price k-lines.
          example: "1m"
        - name: after
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: Pagination to return records earlier than the requested timestamp.
          example: "1597026383085"
        - name: before
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: Pagination to return records newer than the requested timestamp. Use alone to get the latest data.
          example: "1597026383085"
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 100
            maximum: 300
          description: Number of results per request. Default is 100, with a maximum of 300.
          example: 150

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: array
                          items:
                            type: string

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /sprd/cancel-all-after:
    get:
      summary: get candlesticks history
      tags:
        - Spread Trading
      description: "Cancel all pending orders after the countdown timeout. Only applicable to spread trading.<br>Rate limit rule: IP.<br>Rate limit rule: UserID"
      parameters:
        - name: timeOut
          in: query
          required: true
          schema:
            type: string
          description: Spread ID.
          example: "BTC-USDT_BTC-USD-SWAP"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/SpreadCancel"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /public/instruments:
    get:
      summary: get instruments
      tags:
        - Public Data
      description: "Retrieve a list of instruments with open contracts.<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: IP + instrumentType"
      parameters:
        - name: instType
          in: query
          required: true
          description: |
            Instrument type. Valid values:
            - `SPOT`: Spot
            - `MARGIN`: Margin
            - `SWAP`: Perpetual Futures
            - `FUTURES`: Expiry Futures
            - `OPTION`: Option
          schema:
            type: string
            enum:
              - SPOT
              - MARGIN
              - SWAP
              - FUTURES
              - OPTION

        - name: uly
          in: query
          required: false
          description: |
            Underlying. Only applicable to FUTURES/SWAP/OPTION.
            If `instType` is OPTION, either `uly` or `instFamily` is required.
          schema:
            type: string

        - name: instFamily
          in: query
          required: false
          description: |
            Instrument family. Only applicable to FUTURES/SWAP/OPTION.
            If `instType` is OPTION, either `uly` or `instFamily` is required.
          schema:
            type: string

        - name: instId
          in: query
          required: false
          description: Instrument ID.
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/PublicInstrument"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /public/delivery-exercise-history:
    get:
      summary: get delivery exercises
      tags:
        - Public Data
      description: "Retrieve delivery records of Futures and exercise records of Options in the last 3 months.<br>Rate Limit: 40 requests per 2 seconds<br>Rate limit rule: IP + (instrumentType + uly)"
      parameters:
        - name: instType
          in: query
          required: true
          description: |
            Instrument type. Valid values:
            - `SPOT`: Spot
            - `MARGIN`: Margin
            - `SWAP`: Perpetual Futures
            - `FUTURES`: Expiry Futures
            - `OPTION`: Option
          schema:
            type: string
            enum:
              - SPOT
              - MARGIN
              - SWAP
              - FUTURES
              - OPTION

        - name: uly
          in: query
          required: false
          description: |
            Underlying. Only applicable to FUTURES/SWAP/OPTION.
            If `instType` is OPTION, either `uly` or `instFamily` is required.
          schema:
            type: string

        - name: instFamily
          in: query
          required: false
          description: |
            Instrument family. Only applicable to FUTURES/SWAP/OPTION.
            If `instType` is OPTION, either `uly` or `instFamily` is required.
          schema:
            type: string

        - name: instId
          in: query
          required: false
          description: Instrument ID.
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/ExercisesHistory"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /public/open-interest:
    get:
      summary: Get open interest
      tags:
        - Public Data
      description: "Retrieve the total open interest for contracts on OKX.<br>Rate limit rule: IP + (instrumentType + uly)"
      parameters:
        - name: instType
          in: query
          required: true
          description: |
            Instrument type. Valid values:
            - `SPOT`: Spot
            - `MARGIN`: Margin
            - `SWAP`: Perpetual Futures
            - `FUTURES`: Expiry Futures
            - `OPTION`: Option
          schema:
            type: string
            enum:
              - SPOT
              - MARGIN
              - SWAP
              - FUTURES
              - OPTION

        - name: uly
          in: query
          required: false
          description: |
            Underlying. Only applicable to FUTURES/SWAP/OPTION.
            If `instType` is OPTION, either `uly` or `instFamily` is required.
          schema:
            type: string

        - name: instFamily
          in: query
          required: false
          description: |
            Instrument family. Only applicable to FUTURES/SWAP/OPTION.
            If `instType` is OPTION, either `uly` or `instFamily` is required.
          schema:
            type: string

        - name: instId
          in: query
          required: false
          description: Instrument ID.
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OpenInterest"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /public/funding-rate:
    get:
      summary: Get funding rate
      tags:
        - Public Data
      description: "Retrieve funding rate.<br>Rate limit rule: IP + (instrumentType + uly)"
      parameters:
        - name: instId
          in: query
          required: false
          description: Instrument ID.
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/FundingRate"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /public/funding-rate-history:
    get:
      summary: Get funding rate
      tags:
        - Public Data
      description: "Retrieve funding rate history. This endpoint can retrieve data from the last 3 months.<br>Rate limit rule: IP + InstrumentId"
      parameters:
        - name: instId
          in: query
          required: true
          schema:
            type: string
          description: Instrument ID, e.g., BTC-USD-SWAP. Only applicable to SWAP.
        - name: before
          in: query
          required: false
          schema:
            type: string
          description: Pagination of data to return records newer than the requested `fundingTime`.
        - name: after
          in: query
          required: false
          schema:
            type: string
          description: Pagination of data to return records earlier than the requested `fundingTime`.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: Number of results per request. The maximum is 100; the default is 100.

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/FundingRate"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /public/price-limit:
    get:
      summary: Get limit price
      tags:
        - Public Data
      description: "Retrieve the highest buy limit and lowest sell limit of the instrument.<br>Rate limit rule: IP + InstrumentId"
      parameters:
        - name: instId
          in: query
          required: true
          schema:
            type: string
          description: Instrument ID, e.g., BTC-USD-SWAP. Only applicable to SWAP.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/PriceLimit"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /public/opt-summary:
    get:
      summary: Get option market data
      tags:
        - Public Data
      description: "Retrieve option market data.<br>Rate limit rule: IP + InstrumentId"
      parameters:
        - name: uly
          in: query
          required: false
          schema:
            type: string
          description: >
            Underlying, only applicable to OPTION. Either `uly` or `instFamily` is required. 
            If both are passed, `instFamily` will be used.
        - name: instFamily
          in: query
          required: false
          schema:
            type: string
          description: >
            Instrument family, only applicable to OPTION. Either `uly` or `instFamily` is required. 
            If both are passed, `instFamily` will be used.
        - name: expTime
          in: query
          required: false
          schema:
            type: string
            pattern: "^[0-9]{6}$"
          description: >
            Contract expiry date in the format "YYMMDD", e.g., "200527".

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OptSummary"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /public/estimated-price:
    get:
      summary: Get estimated delievry/execise price
      tags:
        - Public Data
      description: "Retrieve option market data.<br>Rate limit rule: IP + InstrumentId"
      parameters:
        - name: instId
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/EstimatedPrice"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /public/discount-rate-interest-free-quota:
    get:
      summary: Get discount rate and interest-free quota
      tags:
        - Public Data
      description: "Rate limit rule: IP + InstrumentId"
      parameters:
        - name: ccy
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DiscountRate"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /public/time:
    get:
      summary: Get System Time
      tags:
        - Public Data
      description: "Rate limit rule: IP + InstrumentId"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            ts:
                              type: string
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /public/mark-price:
    get:
      summary: Get mark price
      tags:
        - Public Data
      description: "Retrieve mark price.<br>We set the mark price based on the SPOT index and at a reasonable basis to prevent individual users from manipulating the market and causing the contract price to fluctuate.<br>Rate Limit: 10 requests per 2 seconds<br>Rate limit rule: IP +instrumentID"
      parameters:
        - name: instType
          in: query
          required: true
          description: Instrument type.
          schema:
            type: string
            enum:
              - MARGIN
              - SWAP
              - FUTURES
              - OPTION
        - name: uly
          in: query
          required: false
          description: Underlying. Applicable to FUTURES/SWAP/OPTION.
          schema:
            type: string
        - name: instFamily
          in: query
          required: false
          description: Instrument family. Applicable to FUTURES/SWAP/OPTION.
          schema:
            type: string
        - name: instId
          in: query
          required: false
          description: Instrument ID, e.g. BTC-USD-SWAP.
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/MarkPrice"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /public/position-tiers:
    get:
      summary: Get Position Tiers
      tags:
        - Public Data
      description: "Retrieve position tiers information, maximum leverage depends on your borrowings and margin ratio.<br>Rate limit rule: IP +instrumentID"
      parameters:
        - name: instType
          in: query
          description: Instrument type
          required: true
          schema:
            type: string
            enum:
              - MARGIN
              - SWAP
              - FUTURES
              - OPTION

        - name: tdMode
          in: query
          description: Trade mode
          required: true
          schema:
            type: string
            enum:
              - Margin mode
              - cross
              - isolated

        - name: uly
          in: query
          description: Single underlying or multiple underlyings (no more than 3) separated with commas.
          required: false
          schema:
            type: string
            nullable: true

        - name: instFamily
          in: query
          description: Single instrument family or multiple instrument families (no more than 5) separated with commas.
          required: false
          schema:
            type: string
            nullable: true

        - name: instId
          in: query
          description: Single instrument or multiple instruments (no more than 5) separated with commas.
          required: false
          schema:
            type: string
            nullable: true

        - name: ccy
          in: query
          description: Margin currency. Only applicable to cross MARGIN.
          required: false
          schema:
            type: string
            nullable: true

        - name: tier
          in: query
          description: Tiers
          required: false
          schema:
            type: string
            nullable: true

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/TiersData"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /public/interest-rate-loan-quota:
    get:
      summary: Get Interest rate & load data
      tags:
        - Public Data
      description: "Rate limit rule: IP +instrumentID"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/LoanData"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /public/underlying:
    get:
      summary: Get underlying
      tags:
        - Public Data
      description: "Rate limit rule: IP +instrumentID"
      parameters:
        - in: query
          name: instType
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: array
                          items:
                            type: string
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /public/insurance-fund:
    get:
      summary: Get insurance-fund
      tags:
        - Public Data
      description: "Get insurance fund balance information.<br>Rate limit rule: IP +instrumentID"
      parameters:
        - name: instType
          in: query
          required: true
          schema:
            type: string
            enum:
              - MARGIN
              - SWAP
              - FUTURES
              - OPTION
          description: Instrument type (MARGIN, SWAP, FUTURES, OPTION)

        - name: type
          in: query
          required: false
          schema:
            type: string
            enum:
              - regular_update
              - liquidation_balance_deposit
              - bankruptcy_loss
              - platform_revenue
              - adl
          description: Type of data. Default is all types.

        - name: uly
          in: query
          required: false
          schema:
            type: string
          description: Underlying, required for FUTURES/SWAP/OPTION. If both `uly` and `instFamily` are passed, `instFamily` will be used.

        - name: instFamily
          in: query
          required: false
          schema:
            type: string
          description: Instrument family, required for FUTURES/SWAP/OPTION. If both `uly` and `instFamily` are passed, `instFamily` will be used.

        - name: ccy
          in: query
          required: false
          schema:
            type: string
          description: Currency, only applicable to MARGIN.

        - name: before
          in: query
          required: false
          schema:
            type: string
          description: Pagination of data to return records newer than the requested `ts`.

        - name: after
          in: query
          required: false
          schema:
            type: string
          description: Pagination of data to return records earlier than the requested `ts`.

        - name: limit
          in: query
          required: false
          schema:
            type: string
            default: "100"
          description: Number of results per request. The maximum is 100; the default is 100.

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/InsuranceFund"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /public/convert-contract-coin:
    get:
      summary: Unit convert
      tags:
        - Public Data
      description: "Get insurance fund balance information.<br>Rate limit rule: IP +instrumentID"
      parameters:
        - name: "type"
          in: "query"
          description: "Convert type. 1: Convert currency to contract, 2: Convert contract to currency. The default is 1."
          required: false
          schema:
            type: string
            enum:
              - "1" # Convert currency to contract
              - "2" # Convert contract to currency
            default: "1"
        - name: "instId"
          in: "query"
          description: "Instrument ID. Only applicable to FUTURES/SWAP/OPTION."
          required: true
          schema:
            type: string
        - name: "sz"
          in: "query"
          description: "Quantity to buy or sell. It is the quantity of currency while converting currency to contract, and the quantity of contract while converting contract to currency."
          required: true
          schema:
            type: string
        - name: "px"
          in: "query"
          description: "Order price. For crypto-margined contracts, it is necessary while converting. For USDT-margined contracts, it is necessary while converting between USDT and contract. It is optional while converting between coin and contract. For OPTION, it is optional."
          required: false
          schema:
            type: string
        - name: "unit"
          in: "query"
          description: "The unit of currency. Only applicable to USDⓈ-margined contracts from FUTURES/SWAP."
          required: false
          schema:
            type: string
            enum:
              - "coin"
              - "usds" # USDT/USDC
        - name: "opType"
          in: "query"
          description: "Order type. Applicable to FUTURES/SWAP."
          required: false
          schema:
            type: string
            enum:
              - "open" # Round down sz when opening positions
              - "close" # Round sz to the nearest when closing positions
            default: "close"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/ConversionCoin"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /public/instrument-tick-bands:
    get:
      summary: Get Option tick bands
      tags:
        - Public Data
      description: "Get insurance fund balance information.<br>Rate limit rule: IP +instrumentID"
      parameters:
        - name: instType
          in: query
          description: "instrument type. "
          required: false
          schema:
            type: string
        - name: instFamily
          in: query
          description: "Instrument ID. Only applicable to FUTURES/SWAP/OPTION."
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/TickBand"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /public/premium-history:
    get:
      summary: Get premium history
      tags:
        - Public Data
      description: "It will return premium data in the past 6 months.<br>Rate limit rule: IP +instrumentID"
      parameters:
        - name: instId
          in: query
          description: "Instrument ID, e.g. BTC-USDT-SWAP"
          required: true
          schema:
            type: string

        - name: after
          in: query
          description: "Pagination of data to return records earlier than the requested ts (not included)"
          required: false
          schema:
            type: string

        - name: before
          in: query
          description: "Pagination of data to return records newer than the requested ts (not included)"
          required: false
          schema:
            type: string

        - name: limit
          in: query
          description: "Number of results per request. The maximum is 100. The default is 100."
          required: false
          schema:
            type: string
            default: "100"
            maximum: 100

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/PremiumHistory"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /market/index-tickers:
    get:
      summary: get index tickers
      tags:
        - Public Data
      description: "Rate limit rule: IP +instrumentID"
      parameters:
        - name: instId
          in: query
          description: "Instrument ID, e.g. BTC-USDT-SWAP"
          required: true
          schema:
            type: string

        - name: quoteCcy
          in: query
          description: "Quote currency<br>Currently there is only an index with USD/USDT/BTC/USDC as the quote currency."
          required: false
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/IndexTickers"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /market/index-candles:
    get:
      summary: get index candles
      tags:
        - Public Data
      description: "Retrieve the candlestick charts of the index.<br>This endpoint can retrieve the latest 1,440 data entries. Charts are returned in groups based on the requested bar.<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: IP"
      parameters:
        - name: instId
          in: query
          required: true
          description: "Index, e.g. BTC-USD"
          schema:
            type: string
        - name: after
          in: query
          required: false
          description: "Pagination of data to return records earlier than the requested ts"
          schema:
            type: string
        - name: before
          in: query
          required: false
          description: "Pagination of data to return records newer than the requested ts. The latest data will be returned when using before individually."
          schema:
            type: string
        - name: bar
          in: query
          required: false
          description: "Bar size, the default is 1m. e.g. [1m/3m/5m/15m/30m/1H/2H/4H]. Hong Kong time opening price k-line: [6H/12H/1D/1W/1M/3M]. UTC time opening price k-line: [6Hutc/12Hutc/1Dutc/1Wutc/1Mutc/3Mutc]"
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: "Number of results per request. The maximum is 100. The default is 100."
          schema:
            type: string
            default: "100"
            enum:
              - "100"

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: array
                          items:
                            type: string
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /market/history-index-candles:
    get:
      summary: get index candles history
      tags:
        - Public Data
      description: "Retrieve the candlestick charts of the index from recent years.<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: IP"
      parameters:
        - name: instId
          in: query
          required: true
          description: "Index, e.g. BTC-USD"
          schema:
            type: string
        - name: after
          in: query
          required: false
          description: "Pagination of data to return records earlier than the requested ts"
          schema:
            type: string
        - name: before
          in: query
          required: false
          description: "Pagination of data to return records newer than the requested ts. The latest data will be returned when using before individually."
          schema:
            type: string
        - name: bar
          in: query
          required: false
          description: "Bar size, the default is 1m. e.g. [1m/3m/5m/15m/30m/1H/2H/4H]. Hong Kong time opening price k-line: [6H/12H/1D/1W/1M/3M]. UTC time opening price k-line: [6Hutc/12Hutc/1Dutc/1Wutc/1Mutc/3Mutc]"
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: "Number of results per request. The maximum is 100. The default is 100."
          schema:
            type: string
            default: "100"
            enum:
              - "100"

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: array
                          items:
                            type: string
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /market/mark-price-candles:
    get:
      summary: get mark price candlestick
      tags:
        - Public Data
      description: "Retrieve the candlestick charts of mark price. This endpoint can retrieve the latest 1,440 data entries. Charts are returned in groups based on the requested bar.<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: IP"
      parameters:
        - name: instId
          in: query
          required: true
          description: "Index, e.g. BTC-USD"
          schema:
            type: string
        - name: after
          in: query
          required: false
          description: "Pagination of data to return records earlier than the requested ts"
          schema:
            type: string
        - name: before
          in: query
          required: false
          description: "Pagination of data to return records newer than the requested ts. The latest data will be returned when using before individually."
          schema:
            type: string
        - name: bar
          in: query
          required: false
          description: "Bar size, the default is 1m. e.g. [1m/3m/5m/15m/30m/1H/2H/4H]. Hong Kong time opening price k-line: [6H/12H/1D/1W/1M/3M]. UTC time opening price k-line: [6Hutc/12Hutc/1Dutc/1Wutc/1Mutc/3Mutc]"
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: "Number of results per request. The maximum is 100. The default is 100."
          schema:
            type: string
            default: "100"
            enum:
              - "100"

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: array
                          items:
                            type: string
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /market/history-mark-price-candles:
    get:
      summary: get mark price candlestick
      tags:
        - Public Data
      description: "Retrieve the candlestick charts of mark price. This endpoint can retrieve the latest 1,440 data entries. Charts are returned in groups based on the requested bar.<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: IP"
      parameters:
        - name: instId
          in: query
          required: true
          description: "Index, e.g. BTC-USD"
          schema:
            type: string
        - name: after
          in: query
          required: false
          description: "Pagination of data to return records earlier than the requested ts"
          schema:
            type: string
        - name: before
          in: query
          required: false
          description: "Pagination of data to return records newer than the requested ts. The latest data will be returned when using before individually."
          schema:
            type: string
        - name: bar
          in: query
          required: false
          description: "Bar size, the default is 1m. e.g. [1m/3m/5m/15m/30m/1H/2H/4H]. Hong Kong time opening price k-line: [6H/12H/1D/1W/1M/3M]. UTC time opening price k-line: [6Hutc/12Hutc/1Dutc/1Wutc/1Mutc/3Mutc]"
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: "Number of results per request. The maximum is 100. The default is 100."
          schema:
            type: string
            default: "100"
            enum:
              - "100"

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: array
                          items:
                            type: string
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /market/open-oracle:
    get:
      summary: get market oracle
      tags:
        - Public Data
      description: "Get the crypto price of signing using Open Oracle smart contract.<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: IP"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Oracle"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /market/exchange-rate:
    get:
      summary: get market exchange rate
      tags:
        - Public Data
      description: "This interface provides the average exchange rate data for 2 weeks<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: IP"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            usdCny:
                              type: string

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /market/index-components:
    get:
      summary: get index components
      tags:
        - Public Data
      description: "Get the index component information data on the market.<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: IP"
      parameters:
        - in: query
          name: index
          required: true
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/IndexComponents"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /public/economic-calendar:
    get:
      summary: get economic calender
      tags:
        - Public Data
      description: "Get the macro-economic calendar data within 3 months. Historical data from 3 months ago is only available to users with trading fee tier VIP1 and above.<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: IP"
      parameters:
        - name: importance
          in: query
          description: "Level of importance"
          required: false
          schema:
            type: string
            enum:
              - "1" # low
              - "2" # medium
              - "3" # high

        - name: before
          in: query
          description: "Pagination of data to return records newer than the requested ts based on the date parameter. Unix timestamp format in milliseconds."
          required: false
          schema:
            type: string
            format: int64
            description: "Unix timestamp format in milliseconds."

        - name: after
          in: query
          description: "Pagination of data to return records earlier than the requested ts based on the date parameter. Unix timestamp format in milliseconds. The default is the timestamp of the request moment."
          required: false
          schema:
            type: string
            format: int64
            description: "Unix timestamp format in milliseconds."

        - name: limit
          in: query
          description: "Number of results per request. The maximum is 100. The default is 100."
          required: false
          schema:
            type: string
            default: "100"
            description: "Limit on the number of records returned per request."

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/EconomicCalender"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /rubik/stat/trading-data/support-coin:
    get:
      summary: get support coin
      tags:
        - Trading Statistics
      description: "Retrieve the currencies supported by the trading statistics endpoints.<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: IP"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/SupportCoin"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /rubik/stat/contracts/open-interest-history:
    get:
      summary: get contract open inetrest history
      tags:
        - Trading Statistics
      description: "Retrieve the contract open interest statistics of futures and perp. This endpoint can retrieve the latest 1,440 data entries.<br>For period=1D, the data time range is up to January 1, 2024; for other periods, the data time range is up to early February 2024..<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: IP"
      parameters:
        - name: instId
          in: query
          description: "Instrument ID, e.g., BTC-USDT-SWAP. Only applicable to FUTURES and SWAP."
          required: true
          schema:
            type: string
        - name: period
          in: query
          description: "Bar size, the default is 5m. Options include: [5m/15m/30m/1H/2H/4H]. For Hong Kong time opening price k-line: [6H/12H/1D/2D/3D/5D/1W/1M/3M]. For UTC time opening price k-line: [6Hutc/12Hutc/1Dutc/2Dutc/3Dutc/5Dutc/1Wutc/1Mutc/3Mutc]."
          required: false
          schema:
            type: string
        - name: end
          in: query
          description: "Pagination of data to return records earlier than the requested ts."
          required: false
          schema:
            type: string
        - name: begin
          in: query
          description: "Pagination of data to return records newer than the requested ts."
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: "Number of results per request. The maximum is 100. The default is 100."
          required: false
          schema:
            type: string
            default: "100"
            enum:
              - "100"

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/ContractHistory"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /rubik/stat/taker-volume:
    get:
      summary: get Taker Volume
      tags:
        - Trading Statistics
      description: "Retrieve the taker volume for both buyers and sellers.<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: IP"
      parameters:
        - name: ccy
          in: query
          required: true
          schema:
            type: string
          description: "Currency"

        - name: instType
          in: query
          required: true
          schema:
            type: string
            enum:
              - SPOT
              - CONTRACTS
          description: "Instrument type"

        - name: begin
          in: query
          required: false
          schema:
            type: string
          description: "Begin time, Unix timestamp format in milliseconds, e.g. 1597026383085"

        - name: end
          in: query
          required: false
          schema:
            type: string
          description: "End time, Unix timestamp format in milliseconds, e.g. 1597026383011"

        - name: period
          in: query
          required: false
          schema:
            type: string
            enum:
              - 5m
              - 1H
              - 1D
          description: "Period, the default is 5m. Granularity can only query data within certain time ranges."

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/TakerVol"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /rubik/stat/taker-volume-contract:
    get:
      summary: get Taker Volume contract
      tags:
        - Trading Statistics
      description: "Retrieve the contract taker volume for both buyers and sellers. This endpoint can retrieve the latest 1,440 data entries.<br>For period=1D, the data time range is up to January 1, 2024; for other periods, the data time range is up to early February 2024.<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: IP"
      parameters:
        - name: instId
          in: query
          required: true
          description: "Instrument ID, e.g., BTC-USDT-SWAP. Only applicable to FUTURES, SWAP."
          schema:
            type: string

        - name: period
          in: query
          required: false
          description: "Bar size. The default is 5m. E.g., [5m/15m/30m/1H/2H/4H]."
          schema:
            type: string

        - name: unit
          in: query
          required: false
          description: "The unit of buy/sell volume. The default is 1. Options: 0: Crypto, 1: Contracts, 2: U."
          schema:
            type: string

        - name: end
          in: query
          required: false
          description: "Return records earlier than the requested ts."
          schema:
            type: string

        - name: begin
          in: query
          required: false
          description: "Return records newer than the requested ts."
          schema:
            type: string

        - name: limit
          in: query
          required: false
          description: "Number of results per request. The maximum is 100. The default is 100."
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/TakerVol"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /rubik/stat/margin/loan-ratio:
    get:
      summary: get margin lending ratio
      tags:
        - Trading Statistics
      description: "Retrieve the contract taker volume for both buyers and sellers. This endpoint can retrieve the latest 1,440 data entries.<br>For period=1D, the data time range is up to January 1, 2024; for other periods, the data time range is up to early February 2024.<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: IP"
      parameters:
        - name: ccy
          in: query
          required: true
          description: "Currency."
          schema:
            type: string

        - name: begin
          in: query
          required: false
          description: "Begin time, e.g., 1597026383085."
          schema:
            type: string

        - name: end
          in: query
          required: false
          description: "End time, e.g., 1597026383085."
          schema:
            type: string

        - name: period
          in: query
          required: false
          description: "Period. m: Minute, H: Hour, D: Day. The default is 5m. E.g., [5m/1H/1D]."
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: array
                          items:
                            type: string

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /rubik/stat/contracts/long-short-account-ratio-contract-top-trader:
    get:
      summary: get top traders contract
      tags:
        - Trading Statistics
      description: "Retrieve the account net long/short ratio of a contract for top traders. Top traders refer to the top 5% of traders with the largest open position value. This endpoint can retrieve the latest 1,440 data entries. The data time range is up to March 22, 2024.<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: IP"
      parameters:
        - name: ccy
          in: query
          required: true
          description: "Currency."
          schema:
            type: string

        - name: begin
          in: query
          required: false
          description: "Begin time, e.g., 1597026383085."
          schema:
            type: string

        - name: end
          in: query
          required: false
          description: "End time, e.g., 1597026383085."
          schema:
            type: string

        - name: period
          in: query
          required: false
          description: "Period. m: Minute, H: Hour, D: Day. The default is 5m. E.g., [5m/1H/1D]."
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: array
                          items:
                            type: string

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /rubik/stat/contracts/long-short-position-ratio-contract-top-trader:
    get:
      summary: get top trsader by position
      tags:
        - Trading Statistics
      description: "Retrieve the position long/short ratio of a contract for top traders. Top traders refer to the top 5% of traders with the largest open position value. This endpoint can retrieve the latest 1,440 data entries. The data time range is up to March 22, 2024.<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: IP"
      parameters:
        - name: instId
          in: query
          required: true
          schema:
            type: string

        - name: begin
          in: query
          required: false
          description: "Begin time, e.g., 1597026383085."
          schema:
            type: string

        - name: end
          in: query
          required: false
          description: "End time, e.g., 1597026383085."
          schema:
            type: string

        - name: period
          in: query
          required: false
          description: "Period. m: Minute, H: Hour, D: Day. The default is 5m. E.g., [5m/1H/1D]."
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: array
                          items:
                            type: string

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /rubik/stat/contracts/long-short-account-ratio-contract:
    get:
      summary: get contract long/short ratio
      tags:
        - Trading Statistics
      description: "Retrieve the account long/short ratio of a contract. This endpoint can retrieve the latest 1,440 data entries.<br>For period=1D, the data time range is up to January 1, 2024; for other periods, the data time range is up to early February 2024.<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: IP"
      parameters:
        - name: instId
          in: query
          required: true
          schema:
            type: string

        - name: begin
          in: query
          required: false
          description: "Begin time, e.g., 1597026383085."
          schema:
            type: string

        - name: end
          in: query
          required: false
          description: "End time, e.g., 1597026383085."
          schema:
            type: string

        - name: period
          in: query
          required: false
          description: "Period. m: Minute, H: Hour, D: Day. The default is 5m. E.g., [5m/1H/1D]."
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: array
                          items:
                            type: string

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /rubik/stat/contracts/long-short-account-ratio:
    get:
      summary: get long/short ratio
      tags:
        - Trading Statistics
      description: "Retrieve the account long/short ratio of a contract. This endpoint can retrieve the latest 1,440 data entries.<br>For period=1D, the data time range is up to January 1, 2024; for other periods, the data time range is up to early February 2024.<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: IP"
      parameters:
        - name: ccy
          in: query
          required: true
          description: "Currency."
          schema:
            type: string

        - name: begin
          in: query
          required: false
          description: "Begin time, e.g., 1597026383085."
          schema:
            type: string

        - name: end
          in: query
          required: false
          description: "End time, e.g., 1597026383085."
          schema:
            type: string

        - name: period
          in: query
          required: false
          description: "Period. m: Minute, H: Hour, D: Day. The default is 5m. E.g., [5m/1H/1D]."
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: array
                          items:
                            type: string

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /rubik/stat/contracts/open-interest-volume:
    get:
      summary: get open interest and volume
      tags:
        - Trading Statistics
      description: "Retrieve the open interest and trading volume for Expiry Futures and Perpetual Futures.<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: IP"
      parameters:
        - name: ccy
          in: query
          required: true
          description: "Currency."
          schema:
            type: string

        - name: begin
          in: query
          required: false
          description: "Begin time, e.g., 1597026383085."
          schema:
            type: string

        - name: end
          in: query
          required: false
          description: "End time, e.g., 1597026383085."
          schema:
            type: string

        - name: period
          in: query
          required: false
          description: "Period. m: Minute, H: Hour, D: Day. The default is 5m. E.g., [5m/1H/1D]."
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: array
                          items:
                            type: string

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /rubik/stat/option/open-interest-volume:
    get:
      summary: get options open interest and volume
      tags:
        - Trading Statistics
      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: IP"
      parameters:
        - name: ccy
          in: query
          required: true
          description: "Currency"
          schema:
            type: string

        - name: expTime
          in: query
          required: true
          description: "Contract expiry date, the format is YYYYMMdd, e.g., 20210623."
          schema:
            type: string

        - name: period
          in: query
          required: false
          description: "Period, the default is 8H. E.g., [8H/1D]. Each granularity can provide only one latest piece of data."
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: array
                          items:
                            type: string

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /rubik/stat/option/open-interest-volume-ratio:
    get:
      summary: Get put/call ratio
      tags:
        - Trading Statistics
      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: IP"
      parameters:
        - name: ccy
          in: query
          required: true
          description: "Currency."
          schema:
            type: string

        - name: period
          in: query
          required: false
          description: "Period. m: Minute, H: Hour, D: Day. The default is 5m. E.g., [5m/1H/1D]."
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: array
                          items:
                            type: string

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /rubik/stat/option/open-interest-volume-expiry:
    get:
      summary: Get open interest and volume (expiry)
      tags:
        - Trading Statistics
      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: IP"
      parameters:
        - name: ccy
          in: query
          required: true
          description: "Currency."
          schema:
            type: string

        - name: period
          in: query
          required: false
          description: "Period. m: Minute, H: Hour, D: Day. The default is 5m. E.g., [5m/1H/1D]."
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: array
                          items:
                            type: string

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /rubik/stat/option/open-interest-volume-strike:
    get:
      summary: Get open interest and volume )
      tags:
        - Trading Statistics
      description: "Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: IP"
      parameters:
        - name: ccy
          in: query
          required: true
          description: "Currency."
          schema:
            type: string

        - name: period
          in: query
          required: false
          description: "Period. m: Minute, H: Hour, D: Day. The default is 5m. E.g., [5m/1H/1D]."
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/VolumStrike"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /rubik/stat/option/taker-block-volume:
    get:
      summary: Get taker-block-volume
      tags:
        - Trading Statistics
      description: "This shows the relative buy/sell volume for calls and puts. It shows whether traders are bullish or bearish on price and volatility.<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: IP"
      parameters:
        - name: ccy
          in: query
          required: true
          description: "Currency."
          schema:
            type: string

        - name: period
          in: query
          required: false
          description: "Period. m: Minute, H: Hour, D: Day. The default is 5m. E.g., [5m/1H/1D]."
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/VolumStrike"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /asset/currencies:
    get:
      summary: Get Currencies
      tags:
        - Funding Account
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []

      description: "Retrieve a list of all currencies available which are related to the current account's KYC entity.<br>Rate Limit: 20 requests per 2 seconds<br>Rate limit rule: IP"
      parameters:
        - name: ccy
          in: query
          required: true
          description: "Currency."
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/CurrunciesData"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /asset/balances:
    get:
      summary: Get Balance information
      tags:
        - Funding Account
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []

      description: "Retrieve the funding account balances of all the assets and the amount that is available or on hold.<br> Only asset information of a currency with a balance greater than 0 will be returned.<br>Rate Limit: 6 requests per second<br>Rate limit rule: UserID"
      parameters:
        - name: ccy
          in: query
          required: true
          description: "Currency."
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/BalanceData"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /asset/non-tradable-assets:
    get:
      summary: Get non-tradeable assets
      tags:
        - Funding Account
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []

      description: "Rate Limit: 6 requests per second<br>Rate limit rule: UserID"
      parameters:
        - name: ccy
          in: query
          required: true
          description: "Currency."
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/CurrunciesData"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /asset/asset-valuation:
    get:
      summary: Get account asset-valuation
      tags:
        - Funding Account
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []

      description: "Rate Limit: 6 requests per second<br>Rate limit rule: UserID"
      parameters:
        - name: ccy
          in: query
          required: true
          description: "Currency."
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/AccountValuation"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /asset/transfer:
    post:
      summary: Funds transfer
      tags:
        - Funding Account
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []

      description: "Only API keys with Trade privilege can call this endpoint.<br>This endpoint supports the transfer of funds between your funding account and trading account, and from the master account to sub-accounts.<br>Sub-account can transfer out to master account by default. Need to call Set permission of transfer out to grant privilege first if you want sub-account transferring to another sub-account (sub-accounts need to belong to same master account.)<br>Rate Limit: 6 requests per second<br>Rate limit rule: UserID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransferRequest"

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/TransferResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /asset/transfer-state:
    get:
      summary: Funds transfer state
      tags:
        - Funding Account
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []

      description: "Rate Limit: 6 requests per second<br>Rate limit rule: UserID"
      parameters:
        - name: transId
          in: query
          description: "Transfer ID. Either transId or clientId is required. If both are passed, transId will be used."
          required: false
          schema:
            type: string

        - name: clientId
          in: query
          description: "Client-supplied ID (up to 32 alphanumeric characters). Either transId or clientId is required. If both are passed, transId will be used."
          required: false
          schema:
            type: string
            maxLength: 32
            pattern: "^[a-zA-Z0-9]+$"

        - name: type
          in: query
          description: "Transfer type."
          required: false
          schema:
            type: string
            enum:
              - "0" # Transfer within account
              - "1" # Master account to sub-account
              - "2" # Sub-account to master account
              - "3" # Sub-account to master account (sub-account API)
              - "4" # Sub-account to sub-account (within same master account)
            default: "0"

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/TransferStateResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /asset/bills:
    get:
      summary: Assets bill details
      tags:
        - Funding Account
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []

      description: "Query the billing record in the past month.<br>Rate Limit: 6 requests per second<br>Rate limit rule: UserID"
      parameters:
        - name: ccy
          in: query
          description: Currency code, e.g., USD, BTC.
          required: false
          schema:
            type: string
        - name: type
          in: query
          description: >
            Bill type. Possible values include:
            - 1: Deposit
            - 2: Withdrawal
            - 13: Canceled withdrawal
            - 20: Transfer to sub-account (for master account)
            - ...
          required: false
          schema:
            type: integer
            enum: [1, 2, 13, 20, 21, 22, 23, 28, 47, 48, 49, 61, 68, 72]
        - name: clientId
          in: query
          description: >
            Client-supplied ID for transfer or withdrawal. 
            A combination of case-sensitive alphanumerics, all numbers, or all letters of up to 32 characters.
          required: false
          schema:
            type: string
        - name: after
          in: query
          description: >
            Pagination parameter to return records earlier than the requested timestamp, in milliseconds.
            Example: 1597026383085
          required: false
          schema:
            type: string
            format: int64
        - name: before
          in: query
          description: >
            Pagination parameter to return records newer than the requested timestamp, in milliseconds.
            Example: 1597026383085
          required: false
          schema:
            type: string
            format: int64
        - name: limit
          in: query
          description: Number of results per request. Maximum is 100. Default is 100.
          required: false
          schema:
            type: integer
            default: 100
            maximum: 100
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/AssetBills"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /asset/deposit-address:
    get:
      summary: Assets deposit address
      tags:
        - Funding Account
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []

      description: "Retrieve the deposit addresses of currencies, including previously-used addresses.<br>Rate Limit: 6 requests per second<br>Rate limit rule: UserID"
      parameters:
        - name: ccy
          in: query
          description: Currency code, e.g., USD, BTC.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Deposit"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /asset/deposit-history:
    get:
      summary: Assets deposit address history
      tags:
        - Funding Account
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []

      description: "Retrieve the deposit records according to the currency, deposit status, and time range in reverse chronological order. The 100 most recent records are returned by default.<br>Websocket API is also available, refer to Deposit info channel.<br>Rate Limit: 6 requests per second<br>Rate limit rule: UserID"
      parameters:
        - name: ccy
          in: query
          description: Currency, e.g., BTC
          required: false
          schema:
            type: string

        - name: depId
          in: query
          description: Deposit ID
          required: false
          schema:
            type: string

        - name: fromWdId
          in: query
          description: >
            Internal transfer initiator's withdrawal ID. If the deposit comes from an internal transfer, this field displays the withdrawal ID of the internal transfer initiator.
          required: false
          schema:
            type: string

        - name: txId
          in: query
          description: Hash record of the deposit
          required: false
          schema:
            type: string

        - name: type
          in: query
          description: >
            Deposit Type:  
            - `3`: Internal transfer  
            - `4`: Deposit from chain
          required: false
          schema:
            type: string
            enum:
              - "3"
              - "4"

        - name: state
          in: query
          description: >
            Status of the deposit:  
            - `0`: Waiting for confirmation  
            - `1`: Deposit credited  
            - `2`: Deposit successful  
            - `8`: Pending due to temporary deposit suspension on this cryptocurrency  
            - `11`: Match the address blacklist  
            - `12`: Account or deposit is frozen  
            - `13`: Sub-account deposit interception  
            - `14`: KYC limit
          required: false
          schema:
            type: string
            enum:
              - "0"
              - "1"
              - "2"
              - "8"
              - "11"
              - "12"
              - "13"
              - "14"

        - name: after
          in: query
          description: >
            Pagination parameter to return records earlier than the requested timestamp. Unix timestamp format in milliseconds, e.g., 1654041600000.
          required: false
          schema:
            type: string
            format: int64

        - name: before
          in: query
          description: >
            Pagination parameter to return records newer than the requested timestamp. Unix timestamp format in milliseconds, e.g., 1656633600000.
          required: false
          schema:
            type: string
            format: int64

        - name: limit
          in: query
          description: >
            Number of results per request. Maximum is 100; the default is 100.
          required: false
          schema:
            type: string
            default: "100"

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DepositHistory"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /asset/withdrawal:
    post:
      summary: Withdraw assets
      tags:
        - Funding Account
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []

      description: "Only supported withdrawal of assets from funding account. Common sub-account does not support withdrawal.<br>Rate Limit: 6 requests per second<br>Rate limit rule: UserID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WithdrawalRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/WithdrawalResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /asset/cancel-withdrawal:
    post:
      summary: cancel Withdraw assets
      tags:
        - Funding Account
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []

      description: "<br>Rate Limit: 6 requests per second<br>Rate limit rule: UserID"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                wdId:
                  type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            wdId:
                              type: string

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /asset/withdrawal-history:
    post:
      summary: withdrawal history
      tags:
        - Funding Account
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Retrieve the withdrawal records according to the currency, withdrawal status, and time range in reverse chronological order. The 100 most recent records are returned by default.<br>Websocket API is also available, refer to Withdrawal info channel.<br>Rate Limit: 6 requests per second<br>Rate limit rule: UserID"
      parameters:
        - name: after
          in: query
          description: >
            Pagination parameter for records earlier than the requested timestamp.
          required: false
          schema:
            type: string
        - name: before
          in: query
          description: >
            Pagination parameter for records newer than the requested timestamp.
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: >
            The number of records to return. Maximum of 100 (default 100).
          required: false
          schema:
            type: string
        - name: ccy
          in: query
          description: Currency, e.g., BTC.
          required: false
          schema:
            type: string
        - name: wdId
          in: query
          description: >
            Withdrawal ID.
          required: false
          schema:
            type: string
        - name: clientId
          in: query
          description: >
            Client-supplied ID (up to 32 characters).
          required: false
          schema:
            type: string
        - name: txId
          in: query
          description: >
            Transaction ID of the withdrawal.
          required: false
          schema:
            type: string
        - name: type
          in: query
          description: >
            Type of withdrawal.
            - 3: Internal transfer
            - 4: On-chain withdrawal.
          required: false
          schema:
            type: string
        - name: state
          in: query
          description: >
            Status of withdrawal.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DepositHistory"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /asset/deposit-withdraw-status:
    get:
      summary: deposit withdraw status
      tags:
        - Funding Account
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      description: "Retrieve deposit's and withdrawal's detailed status and estimated complete time.<br>Rate Limit: 6 requests per second<br>Rate limit rule: UserID"
      parameters:
        - name: wdId
          in: query
          description: >
            Withdrawal ID, used to retrieve withdrawal status. Must provide one and only one of `wdId` or `txId`.
          required: false
          schema:
            type: string
        - name: txId
          in: query
          description: >
            Hash record of the deposit, used to retrieve deposit status. Must provide one and only one of `wdId` or `txId`.
          required: false
          schema:
            type: string
        - name: ccy
          in: query
          description: >
            Currency type, e.g., USDT. This is required when retrieving deposit status with `txId`.
          required: false
          schema:
            type: string
        - name: to
          in: query
          description: >
            To address, the destination address in deposit. This is required when retrieving deposit status with `txId`.
          required: false
          schema:
            type: string
        - name: chain
          in: query
          description: >
            Currency chain information, e.g., USDT-ERC20. This is required when retrieving deposit status with `txId`.
          required: false
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DepositWithdraw"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /asset/exchange-list:
    get:
      summary: List of exchanges
      tags:
        - Funding Account
      description: "Rate Limit: 6 requests per second<br>Rate limit rule: UserID"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/ExchangeList"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /asset/monthly-statement:
    post:
      summary: Apply for monthly statement in the past year.
      tags:
        - Funding Account
      description: "Rate Limit: 6 requests per second<br>Rate limit rule: UserID"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                month:
                  type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            ts:
                              type: string

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      summary: get monthly statement in the past year.
      tags:
        - Funding Account
      description: "Rate Limit: 6 requests per second<br>Rate limit rule: UserID"
      parameters:
        - in: query
          name: month
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Statements"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /asset/convert/currencies:
    get:
      summary: Get convert currencies
      tags:
        - Funding Account
      description: "Rate Limit: 6 requests per second<br>Rate limit rule: UserID"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            ccy:
                              type: string

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /asset/convert/currency-pair:
    get:
      summary: Get convert currencies
      tags:
        - Funding Account
      description: "Rate Limit: 6 requests per second<br>Rate limit rule: UserID"
      parameters:
        - name: fromCcy
          in: query
          description: "Currency to convert from, e.g., USDT."
          required: true
          schema:
            type: string
        - name: toCcy
          in: query
          description: "Currency to convert to, e.g., BTC."
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/CurrencyPair"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /asset/convert/estimate-quote:
    post:
      summary: Estimate qioute
      tags:
        - Funding Account
      description: "Rate Limit: 10 requests per second<br>Rate limit rule: UserID<br>Rate Limit: 1 request per 5 seconds<br>Rate limit rule: Instrument"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EstimationRequest"

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/EstimationResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /asset/convert/trade:
    post:
      summary: Convert trade
      tags:
        - Funding Account
      description: "Rate Limit: 10 requests per second<br>Rate limit rule: UserID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TradeConversionRequest"

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/TradeConversionResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /asset/convert/history:
    get:
      summary: Get convert history
      tags:
        - Funding Account
      description: "Rate Limit: 6 requests per second<br>Rate limit rule: UserID"

      parameters:
        - name: clTReqId
          in: query
          description: "Client Order ID as assigned by the client. A combination of case-sensitive alphanumerics, all numbers, or all letters of up to 32 characters."
          required: false
          schema:
            type: string
            maxLength: 32
        - name: after
          in: query
          description: "Pagination parameter to return records earlier than the requested timestamp, Unix timestamp format in milliseconds (e.g., 1597026383085)."
          required: false
          schema:
            type: string
        - name: before
          in: query
          description: "Pagination parameter to return records newer than the requested timestamp, Unix timestamp format in milliseconds (e.g., 1597026383085)."
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: "Number of results per request. The maximum is 100; the default is 100."
          required: false
          schema:
            type: integer
            default: 100
            maximum: 100
        - name: tag
          in: query
          description: "Order tag, applicable to broker users. If the convert trading used tag, this parameter is also required."
          required: false
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/TradeHistoryResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /fiat/deposit-payment-methods:
    get:
      summary: Get Deposit Payment Methods
      tags:
        - Funding Account
      description: "Rate Limit: 3 requests per second<br>Rate limit rule: UserID"

      parameters:
        - name: ccy
          in: query
          required: false
          schema:
            type: string
            example: "ISO-4217 3 digit currency code"

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/PaymentMethodsResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /fiat/withdrawal-payment-methods:
    get:
      summary: Get withdrawal Payment Methods
      tags:
        - Funding Account
      description: "Rate Limit: 3 requests per second<br>Rate limit rule: UserID"

      parameters:
        - name: ccy
          in: query
          required: false
          schema:
            type: string
            example: "ISO-4217 3 digit currency code"

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/WithdrawalPaymentMethodsResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /fiat/create-withdrawal:
    post:
      summary: create withdrawal order
      tags:
        - Funding Account
      description: 'Initiate a fiat withdrawal request (Authenticated endpoint, Only for API keys with "Withdrawal" access)<br>Rate Limit: 3 requests per second<br>Rate limit rule: UserID'

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWithdrawal"

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/CreateWithdrawalResponse"

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /fiat/cancel-withdrawal:
    post:
      summary: cancel withdrawal order
      tags:
        - Funding Account
      description: "Rate Limit: 3 requests per second<br>Rate limit rule: UserID"

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ordId:
                  type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            ordId:
                              type: string
                            state:
                              type: string
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /fiat/withdrawal-order-history:
    get:
      summary: Get fiat withdrawal order history
      tags:
        - Funding Account
      description: "Rate Limit: 3 requests per second<br>Rate limit rule: UserID"

      parameters:
        - name: ccy
          in: query
          description: "ISO-4217 3 digit currency code."
          required: false
          schema:
            type: string

        - name: paymentMethod
          in: query
          description: "The payment method used for the order."
          required: false
          schema:
            type: string
            enum: ["SEPA", "TR_BANKS", "PIX"]

        - name: state
          in: query
          description: "State of the order."
          required: false
          schema:
            type: string
            enum:
              [
                "completed",
                "failed",
                "pending",
                "canceled",
                "inqueue",
                "processing",
              ]

        - name: after
          in: query
          description: "Filter with a begin timestamp. Unix timestamp format in milliseconds (inclusive)."
          required: false
          schema:
            type: string
            format: date-time

        - name: before
          in: query
          description: "Filter with an end timestamp. Unix timestamp format in milliseconds (inclusive)."
          required: false
          schema:
            type: string
            format: date-time
        - name: limit
          in: query
          description: "Number of results per request. Maximum and default is 100."
          required: false
          schema:
            type: string
            default: "100"
            maximum: 100

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/WithdrawalHistory"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /fiat/deposit-order-history:
    get:
      summary: Get fiat deposit order history
      tags:
        - Funding Account
      description: "Rate Limit: 3 requests per second<br>Rate limit rule: UserID"
      parameters:
        - name: "transactionId"
          in: query
          required: true
          description: "The unique identifier of the transaction."
          schema:
            type: string
        - name: "ccy"
          in: "query"
          required: false
          description: "ISO-4217 3-character currency code (e.g., USD, EUR)."
          schema:
            type: string
        - name: "paymentMethod"
          in: "query"
          required: false
          description: "Payment method used for the transaction (SEPA, TR_BANKS, PIX)."
          schema:
            type: string
        - name: "state"
          in: "query"
          required: false
          description: "State of the order (completed, failed, pending, canceled, inqueue, processing)."
          schema:
            type: string
        - name: "after"
          in: "query"
          required: false
          description: "Filter with a begin timestamp. Unix timestamp format in milliseconds (inclusive)."
          schema:
            type: string
            format: date-time
        - name: "before"
          in: "query"
          required: false
          description: "Filter with an end timestamp. Unix timestamp format in milliseconds (inclusive)."
          schema:
            type: string
            format: date-time
        - name: "limit"
          in: "query"
          required: false
          description: "Number of results per request. Default is 100, maximum is 100."
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/CreateWithdrawalResponse"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /fiat/deposit-order-detail:
    get:
      summary: Get fiat deposit order detail
      tags:
        - Funding Account
      description: "Rate Limit: 3 requests per second<br>Rate limit rule: UserID"
      parameters:
        - name: ordId
          in: query
          required: true
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Transaction"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /users/subaccount/list:
    get:
      summary: Get subaccount lists
      tags:
        - Sub-account
      description: "Rate Limit: 3 requests per second<br>Rate limit rule: UserID"
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      parameters:
        - name: subAcct
          in: query
          description: "The name of the sub-account."
          required: true
          schema:
            type: string
        - name: enable
          in: query
          description: "Sub-account status: `true` for Normal, `false` for Frozen."
          required: true
          schema:
            type: string
            enum:
              - "true"
              - "false"
        - name: after
          in: query
          description: "Query the data earlier than the requested sub-account creation timestamp. Value should be a Unix timestamp in milliseconds (e.g., 1597026383085)."
          required: false
          schema:
            type: string
            format: int64
        - name: before
          in: query
          description: "Query the data newer than the requested sub-account creation timestamp. Value should be a Unix timestamp in milliseconds (e.g., 1597026383085)."
          required: false
          schema:
            type: string
            format: int64
        - name: limit
          in: query
          description: "Number of results per request. Maximum is 100; default is 100."
          required: false
          schema:
            type: integer
            default: 100
            maximum: 100

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/SubAccount"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /users/subaccount/modify-apikey:
    post:
      summary: Reset api key
      tags:
        - Sub-account
      description: "Rate Limit: 3 requests per second<br>Rate limit rule: UserID"
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiKeyReset"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/SubAccountKey"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /account/subaccount/balances:
    get:
      summary: Get Subaccount trading balance
      tags:
        - Sub-account
      description: "Query detailed balance info of Trading Account of a sub-account via the master account (applies to master accounts only) <br>Rate Limit: 6 requests per second<br>Rate limit rule: UserID"
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      parameters:
        - in: query
          name: subAcc
          required: true
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/SubAccountDetails"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /asset/subaccount/balances:
    get:
      summary: Get Subaccount funding balance
      tags:
        - Sub-account
      description: "Get sub-account funding balance<br>Rate Limit: 6 requests per second<br>Rate limit rule: UserID"
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      parameters:
        - name: subAcct
          in: query
          description: The name of the sub-account.
          required: true
          schema:
            type: string
        - name: ccy
          in: query
          description: |
            Single currency or multiple currencies separated by commas (no more than 20).
            Example: `BTC` or `BTC,ETH`.
          required: false
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/AccountBalance"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /asset/subaccount/max-withdrawal:
    get:
      summary: Get Subaccount max withdrawal
      tags:
        - Sub-account
      description: "Rate limit rule: UserID"
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      parameters:
        - name: subAcct
          in: query
          description: The name of the sub-account.
          required: true
          schema:
            type: string
        - name: ccy
          in: query
          description: |
            Single currency or multiple currencies separated by commas (no more than 20).
            Example: `BTC` or `BTC,ETH`.
          required: false
          schema:
            type: string

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/MaxWithdrawal"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /asset/subaccount/bills:
    get:
      summary: Get Subaccount bills
      tags:
        - Sub-account
      description: "Rate limit rule: UserID"
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      parameters:
        - name: ccy
          in: query
          description: Currency, such as BTC
          required: false
          schema:
            type: string

        - name: type
          in: query
          description: "Transfer type (0: Transfers from master account to sub-account, 1: Transfers from sub-account to master account)"
          required: false
          schema:
            type: string
            enum: [0, 1]

        - name: subAcct
          in: query
          description: Sub-account name
          required: false
          schema:
            type: string

        - name: after
          in: query
          description: Query the data prior to the requested bill ID creation time (exclude), the value should be a Unix timestamp in millisecond format. e.g. 1597026383085
          required: false
          schema:
            type: string
            pattern: '^\d{13}$' # Regex for Unix timestamp in milliseconds

        - name: before
          in: query
          description: Query the data after the requested bill ID creation time (exclude), the value should be a Unix timestamp in millisecond format. e.g. 1597026383085
          required: false
          schema:
            type: string
            pattern: '^\d{13}$' # Regex for Unix timestamp in milliseconds

        - name: limit
          in: query
          description: Number of results per request. The maximum is 100. The default is 100.
          required: false
          schema:
            type: string
            default: "100"
            enum: ["100", "50", "25", "10"] # You can define other acceptable limits if necessary

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/SubAccountBills"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /asset/subaccount/managed-subaccount-bills:
    get:
      summary: Get managed Subaccount history
      tags:
        - Sub-account
      description: "Rate limit rule: UserID"
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      parameters:
        - name: ccy
          in: query
          description: Currency, e.g. BTC
          required: false
          schema:
            type: string

        - name: type
          in: query
          description: "Transfer type (0: Transfers from master account to sub-account, 1: Transfers from sub-account to master account)"
          required: false
          schema:
            type: string
            enum: ["0", "1"]

        - name: subAcct
          in: query
          description: Sub-account name
          required: false
          schema:
            type: string

        - name: subUid
          in: query
          description: Sub-account UID
          required: false
          schema:
            type: string

        - name: after
          in: query
          description: Query the data prior to the requested bill ID creation time (exclude), Unix timestamp in millisecond format, e.g. 1597026383085
          required: false
          schema:
            type: string
            pattern: '^\d{13}$' # Regex for Unix timestamp in milliseconds

        - name: before
          in: query
          description: Query the data after the requested bill ID creation time (exclude), Unix timestamp in millisecond format, e.g. 1597026383085
          required: false
          schema:
            type: string
            pattern: '^\d{13}$' # Regex for Unix timestamp in milliseconds

        - name: limit
          in: query
          description: Number of results per request. The maximum is 100. The default is 100.
          required: false
          schema:
            type: string
            default: "100"
            enum: ["100", "50", "25", "10"] # You can define other acceptable limits if necessary

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/ManagedBills"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /asset/subaccount/transfer:
    post:
      summary: Master accounts manage the transfers between sub-accounts
      tags:
        - Sub-account
      description: "Rate limit rule: UserID"
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transfer"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            transId:
                              type: string
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /subaccount/set-transfer-out:
    post:
      summary: Set permission of transfer out
      tags:
        - Sub-account
      description: "Rate limit rule: UserID"
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubAccountTransferRights"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/SubAccountTransferRights"
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /subaccount/entrust-subaccount-list:
    get:
      summary: get custody trading
      tags:
        - Sub-account
      description: "Rate limit rule: UserID"
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
        - PassphraseAuth: []
        - TimestampAuth: []
      parameters:
        - in: query
          name: SubAcct
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GeneralResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            SubAcct:
                              type: string

        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: OK-ACCESS-KEY
      description: Your API key for authentication

    SignatureAuth:
      type: apiKey
      in: header
      name: OK-ACCESS-SIGN
      description: Signature for the request, generated based on the API secret and request parameters

    PassphraseAuth:
      type: apiKey
      in: header
      name: OK-ACCESS-PASSPHRASE
      description: The passphrase you specified when creating the APIKey.

    TimestampAuth:
      type: apiKey
      in: header
      name: OK-ACCESS-TIMESTAMP
      description: "Timestamp for the request in Unix milliseconds.e.g: 2020-12-08T09:08:57.715Z"
  schemas:
    PlaceOrderRequest:
      type: object
      properties:
        instId:
          type: string
          description: The instrument ID (e.g., BTC-USDT)
          example: "BTC-USDT"
        tdMode:
          type: string
          description: Trade mode (e.g., cash)
          example: "cash"
        clOrdId:
          type: string
          description: Client order ID
          example: "b15"
        side:
          type: string
          description: Order side (buy or sell)
          example: "buy"
        ordType:
          type: string
          description: Order type (e.g., limit, market)
          example: "limit"
        px:
          type: string
          description: Order price
          example: "2.15"
        sz:
          type: string
          description: Order size
          example: "2"
      required:
        - instId
        - tdMode
        - side
        - ordType
        - sz
    ErrorResponse:
      type: object
      properties:
        msg:
          type: string
          example: "Invalid content type"
        code:
          type: integer
          example: 40007
    GeneralResponse:
      type: object
      properties:
        code:
          type: string
          description: Response code
          example: "0"
        msg:
          type: string
          description: Response message
          example: ""

        inTime:
          type: string
          description: Request received timestamp
          example: "1695190491421339"
        outTime:
          type: string
          description: Response sent timestamp
          example: "1695190491423240"
    OrderInfo:
      type: object
      properties:
        clOrdId:
          type: string
          description: Client order ID
          example: "oktswap6"
        ordId:
          type: string
          description: Order ID
          example: "312269865356374016"
        tag:
          type: string
          description: Tag for the order
          example: ""
        ts:
          type: string
          description: Timestamp of the order
          example: "1695190491421"
        sCode:
          type: string
          description: Status code for the order
          example: "0"
        sMsg:
          type: string
          description: Status message for the order
          example: ""
    CancelOrderRequest:
      type: object
      properties:
        instId:
          type: string
          description: The instrument ID (e.g., BTC-USDT)
          example: "BTC-USDT"
        ordId:
          type: string
          description: Client order ID
          example: "590908157585625111"
    AmendOrderRequest:
      type: object
      properties:
        instId:
          type: string
          description: The instrument ID (e.g., BTC-USDT)
          example: "BTC-USDT"
        ordId:
          type: string
          description: Client order ID
          example: "590908157585625111"
        newsSz:
          type: string
          example: "2"
    ClosePositionRequest:
      type: object
      properties:
        instId:
          type: string
          description: >
            Instrument ID (e.g., BTC-USDT).  
            Required for identifying the specific trading instrument.
          example: "BTC-USDT"
        posSide:
          type: string
          description: >
            Position side.  
            - Default: `net` in net mode, and this parameter can be omitted.  
            - In long/short mode, it must be provided:  
              - `long` for close-long.  
              - `short` for close-short.
          enum:
            - long
            - short
            - net
          example: "net"
        mgnMode:
          type: string
          description: >
            Margin mode for the trade.  
            Allowed values:  
            - `cross`  
            - `isolated`
          enum:
            - cross
            - isolated
          example: "cross"
        ccy:
          type: string
          description: >
            Margin currency.  
            This field is required when closing a cross margin position for Spot or Futures mode.
          example: "USDT"
        autoCxl:
          type: boolean
          description: >
            Indicates whether pending orders for closing out should  
            be automatically canceled when closing a position via a market order.  
            Default: `false`.
          example: false
        clOrdId:
          type: string
          description: >
            Client-supplied ID.  
            A unique identifier composed of case-sensitive alphanumeric characters,  
            all numbers, or all letters (up to 32 characters).
          example: "order12345"
        tag:
          type: string
          description: >
            Order tag.  
            A unique identifier composed of case-sensitive alphanumeric characters,  
            all numbers, or all letters (up to 16 characters).
          example: "tag01"
      required:
        - instId
        - mgnMode
    PositionInfo:
      type: object
      properties:
        clOrdId:
          type: string
          description: >
            Client-supplied ID.  
            A unique identifier consisting of case-sensitive alphanumeric characters,  
            all numbers, or all letters (up to 32 characters).  
            Can be left empty.
          example: ""
        instId:
          type: string
          description: >
            Instrument ID (e.g., BTC-USDT-SWAP).  
            Required for identifying the specific trading instrument.
          example: "BTC-USDT-SWAP"
        posSide:
          type: string
          description: >
            Position side.  
            - Default: `net` in net mode, and this parameter can be omitted.  
            - In long/short mode, it must be provided:  
              - `long` for close-long.  
              - `short` for close-short.
          enum:
            - long
            - short
            - net
          example: "long"
        tag:
          type: string
          description: >
            Order tag.  
            A unique identifier composed of case-sensitive alphanumeric characters,  
            all numbers, or all letters (up to 16 characters).  
            Can be left empty.
          example: ""
      required:
        - instId
        - posSide
    OrderResponse:
      type: object
      properties:
        instType:
          type: string
          description: Instrument type
          enum: [SPOT, MARGIN, SWAP, FUTURES, OPTION]
        instId:
          type: string
          description: Instrument ID (e.g., BTC-USDT)
        tgtCcy:
          type: string
          description: >
            Order quantity unit setting for sz.  
            Options: base_ccy, quote_ccy.  
            Only applicable to SPOT Market Orders.  
            Default is quote_ccy for buy, base_ccy for sell.
        ccy:
          type: string
          description: >
            Margin currency.  
            Only applicable to cross MARGIN orders in Spot and futures mode.
        ordId:
          type: string
          description: Order ID
        clOrdId:
          type: string
          description: Client Order ID as assigned by the client
        tag:
          type: string
          description: Order tag
        px:
          type: string
          description: >
            Price.  
            For options, use coin as unit (e.g., BTC, ETH).
        pxUsd:
          type: string
          description: >
            Options price in USD.  
            Only applicable to options; return "" for other instrument types.
        pxVol:
          type: string
          description: >
            Implied volatility of the options order.  
            Only applicable to options; return "" for other instrument types.
        pxType:
          type: string
          description: >
            Price type of options.  
            Options: px, pxVol, pxUsd.
        sz:
          type: string
          description: Quantity to buy or sell
        pnl:
          type: string
          description: >
            Profit and loss.  
            Applicable to orders which have a trade and aim to close position. Always 0 in other conditions.
        ordType:
          type: string
          description: >
            Order type.  
            Options: market, limit, post_only, fok, ioc, optimal_limit_ioc, mmp, mmp_and_post_only, op_fok.
        side:
          type: string
          description: Order side
        posSide:
          type: string
          description: Position side
        tdMode:
          type: string
          description: Trade mode
        accFillSz:
          type: string
          description: Accumulated fill quantity
        fillPx:
          type: string
          description: Last filled price. If none is filled, it will return "".
        tradeId:
          type: string
          description: Last traded ID
        fillSz:
          type: string
          description: Last filled quantity
        fillTime:
          type: string
          description: Last filled time
        avgPx:
          type: string
          description: Average filled price. If none is filled, it will return "".
        state:
          type: string
          description: >
            State of the order.  
            Options: canceled, live, partially_filled, filled, mmp_canceled.
        stpId:
          type: string
          description: >
            Self trade prevention ID.  
            Return "" if self trade prevention is not applicable (deprecated).
        stpMode:
          type: string
          description: >
            Self trade prevention mode.  
            Return "" if self trade prevention is not applicable.
        lever:
          type: string
          description: >
            Leverage, from 0.01 to 125.  
            Only applicable to MARGIN/FUTURES/SWAP.
        attachAlgoClOrdId:
          type: string
          description: Client-supplied Algo ID when placing order attaching TP/SL.
        tpTriggerPx:
          type: string
        tpTriggerPxType:
          type: string
          description: >
            Take-profit trigger price type.  
            Options: last, index, mark.
        tpOrdPx:
          type: string
          description: Take-profit order price.
        slTriggerPx:
          type: string
          description: Stop-loss trigger price.
        slTriggerPxType:
          type: string
          description: >
            Stop-loss trigger price type.  
            Options: last, index, mark.
        slOrdPx:
          type: string
          description: Stop-loss order price.
        attachAlgoOrds:
          type: array
          items:
            $ref: "#/components/schemas/AlgoOrds"
        linkedAlgoOrd:
          type: object
          properties:
            algoId:
              type: string
              description: Algo ID
        feeCcy:
          type: string
          description: Fee currency
        fee:
          type: string
          description: Fee or rebate amount
        rebateCcy:
          type: string
          description: Rebate currency
        source:
          type: string
          description: Order source
        rebate:
          type: string
          description: Rebate amount
        category:
          type: string
          description: >
            Category of order.  
            Options: normal, twap, adl, full_liquidation, partial_liquidation, delivery, ddh.
        reduceOnly:
          type: string
          description: >
            Whether the order can only reduce position size.  
            Valid options: true, false.
        isTpLimit:
          type: string
          description: "Whether it is a TP limit order. Valid options: true, false."
        cancelSource:
          type: string
          description: Code of the cancellation source.
        cancelSourceReason:
          type: string
          description: Reason for the cancellation.
        quickMgnType:
          type: string
          description: >
            Quick Margin type.  
            Options: manual, auto_borrow, auto_repay.  
            Only applicable to Quick Margin Mode of isolated margin.
        algoClOrdId:
          type: string
          description: >
            Client-supplied Algo ID.  
            Value exists when algo order attaching algoClOrdId is triggered, otherwise "".
        algoId:
          type: string
          description: >
            Algo ID.  
            Value exists when algo order is triggered, otherwise "".
        uTime:
          type: string
          description: Update time in Unix timestamp format (milliseconds).
        cTime:
          type: string
          description: Creation time in Unix timestamp format (milliseconds).
    AlgoOrds:
      type: object
      properties:
        attachAlgoId:
          type: string
          description: Order ID of attached TP/SL order.
        attachAlgoClOrdId:
          type: string
          description: >
            Client-supplied Algo ID when placing order attaching TP/SL.
        tpOrdKind:
          type: string
          description: TP order kind
        tpTriggerPx:
          type: string
          description: Take-profit trigger price.
        tpTriggerPxType:
          type: string
          description: >
            Take-profit trigger price type.  
            Options: last, index, mark.
        tpOrdPx:
          type: string
          description: Take-profit order price.
        slTriggerPx:
          type: string
          description: Stop-loss trigger price.
        slTriggerPxType:
          type: string
          description: >
            Stop-loss trigger price type.  
            Options: last, index, mark.
        slOrdPx:
          type: string
          description: Stop-loss order price.
        sz:
          type: string
          description: Size of TP order
        amendPxOnTriggerType:
          type: string
          description: >
            Whether to enable Cost-price SL for split TPs.  
            Options: 0 (disable, default), 1 (enable).
        failCode:
          type: string
          description: Error code for failed TP/SL order.
        failReason:
          type: string
          description: Reason for failure to place TP/SL order.
    TransactionsResponse:
      type: object
      properties:
        instType:
          type: string
          description: Instrument type
        instId:
          type: string
          description: Instrument ID
        tradeId:
          type: string
          description: Last trade ID
        ordId:
          type: string
          description: Order ID
        clOrdId:
          type: string
          description: Client Order ID assigned by the client
        billId:
          type: string
          description: Bill ID
        subType:
          type: string
          description: Transaction type
        tag:
          type: string
          description: Order tag
        fillPx:
          type: string
          description: Last filled price
        fillSz:
          type: string
          description: Last filled quantity
        fillIdxPx:
          type: string
          description: Index price at the moment of trade execution
        fillPnl:
          type: string
          description: Last filled profit and loss
        fillPxVol:
          type: string
          description: Implied volatility when filled (only applicable to options)
        fillPxUsd:
          type: string
          description: Options price when filled, in USD (only applicable to options)
        fillMarkVol:
          type: string
          description: Mark volatility when filled (only applicable to options)
        fillFwdPx:
          type: string
          description: Forward price when filled (only applicable to options)
        fillMarkPx:
          type: string
          description: Mark price when filled (applicable to FUTURES, SWAP, OPTION)
        side:
          type: string
          description: Order side (buy or sell)
        posSide:
          type: string
          description: Position side (long, short, or net)
        execType:
          type: string
          description: "Liquidity type (T: taker, M: maker)"
        feeCcy:
          type: string
          description: Trading fee or rebate currency
        fee:
          type: string
          description: Amount of trading fee or rebate
        ts:
          type: string
          format: date-time
          description: Data generation time in Unix timestamp format (milliseconds)
        fillTime:
          type: string
          format: date-time
          description: Trade time
        feeRate:
          type: string
          description: Fee rate (applicable to SPOT and MARGIN only)
    ConvertorResponse:
      type: object
      properties:
        fromData:
          type: array
          items:
            type: object
            properties:
              fromAmt:
                type: string
                description: Amount to be converted from the source currency
              fromCcy:
                type: string
                description: Source currency code
          description: List of source currencies and their amounts
        toCcy:
          type: array
          items:
            type: string
          description: List of target currency codes
      required:
        - fromData
        - toCcy
    EasyConvertorResponse:
      type: object
      properties:
        fillFromSz:
          type: string
          description: The amount of the currency converted from.
          example: "6.5807127"
        fillToSz:
          type: string
          description: The amount of the currency converted to.
          example: "0.17171580105126"
        fromCcy:
          type: string
          description: The currency being converted from.
          example: "ADA"
        status:
          type: string
          description: The current status of the conversion.
          enum:
            - running
            - completed
            - failed
          example: "running"
        toCcy:
          type: string
          description: The currency being converted to.
          example: "OKB"
        uTime:
          type: string
          format: date-time
          description: The last update time of the conversion in Unix timestamp format (milliseconds).
          example: "1661419684687"
    PlaceConversionRequest:
      type: object
      properties:
        fromCcy:
          type: array
          items:
            type: string
          maxItems: 5
          description: "Type of small payment currency convert from. Maximum 5 currencies can be selected in one order. Separate them with commas if multiple."
        toCcy:
          type: string
          description: "Type of mainstream currency convert to. Only one receiving currency type can be selected and cannot be the same as the small payment currencies."
        source:
          type: string
          enum:
            - "1"
            - "2"
          default: "1"
          description: "Funding source: 1 for Trading account, 2 for Funding account. Default is 1."
      required:
        - fromCcy
        - toCcy
    RepayResponse:
      type: object
      properties:
        debtData:
          type: array
          items:
            type: object
            properties:
              debtCcy:
                type: string
                description: "Debt currency type"
              debtAmt:
                type: string
                description: "Debt currency amount, including principal and interest"
              debtType:
                type: string
                enum:
                  - "cross"
                  - "isolated"
                description: "Debt type: cross or isolated"
            required:
              - debtCcy
              - debtAmt
              - debtType
        repayData:
          type: array
          items:
            type: object
            properties:
              repayCcy:
                type: string
                description: "Repay currency type"
              repayAmt:
                type: string
                description: "Repay currency's available balance amount"
            required:
              - repayCcy
              - repayAmt
      required:
        - debtData
        - repayData
    DebtRepayRequest:
      type: object
      properties:
        debtCcy:
          type: array
          items:
            type: string
          maxItems: 5
          description: "Debt currency type. Maximum 5 currencies can be selected in one order. Separate them with commas if multiple."
        repayCcy:
          type: string
          description: "Repay currency type. Only one receiving currency type can be selected and cannot be the same as the small payment currencies."
      required:
        - debtCcy
        - repayCcy
    MassCancelRequest:
      type: object
      properties:
        instType:
          type: string
          description: Instrument type,OPTION
          example: "BTC-USDT"
        instFamily:
          type: string
          description: instrument family
        lockInterval:
          type: string
          description: "Lock interval(ms).The range should be [0, 10 000]<br>The default is 0. You can set it as '0' if you want to unlock it immediately.<br>Error 54008 will be thorwn when placing order duiring lock interval, it is different from 51034 which is thrown when MMP is triggered"
    CancelAllResponse:
      type: object
      properties:
        triggerTime:
          type: string
          description: "The time the cancellation is triggered. triggerTime=0 means Cancel All After is disabled."
        tag:
          type: string
          pattern: "^[a-zA-Z0-9]{1,16}$"
          description: "CAA order tag. A combination of case-sensitive alphanumerics, all numbers, or all letters of up to 16 characters."
        ts:
          type: string
          description: "The time the request is received."
      required:
        - triggerTime
        - ts
    RateLimitResponse:
      type: object
      properties:
        accRateLimit:
          type: string
          description: "The current account rate limit."
        fillRatio:
          type: string
          format: float
          description: "The current fill ratio."
        mainFillRatio:
          type: string
          format: float
          description: "The main fill ratio."
        nextAccRateLimit:
          type: string
          description: "The next account rate limit."
        ts:
          type: string
          description: "The timestamp when the request was received."
      required:
        - accRateLimit
        - fillRatio
        - mainFillRatio
        - nextAccRateLimit
        - ts
    PrecheckResponse:
      type: object
      properties:
        instrumentId:
          type: string
          description: "Instrument ID, e.g., BTC-USDT."
        tdMode:
          type: string
          enum:
            - "cross"
            - "isolated"
            - "cash"
            - "spot_isolated"
          description: "Trade mode: margin mode (cross, isolated), non-margin mode (cash), or spot lead trading (spot_isolated)."
        side:
          type: string
          enum:
            - "buy"
            - "sell"
          description: "Order side."
        posSide:
          type: string
          enum:
            - "long"
            - "short"
          description: "Position side. Required in long/short mode and only applicable to FUTURES/SWAP. Default is 'net'."
        ordType:
          type: string
          enum:
            - "market"
            - "limit"
            - "post_only"
            - "fok"
            - "ioc"
            - "optimal_limit_ioc"
          description: "Order type."
        sz:
          type: string
          description: "Quantity to buy or sell."
        px:
          type: string
          description: "Order price. Only applicable to limit, post_only, fok, ioc, mmp, or mmp_and_post_only orders."
        reduceOnly:
          type: boolean
          description: "Whether orders can only reduce position size. Default is false. Only applicable to MARGIN and FUTURES/SWAP orders in net mode."
        tgtCcy:
          type: string
          enum:
            - "base_ccy"
            - "quote_ccy"
          description: "Target currency. Applicable to SPOT Market Orders. Default is quote_ccy for buy, base_ccy for sell."
        attachAlgoOrds:
          type: array
          items:
            type: object
            properties:
              attachAlgoClOrdId:
                type: string
                pattern: "^[a-zA-Z0-9]{1,32}$"
                description: "Client-supplied Algo ID when placing order attaching TP/SL."
              tpTriggerPx:
                type: string
                description: "Take-profit trigger price. Conditional TP order."
              tpOrdPx:
                type: string
                description: "Take-profit order price."
              tpOrdKind:
                type: string
                enum:
                  - "condition"
                  - "limit"
                default: "condition"
                description: "TP order kind. Default is 'condition'."
              slTriggerPx:
                type: string
                description: "Stop-loss trigger price."
              slOrdPx:
                type: string
                description: "Stop-loss order price."
              tpTriggerPxType:
                type: string
                enum:
                  - "last"
                  - "index"
                  - "mark"
                default: "last"
                description: "Take-profit trigger price type. Default is 'last'."
              slTriggerPxType:
                type: string
                enum:
                  - "last"
                  - "index"
                  - "mark"
                default: "last"
                description: "Stop-loss trigger price type. Default is 'last'."
              sz:
                type: string
                description: "Size. Only applicable to TP orders with split TPs."
            required:
              - attachAlgoClOrdId
              - tpTriggerPx
              - tpOrdPx
              - tpOrdKind
              - slTriggerPx
              - slOrdPx
    PreCheckResponse:
      type: object
      properties:
        adjEq:
          type: string
          description: "Current adjusted / effective equity in USD."
        adjEqChg:
          type: string
          description: "Changed quantity of adjusted / effective equity in USD after placing the order."
        imr:
          type: string
          description: "Current initial margin requirement in USD."
        imrChg:
          type: string
          description: "Changed quantity of initial margin requirement in USD after placing the order."
        mmr:
          type: string
          description: "Current maintenance margin requirement in USD."
        mmrChg:
          type: string
          description: "Changed quantity of maintenance margin requirement in USD after placing the order."
        mgnRatio:
          type: string
          description: "Current margin ratio in USD."
        mgnRatioChg:
          type: string
          description: "Changed quantity of margin ratio in USD after placing the order."
        availBal:
          type: string
          description: "Current available balance in margin coin currency, only applicable when auto borrow is off."
        availBalChg:
          type: string
          description: "Changed quantity of available balance after placing the order, only applicable when auto borrow is off."
        liqPx:
          type: string
          description: "Current estimated liquidation price."
        liqPxDiff:
          type: string
          description: "Distance between estimated liquidation price and mark price after placing the order."
        liqPxDiffRatio:
          type: string
          description: "Distance rate between estimated liquidation price and mark price after placing the order."
        posBal:
          type: string
          description: "Current positive asset, only applicable to margin isolated position."
        posBalChg:
          type: string
          description: "Positive asset of margin isolated position after placing the order."
        liab:
          type: string
          description: "Current liabilities of currency. For cross, it is cross liabilities. For isolated position, it is isolated liabilities."
        liabChg:
          type: string
          description: "Changed quantity of liabilities after placing the order. For cross, it is cross liabilities. For isolated position, it is isolated liabilities."
        liabChgCcy:
          type: string
          description: "Unit of changed liabilities quantity after placing the order. Only applicable to cross and in auto borrow."
        type:
          type: string
          enum:
            - "1"
            - "2"
            - "3"
            - "4"
          description: "Unit type of positive asset, only applicable to margin isolated position. The options are 1, 2, 3, or 4."
      required:
        - adjEq
        - imr
        - mmr
        - mgnRatio
        - availBal
        - liqPx
        - liab
        - type
    StopLossRequest:
      type: object
      properties:
        instId:
          type: string
          description: "Instrument ID, e.g. BTC-USDT"
        tdMode:
          type: string
          enum:
            - "cross"
            - "isolated"
            - "cash"
            - "spot_isolated"
          description: "Trade mode: Margin mode (cross, isolated), Non-Margin mode (cash), or spot_isolated for SPOT lead trading."
        ccy:
          type: string
          description: "Margin currency. Only applicable to cross MARGIN orders in Spot and futures mode."
        side:
          type: string
          enum:
            - "buy"
            - "sell"
          description: "Order side: buy or sell."
        posSide:
          type: string
          enum:
            - "long"
            - "short"
          description: "Position side. Required in long/short mode, and can only be long or short."
        ordType:
          type: string
          enum:
            - "conditional"
            - "oco"
            - "trigger"
            - "move_order_stop"
            - "twap"
          description: "Order type: conditional, oco, trigger, move_order_stop, or twap."
        sz:
          type: string
          description: "Quantity to buy or sell. Either sz or closeFraction is required."
        tag:
          type: string
          description: "Order tag. A combination of case-sensitive alphanumerics, all numbers, or all letters of up to 16 characters."
        tgtCcy:
          type: string
          enum:
            - "base_ccy"
            - "quote_ccy"
          description: "Order quantity unit setting for sz. Only applicable to SPOT traded with Market buy conditional order."
        algoClOrdId:
          type: string
          description: "Client-supplied Algo ID. A combination of case-sensitive alphanumerics, all numbers, or all letters of up to 32 characters."
        closeFraction:
          type: string
          description: "Fraction of position to be closed when the algo order is triggered. Only applicable if ordType is conditional or oco."
    TriggerRequest:
      type: object
      properties:
        tpTriggerPx:
          type: string
          description: "Take-profit trigger price. If provided, you should also provide the take-profit order price."
        tpTriggerPxType:
          type: string
          enum:
            - "last"
            - "index"
            - "mark"
          default: "last"
          description: "Take-profit trigger price type: last price, index price, or mark price. Default is 'last'."
        tpOrdPx:
          type: string
          description: "Take-profit order price. If provided, you should also provide the take-profit trigger price. If the price is -1, take-profit will be executed at the market price."
        tpOrdKind:
          type: string
          enum:
            - "condition"
            - "limit"
          default: "condition"
          description: "Take-profit order kind: condition or limit. Default is 'condition'."
        slTriggerPx:
          type: string
          description: "Stop-loss trigger price. If provided, you should also provide the stop-loss order price."
        slTriggerPxType:
          type: string
          enum:
            - "last"
            - "index"
            - "mark"
          default: "last"
          description: "Stop-loss trigger price type: last price, index price, or mark price. Default is 'last'."
        slOrdPx:
          type: string
          description: "Stop-loss order price. If provided, you should also provide the stop-loss trigger price. If the price is -1, stop-loss will be executed at the market price."
        cxlOnClosePos:
          type: boolean
          description: "Whether the TP/SL order is associated with the corresponding position of the instrument. If true, the TP/SL order will be canceled when the position is fully closed."
          default: false
        reduceOnly:
          type: boolean
          description: "Whether the order can only reduce the position size. Valid values are true or false. Default is false."
          default: false
      required:
        - tpTriggerPx
        - tpOrdPx
        - slTriggerPx
        - slOrdPx
    TrailingRequest:
      type: object
      properties:
        callbackRatio:
          type: string
          description: "Callback price ratio (e.g., 0.01 represents 1%). Either callbackRatio or callbackSpread must be provided."
        callbackSpread:
          type: string
          description: "Callback price variance. Either callbackRatio or callbackSpread must be provided."
        activePx:
          type: string
          description: "Active price. The system will start tracking the market and calculating your trigger price after the activation price is reached. If not set, the order will be activated as soon as it’s placed."
        quickMgnType:
          type: string
          enum:
            - "manual"
            - "auto_borrow"
            - "auto_repay"
          default: "manual"
          description: "Quick Margin type. Only applicable to Quick Margin Mode of isolated margin."
        reduceOnly:
          type: boolean
          description: "Whether the order can only reduce the position size. Valid options are true or false. Default is false. This parameter is only valid in the FUTURES/SWAP net mode."
          default: false
      required:
        - callbackRatio
        - callbackSpread
        - activePx
        - quickMgnType
    TwapRequest:
      type: object
      properties:
        pxVar:
          type: string
          description: "Price variance by percentage, range between [0.0001 ~ 0.01], e.g., 0.01 represents 1%. Determines the range by percentage when placing small buy orders above the best bid price."
        pxSpread:
          type: string
          description: "Price variance by constant, should be no less than 0 (no upper limit). Determines the range by constant when placing small buy orders above the best bid price."
        szLimit:
          type: string
          description: "Average amount to be placed for buy orders when the market price is lower than the limit price, within a certain range above the best bid price."
        pxLimit:
          type: string
          description: "Price limit for buy orders, should be no less than 0 (no upper limit). Represents the limit price when placing small buy orders above the best bid price."
        timeInterval:
          type: string
          description: "Time interval in seconds. Determines the time cycle for placing small buy orders above the best bid price based on the time cycle."
      required:
        - szLimit
        - pxLimit
        - timeInterval
    AlgoOrderResponse:
      type: object
      properties:
        algoId:
          type: string
          description: "Algorithmic Order ID."
        clOrdId:
          type: string
          description: "Client Order ID assigned by the client (Deprecated)."
        algoClOrdId:
          type: string
          description: "Client-supplied Algorithmic Order ID."
        sCode:
          type: string
          description: "The code of the event execution result. A value of 0 indicates success."
        sMsg:
          type: string
          description: "Rejection message if the request is unsuccessful."
        tag:
          type: string
          description: "Order tag, a combination of case-sensitive alphanumerics, numbers, or letters (up to 16 characters)."
      required:
        - algoId
        - sCode
        - tag
    AlgoOrderRequest:
      type: object
      properties:
        algoId:
          type: string
          description: "Algorithmic Order ID."
        instId:
          type: string
          description: "Instrument ID, e.g. BTC-USDT."
      required:
        - algoId
        - instId
    AlgoOrderCancelResponse:
      type: object
      properties:
        algoId:
          type: string
          description: "Algorithmic Order ID."
        sCode:
          type: string
          description: "The code of the event execution result. 0 means success."
        sMsg:
          type: string
          description: "Rejection message if the request is unsuccessful."
      required:
        - algoId
        - sCode
    AlgoAmendRequest:
      type: object
      properties:
        algoId:
          type: string
          description: "Algorithmic Order ID of the amended order."
        reqId:
          type: string
          description: "Client Request ID for identifying the request."
        sCode:
          type: string
          description: "Result code for the amendment request, where 0 indicates success."
        sMsg:
          type: string
          description: "Additional message or reason for failure, if applicable."
      required:
        - algoId
        - sCode
      additionalProperties: false
    AlgoStopRequest:
      type: object
      properties:
        instId:
          type: string
          description: "Instrument ID, e.g., BTC-USDT."
        algoId:
          type: string
          description: |
            Algorithmic Order ID. Either `algoId` or `algoClOrdId` must be provided.
            If both are passed, `algoId` will be used.
        algoClOrdId:
          type: string
          description: |
            Client-supplied Algorithmic Order ID. Either `algoId` or `algoClOrdId` must be provided.
            If both are passed, `algoId` will be used.
        cxlOnFail:
          type: boolean
          default: false
          description: |
            Whether the order should be automatically canceled when the amendment fails.
            Default is `false`.
        reqId:
          type: string
          maxLength: 32
          description: |
            Client Request ID for identifying the amendment request.
            It must be a combination of alphanumerics, all numbers, or all letters up to 32 characters.
        newSz:
          type: string
          description: |
            New quantity after amendment. It must be greater than 0.
        newTpTriggerPx:
          type: string
          description: |
            New take-profit trigger price. If either the trigger price or the order price is 0, the take-profit is deleted.
        newTpOrdPx:
          type: string
          description: |
            New take-profit order price. If the price is -1, take-profit will be executed at the market price.
        newSlTriggerPx:
          type: string
          description: |
            New stop-loss trigger price. If either the trigger price or the order price is 0, the stop-loss is deleted.
        newSlOrdPx:
          type: string
          description: |
            New stop-loss order price. If the price is -1, stop-loss will be executed at the market price.
        newTpTriggerPxType:
          type: string
          enum: [last, index, mark]
          description: |
            Take-profit trigger price type. Allowed values:
            - `last`: last price
            - `index`: index price
            - `mark`: mark price
        newSlTriggerPxType:
          type: string
          enum: [last, index, mark]
          description: |
            Stop-loss trigger price type. Allowed values:
            - `last`: last price
            - `index`: index price
            - `mark`: mark price
      required:
        - instId
      additionalProperties: false
    AlgoTriggerRequest:
      type: object
      properties:
        instId:
          type: string
          description: "Instrument ID, e.g., BTC-USDT."
        algoId:
          type: string
          description: |
            Algorithmic Order ID. Either `algoId` or `algoClOrdId` must be provided.
            If both are passed, `algoId` will be used.
        algoClOrdId:
          type: string
          description: |
            Client-supplied Algorithmic Order ID. Either `algoId` or `algoClOrdId` must be provided.
            If both are passed, `algoId` will be used.
        newTriggerPx:
          type: string
          description: "New trigger price after amendment."
        newOrdPx:
          type: string
          description: |
            New order price after amendment. If the price is -1, the order will be executed at the market price.
        newTriggerPxType:
          type: string
          enum: [last, index, mark]
          default: last
          description: |
            New trigger price type after amendment. Allowed values:
            - `last`: last price
            - `index`: index price
            - `mark`: mark price
        attachAlgoOrds:
          type: array
          description: |
            Attached SL/TP orders information. Applicable to Spot and futures mode/Multi-currency margin/Portfolio margin.
          items:
            type: object
            properties:
              newTpTriggerPx:
                type: string
                description: |
                  Take-profit trigger price. If you fill in this parameter, you should fill in the take-profit order price as well.
              newTpTriggerPxType:
                type: string
                enum: [last, index, mark]
                default: last
                description: |
                  Take-profit trigger price type. Allowed values:
                  - `last`: last price
                  - `index`: index price
                  - `mark`: mark price
              newTpOrdPx:
                type: string
                description: |
                  Take-profit order price. If the price is -1, take-profit will be executed at the market price.
              newSlTriggerPx:
                type: string
                description: |
                  Stop-loss trigger price. If you fill in this parameter, you should fill in the stop-loss order price.
              newSlTriggerPxType:
                type: string
                enum: [last, index, mark]
                default: last
                description: |
                  Stop-loss trigger price type. Allowed values:
                  - `last`: last price
                  - `index`: index price
                  - `mark`: mark price
              newSlOrdPx:
                type: string
                description: |
                  Stop-loss order price. If the price is -1, stop-loss will be executed at the market price.
      required:
        - instId
        - newTriggerPx
        - newOrdPx
      additionalProperties: false
    AlgoOrderDetailedResponse:
      type: object
      properties:
        instType:
          type: string
        instId:
          type: string
        ccy:
          type: string
        ordId:
          type: string
          description: Latest order ID (deprecated soon).
        ordIdList:
          type: array
          items:
            type: string
        algoId:
          type: string
        clOrdId:
          type: string
        sz:
          type: string
        closeFraction:
          type: string
        ordType:
          type: string
        side:
          type: string
        posSide:
          type: string
        tdMode:
          type: string
        tgtCcy:
          type: string
          enum:
            - base_ccy
            - quote_ccy
        state:
          type: string
          enum:
            - live
            - pause
            - partially_effective
            - effective
            - canceled
            - order_failed
            - partially_failed
        lever:
          type: string
        tpTriggerPx:
          type: string
        tpTriggerPxType:
          type: string
          enum:
            - last
            - index
            - mark
        tpOrdPx:
          type: string
        slTriggerPx:
          type: string
        slTriggerPxType:
          type: string
          enum:
            - last
            - index
            - mark
        slOrdPx:
          type: string
        triggerPx:
          type: string
        triggerPxType:
          type: string
          enum:
            - last
            - index
            - mark
        ordPx:
          type: string
        actualSz:
          type: string
        actualPx:
          type: string
        tag:
          type: string
        actualSide:
          type: string
          enum:
            - tp
            - sl
        triggerTime:
          type: string
          format: int64
          description: Unix timestamp in milliseconds.
        pxVar:
          type: string
        pxSpread:
          type: string
        szLimit:
          type: string
        pxLimit:
          type: string
        timeInterval:
          type: string
        callbackRatio:
          type: string
        callbackSpread:
          type: string
        activePx:
          type: string
        moveTriggerPx:
          type: string
        reduceOnly:
          type: boolean
        quickMgnType:
          type: string
          enum:
            - manual
            - auto_borrow
            - auto_repay
        last:
          type: string
        failCode:
          type: string
        algoClOrdId:
          type: string
        amendPxOnTriggerType:
          type: string
          enum:
            - "0"
            - "1"
        attachAlgoOrds:
          type: array
          items:
            type: object
            properties:
              attachAlgoClOrdId:
                type: string
              tpTriggerPx:
                type: string
              tpTriggerPxType:
                type: string
                enum:
                  - last
                  - index
                  - mark
              tpOrdPx:
                type: string
              slTriggerPx:
                type: string
              slTriggerPxType:
                type: string
                enum:
                  - last
                  - index
                  - mark
              slOrdPx:
                type: string
        linkedOrd:
          type: object
          properties:
            ordId:
              type: string
        cTime:
          type: string
          format: int64
          description: Creation time in Unix timestamp (milliseconds).
        uTime:
          type: string
          format: int64
          description: Updated time in Unix timestamp (milliseconds).
        isTradeBorrowMode:
          type: boolean
          description: Indicates auto-borrow for trade.
    GridAlgoPlaceRequest:
      type: object
      properties:
        instId:
          type: string
          description: Instrument ID, e.g., BTC-USDT-SWAP.
        algoOrdType:
          type: string
          enum:
            - grid
            - contract_grid
          description: "Algo order type. Supported values:<br>- grid: Spot grid<br> - contract_grid: Contract grid"
        maxPx:
          type: string
          description: Upper price of price range.
        minPx:
          type: string
          description: Lower price of price range.
        gridNum:
          type: string
          description: Grid quantity.
        runType:
          type: integer
          enum:
            - 1
            - 2
          description: |
            Grid type:
              1: Arithmetic
              2: Geometric
            Default is Arithmetic.
        tpTriggerPx:
          type: string
          description: TP trigger price. Applicable to Spot grid/Contract grid.
        slTriggerPx:
          type: string
          description: SL trigger price. Applicable to Spot grid/Contract grid.
        algoClOrdId:
          type: string
          description: |
            Client-supplied Algo ID. A combination of case-sensitive alphanumerics,
            all numbers, or all letters of up to 32 characters.
        tag:
          type: string
          description: Order tag.
        profitSharingRatio:
          type: number
          enum:
            - 0
            - 0.1
            - 0.2
            - 0.3
          description: |
            Profit sharing ratio. Supported values:
              - 0: No profit sharing
              - 0.1: 10%
              - 0.2: 20%
              - 0.3: 30%
        triggerParams:
          type: array
          items:
            type: object
            properties:
              triggerAction:
                type: string
                enum:
                  - start
                  - stop
                description: Trigger action.
              triggerStrategy:
                type: string
                enum:
                  - instant
                  - price
                  - rsi
                description: |
                  Trigger strategy. Supported values:
                    - instant: Default
                    - price
                    - rsi
              delaySeconds:
                type: string
                description: Delay seconds after action triggered.
              timeframe:
                type: string
                enum:
                  - 3m
                  - 5m
                  - 15m
                  - 30m
                  - 1H
                  - 4H
                  - 1D
                description: |
                  K-line type. Valid when `triggerStrategy` is `rsi`.
              thold:
                type: integer
                minimum: 1
                maximum: 100
                description: |
                  Threshold. Valid when `triggerStrategy` is `rsi`.
              triggerCond:
                type: string
                enum:
                  - cross_up
                  - cross_down
                  - above
                  - below
                  - cross
                description: |
                  Trigger condition. Valid when `triggerStrategy` is `rsi`.
              timePeriod:
                type: integer
                description: |
                  Time period. Valid when `triggerStrategy` is `rsi`.
                  Example: 14
              triggerPx:
                type: string
                description: Trigger price. Valid when `triggerStrategy` is `price`.
              stopType:
                type: integer
                enum:
                  - 1
                  - 2
                description: |
                  Stop type:
                    - Spot grid:
                      - 1: Sell base currency
                      - 2: Keep base currency
                    - Contract grid:
                      - 1: Market Close All positions
                      - 2: Keep positions
                  Valid when `triggerAction` is `stop`.
    GridSpotRequest:
      type: object
      properties:
        quoteSz:
          type: string
          description: Invest amount for quote currency. Either `quoteSz` or `baseSz` is required.
        baseSz:
          type: string
          description: Invest amount for base currency. Either `quoteSz` or `baseSz` is required.
      oneOf:
        - required: ["quoteSz"]
        - required: ["baseSz"]
    GridContractRequest:
      type: object
      properties:
        sz:
          type: string
          description: Used margin based on USDT.
        direction:
          type: string
          enum:
            - long
            - short
            - neutral
          description: Contract grid type.
        lever:
          type: string
          description: Leverage.
        basePos:
          type: boolean
          description: |
            Whether or not to open a position when the strategy activates.
            Default is `false`. Neutral contract grid should omit the parameter.
          default: false
        tpRatio:
          type: string
          description: Take profit ratio. `0.1` represents 10%.
        slRatio:
          type: string
          description: Stop loss ratio. `0.1` represents 10%.
      required:
        - sz
        - direction
        - lever
    GridAmendRequest:
      type: object
      properties:
        algoId:
          type: string
          description: Algo ID.
        instId:
          type: string
          description: Instrument ID, e.g., BTC-USDT-SWAP.
        slTriggerPx:
          type: string
          nullable: true
          description: |
            New stop-loss trigger price. If set to an empty string (`""`), it cancels the stop-loss trigger price.
            Either `slTriggerPx` or `tpTriggerPx` is required.
        tpTriggerPx:
          type: string
          nullable: true
          description: |
            New take-profit trigger price. If set to an empty string (`""`), it cancels the take-profit trigger price.
            Either `tpTriggerPx` or `slTriggerPx` is required.
        tpRatio:
          type: string
          nullable: true
          description: |
            Take profit ratio. `0.1` represents 10%. Only applicable to contract grids.
            If set to an empty string (`""`), it cancels the take-profit ratio.
        slRatio:
          type: string
          nullable: true
          description: |
            Stop loss ratio. `0.1` represents 10%. Only applicable to contract grids.
            If set to an empty string (`""`), it cancels the stop-loss ratio.
        triggerParams:
          type: array
          items:
            type: object
            properties:
              triggerAction:
                type: string
                enum:
                  - start
                  - stop
                description: Trigger action.
              triggerStrategy:
                type: string
                enum:
                  - instant
                  - price
                  - rsi
                description: Trigger strategy.
              triggerPx:
                type: string
                nullable: true
                description: |
                  Trigger price. This field is only valid when `triggerStrategy` is `price`.
              stopType:
                type: string
                enum:
                  - "1"
                  - "2"
                description: |
                  Stop type:
                  - Spot grid: `1` = Sell base currency, `2` = Keep base currency.
                  - Contract grid: `1` = Market close all positions, `2` = Keep positions.
                  This field is only valid when `triggerAction` is `stop`.
          description: Trigger parameters. Each object defines actions, strategies, and optional details.
      required:
        - algoId
        - instId
    GridStopRequest:
      type: object
      properties:
        algoId:
          type: string
          description: Algo ID.
        instId:
          type: string
          description: Instrument ID, e.g., BTC-USDT.
        algoOrdType:
          type: string
          enum:
            - grid
            - contract_grid
          description: |
            Algo order type:
            - `grid`: Spot grid
            - `contract_grid`: Contract grid
        stopType:
          type: string
          enum:
            - "1"
            - "2"
          description: |
            Stop type:
            - For Spot grid: `1` = Sell base currency, `2` = Keep base currency
            - For Contract grid: `1` = Market Close All positions, `2` = Keep positions
      required:
        - algoId
        - instId
        - algoOrdType
        - stopType
    BotClosePositionRequest:
      type: object
      properties:
        algoId:
          type: string
          description: Algo ID.
        mktClose:
          type: boolean
          description: |
            Market close all positions or not:
            - `true`: Market close all positions
            - `false`: Close part of the position.
        sz:
          type: string
          description: |
            Close position amount, in units of the contract.
            Required if `mktClose` is `false`.
        px:
          type: string
          description: |
            Close position price.
            Required if `mktClose` is `false`.
    BotCloseRequest:
      type: object
      properties:
        algoId:
          type: string
          description: "Algorithmic Order ID."
        ordId:
          type: string
          description: "close position order ID, e.g. BTC-USDT."
      required:
        - algoId
        - ordId
    BotTriggerRequest:
      type: object
      properties:
        algoId:
          type: string
          description: "Algorithmic Order ID."
    BotTriggerResponse:
      type: object
      properties:
        algoId:
          type: string
          description: "Algorithmic Order ID."
        algoClOrdId:
          type: string
          description: "Client-supplied Algo ID"
    BotAlgoPendingResponse:
      type: object
      properties:
        algoId:
          type: string
          description: Algo ID
        algoClOrdId:
          type: string
          description: Client-supplied Algo ID
        instType:
          type: string
          enum:
            - SPOT
            - MARGIN
            - FUTURES
            - SWAP
          description: Instrument type
        instId:
          type: string
          description: Instrument ID, e.g., BTC-USDT
        cTime:
          type: string
          format: int64
          description: Algo order created time, Unix timestamp in milliseconds
        uTime:
          type: string
          format: int64
          description: Algo order updated time, Unix timestamp in milliseconds
        algoOrdType:
          type: string
          enum:
            - grid
            - contract_grid
          description: |
            Algo order type:
            - `grid`: Spot grid
            - `contract_grid`: Contract grid
        state:
          type: string
          enum:
            - starting
            - running
            - stopping
            - pending_signal
            - no_close_position
          description: Algo order state
        rebateTrans:
          type: array
          items:
            type: object
            properties:
              rebate:
                type: string
                description: Rebate amount
              rebateCcy:
                type: string
                description: Rebate currency
        triggerParams:
          type: array
          items:
            type: object
            properties:
              triggerAction:
                type: string
                enum:
                  - start
                  - stop
                description: Trigger action
              triggerStrategy:
                type: string
                enum:
                  - instant
                  - price
                  - rsi
                description: Trigger strategy
              delaySeconds:
                type: string
                description: Delay seconds after action triggered
              triggerTime:
                type: string
                format: int64
                description: Actual action triggered time, Unix timestamp in milliseconds
              triggerType:
                type: string
                enum:
                  - manual
                  - auto
                description: Actual action triggered type
              timeframe:
                type: string
                enum:
                  - 3m
                  - 5m
                  - 15m
                  - 30m
                  - 1H
                  - 4H
                  - 1D
                description: K-line type
              thold:
                type: integer
                minimum: 1
                maximum: 100
                description: RSI threshold
              triggerCond:
                type: string
                enum:
                  - cross_up
                  - cross_down
                  - above
                  - below
                  - cross
                description: RSI trigger condition
              timePeriod:
                type: integer
                description: RSI time period
              triggerPx:
                type: string
                description: Price trigger for strategy
              stopType:
                type: string
                description: Stop type
        maxPx:
          type: string
          description: Upper price of price range
        minPx:
          type: string
          description: Lower price of price range
        gridNum:
          type: string
          description: Grid quantity
        runType:
          type: string
          enum:
            - "1"
            - "2"
          description: "Grid type, 1: Arithmetic, 2: Geometric"
        tpTriggerPx:
          type: string
          description: Take-profit trigger price
        slTriggerPx:
          type: string
          description: Stop-loss trigger price
        arbitrageNum:
          type: string
          description: Number of arbitrages executed
        totalPnl:
          type: string
          description: Total P&L
        pnlRatio:
          type: string
          description: P&L ratio
        investment:
          type: string
          description: Accumulated investment amount in quote currency for Spot grid
        gridProfit:
          type: string
          description: Grid profit
        floatProfit:
          type: string
          description: Variable P&L
        cancelType:
          type: string
          enum:
            - "0"
            - "1"
            - "2"
            - "3"
            - "4"
            - "5"
            - "6"
          description: Reason for algo order stop
        stopType:
          type: string
          enum:
            - "1"
            - "2"
          description: Actual stop type
        quoteSz:
          type: string
          description: Quote currency investment amount for Spot grid
        baseSz:
          type: string
          description: Base currency investment amount for Spot grid
        direction:
          type: string
          enum:
            - long
            - short
            - neutral
          description: Contract grid type
        basePos:
          type: boolean
          description: Whether to open a position when the strategy activates for Contract grid
        sz:
          type: string
          description: Used margin based on USDT for Contract grid
        lever:
          type: string
          description: Leverage for Contract grid
        actualLever:
          type: string
          description: Actual leverage for Contract grid
        liqPx:
          type: string
          description: Estimated liquidation price for Contract grid
        uly:
          type: string
          description: Underlying for Contract grid
        instFamily:
          type: string
          description: Instrument family for FUTURES/SWAP/OPTION
        ordFrozen:
          type: string
          description: Margin used by pending orders for Contract grid
        availEq:
          type: string
          description: Available margin for Contract grid
        tag:
          type: string
          description: Order tag
        profitSharingRatio:
          type: string
          description: Profit sharing ratio [0, 0.3]
        copyType:
          type: string
          enum:
            - 0
            - 1
            - 2
            - 3
          description: Profit sharing order type
        tpRatio:
          type: string
          description: Take-profit ratio, e.g., 0.1 represents 10%
        slRatio:
          type: string
          description: Stop-loss ratio, e.g., 0.1 represents 10%
        fee:
          type: string
          description: Accumulated fee, only applicable to Contract grid
        fundingFee:
          type: string
          description: Accumulated funding fee, only applicable to Contract grid
    withdrawResponse:
      type: object
      properties:
        algoId:
          type: string
        algoClOrdId:
          type: string
          example: "448965992920907776"
        profit:
          type: string
          example: "100"
    MarginResponse:
      type: object
      properties:
        maxAmt:
          type: string
          example: "5000"
        lever:
          type: string
          example: "10x"
    AIParams:
      type: object
      properties:
        instId:
          type: string
          description: Instrument ID, e.g., BTC-USDT-SWAP
        algoOrdType:
          type: string
          enum:
            - grid
            - contract_grid
          description: Algo order type (Spot grid or Contract grid)
        duration:
          type: string
          enum:
            - 7D
            - 30D
            - 180D
          description: Back testing duration. Default is 7D for Spot grid. Only 7D is available for Contract grid.
        gridNum:
          type: string
          description: Grid quantity
        maxPx:
          type: string
          description: Upper price of price range
        minPx:
          type: string
          description: Lower price of price range
        perMaxProfitRate:
          type: string
          description: Estimated maximum profit margin per grid
        perMinProfitRate:
          type: string
          description: Estimated minimum profit margin per grid
        annualizedRate:
          type: string
          description: Grid annualized rate
        minInvestment:
          type: string
          description: The minimum invest amount
        ccy:
          type: string
          description: The invest currency
        runType:
          type: string
          enum:
            - "1"
            - "2"
          description: "Grid type (1: Arithmetic, 2: Geometric)"
        direction:
          type: string
          enum:
            - long
            - short
            - neutral
          description: Contract grid type (only applicable to contract grid)
        lever:
          type: string
          description: Leverage (only applicable to contract grid)
    MinInvestmentRequest:
      type: object
      properties:
        instId:
          type: string
          description: Instrument ID, e.g., BTC-USDT-SWAP
        algoOrdType:
          type: string
          enum:
            - grid
            - contract_grid
          description: Algo order type (Spot grid or Contract grid)
        maxPx:
          type: string
          description: Upper price of price range
        minPx:
          type: string
          description: Lower price of price range
        gridNum:
          type: string
          description: Grid quantity
        runType:
          type: string
          enum:
            - "1"
            - "2"
          description: "Grid type (1: Arithmetic, 2: Geometric)"
        direction:
          type: string
          enum:
            - long
            - short
            - neutral
          description: Contract grid type (only applicable to contract grid)
        lever:
          type: string
          description: Leverage (only applicable to contract grid)
        basePos:
          type: boolean
          description: Whether or not to open a position when the strategy activates. Default is false. Neutral contract grid should omit the parameter. (Only applicable to contract grid)
        investmentType:
          type: string
          enum:
            - quote
            - base
            - dual
          description: Investment type. Only applicable to grid.
        triggerStrategy:
          type: string
          enum:
            - instant
            - price
            - rsi
          description: Trigger strategy.
        investmentData:
          type: array
          items:
            type: object
            properties:
              amt:
                type: string
                description: Invest amount
              ccy:
                type: string
                description: Invest currency
    MinInvestmentResponse:
      type: object
      properties:
        investmentData:
          type: array
          items:
            $ref: "#/components/schemas/InvestmentData"
          description: List of minimum investment data with amounts and currencies
        singleAmt:
          type: string
          description: The single investment amount
    InvestmentData:
      type: object
      properties:
        amt:
          type: string
          description: Investment amount
        ccy:
          type: string
          description: Investment currency
    SignalRequest:
      type: object
      properties:
        signalChanName:
          type: string
          description: The name of the signal channel.
        signalChanDesc:
          type: string
          description: A description of the signal channel (optional).
          nullable: true
    SignalResponse:
      type: object
      properties:
        signalChanId:
          type: string
          description: The ID of the signal channel.
        signalChanToken:
          type: string
          description: User identify when placing orders via signal.
          nullable: true
    SignalChannelResponse:
      type: object
      properties:
        signalChanId:
          type: string
          description: Signal channel ID
        signalChanName:
          type: string
          description: Signal channel name
        signalChanDesc:
          type: string
          description: Signal channel description
        signalChanToken:
          type: string
          description: User identifier when placing orders via signal
        signalSourceType:
          type: string
          description: |
            Signal source type:
            1: Created by yourself
            2: Subscribe
            3: Free signal
          enum:
            - "1"
            - "2"
            - "3"
      required:
        - signalChanId
        - signalChanName
        - signalSourceType
    SignalsRequest:
      type: object
      properties:
        signalChanId:
          type: string
          description: Signal channel ID
        lever:
          type: string
          description: Leverage (Only applicable to contract signals)
        investAmt:
          type: string
          description: Investment amount
        subOrdType:
          type: string
          description: Sub order type
          enum:
            - "1" # limit order
            - "2" # market order
            - "9" # tradingView signal
        includeAll:
          type: boolean
          description: |
            Whether to include all USDT-margined contracts. Default is false.
            true: include, false: exclude
        instIds:
          type: string
          description: |
            Instrument IDs. Single currency or multiple currencies separated by commas.
            Ignored if includeAll is true.
        ratio:
          type: string
          description: |
            Price offset ratio, calculate the limit price as a percentage offset from the best bid/ask price.
            Only applicable to subOrdType = "1" (limit order).
        entrySettingParam:
          type: object
          description: Entry setting parameters
          properties:
            allowMultipleEntry:
              type: string
              description: |
                Whether to allow multiple entries in the same direction for the same trading pairs.
                Default is true.
                true: Allow, false: Prohibit.
            entryType:
              type: string
              description: Entry type
              enum:
                - "1" # TradingView signal
                - "2" # Fixed margin
                - "3" # Contracts
                - "4" # Percentage of free margin
                - "5" # Percentage of the initial invested margin
            amt:
              type: string
              description: |
                Amount per order (Only applicable to entryType = "2" or "3").
            ratio:
              type: array
              items:
                type: object
              description: |
                Amount ratio per order (Only applicable to entryType = "4" or "5").
        exitSettingParam:
          type: object
          description: Exit setting parameters
          properties:
            tpSlType:
              type: string
              description: |
                Type of setting the take-profit and stop-loss trigger price.
                pnl: Based on estimated profit and loss percentage from the entry point.
                price: Based on price increase or decrease from the crypto’s entry price.
            tpPct:
              type: string
              description: Take-profit percentage
            slPct:
              type: string
              description: Stop-loss percentage
      required:
        - signalChanId
        - lever
        - investAmt
        - subOrdType
    SignalsResponse:
      type: object
      properties:
        algoId:
          type: string
          description: The unique identifier for the algorithm
        algoClOrdId:
          type: string
          description: Client-supplied Algo ID
        sCode:
          type: string
          description: |
            The code of the event execution result.
            0 means success.
        sMsg:
          type: string
          description: |
            The message corresponding to the execution result.
            0 means success.
      required:
        - algoId
        - sCode
        - sMsg
    MarginSignal:
      type: object
      properties:
        algoId:
          type: string
          description: The unique identifier for the algorithm.
        type:
          type: string
          description: |
            The type of margin adjustment.
            Possible values are:
            - "add": Add margin.
            - "reduce": Reduce margin.
        amt:
          type: string
          description: |
            The amount to adjust the margin balance. 
            Either `amt` or `percent` is required.
        percent:
          type: string
          description: |
            The percentage of margin adjustment.
            Either `amt` or `percent` is required.
        allowReinvest:
          type: boolean
          description: |
            Whether to reinvest with the newly added margin.
            The default value is false.
            - `false`: Used as passive margin to prevent liquidation.
            - `true`: Added margin will be included in the total investment calculation and impact order size.
        investmentType:
          type: string
          description: |
            The investment type, applicable when `allowReinvest` is true.
            It indicates the type of investment, such as "percentage_investment".
      required:
        - algoId
        - type
        - amt
    TPSLSignal:
      type: object
      properties:
        algoId:
          type: string
          description: The unique identifier for the algorithm.
        exitSettingParam:
          type: string
          description: The parameters for setting exit strategies.
        tpSlType:
          type: string
          description: |
            The type of method used to trigger the take-profit and stop-loss prices.
            Possible values:
            - "pnl": Based on the estimated profit and loss percentage from the entry point.
            - "price": Based on price increase or decrease from the crypto’s entry price.
        tpPct:
          type: string
          description: |
            The take-profit percentage. This value determines when to exit based on the profit target.
        slPct:
          type: string
          description: |
            The stop-loss percentage. This value determines when to exit based on the loss threshold.
      required:
        - algoId
        - exitSettingParam
        - tpSlType
    InstrumentRequest:
      type: object
      properties:
        algoId:
          type: string
          description: The unique identifier for the algorithm.
        instIds:
          type: array
          items:
            type: string
          description: |
            An array of instrument IDs. When `includeAll` is true, this field is ignored.
        includeAll:
          type: boolean
          description: |
            A flag to determine whether to include all USDT-margined contracts. 
            The default value is false.
            - true: Include all USDT-margined contracts
            - false: Exclude
      required:
        - algoId
        - instIds
        - includeAll
    SignalBotResponse:
      type: object
      properties:
        algoId:
          type: string
          description: The unique identifier for the algorithm.
        algoClOrdId:
          type: string
          description: Client-supplied Algo ID.
        instType:
          type: string
          description: The type of instrument (e.g., spot, future).
        instIds:
          type: array
          items:
            type: string
          description: Array of instrument IDs involved in the algorithm.
        cTime:
          type: string
          description: Algo order creation time in Unix timestamp format (milliseconds).
        uTime:
          type: string
          description: Algo order last update time in Unix timestamp format (milliseconds).
        algoOrdType:
          type: string
          description: Type of algo order (e.g., contract signal).
        state:
          type: string
          enum:
            - starting
            - running
            - stopping
            - stopped
          description: The current state of the algo order.
        cancelType:
          type: string
          enum:
            - "0"
            - "1"
          description: |
            The reason the algo order stopped:
            - `0`: None
            - `1`: Manual stop
        totalPnl:
          type: string
          description: Total profit and loss from the algorithm.
        totalPnlRatio:
          type: string
          description: Total profit and loss ratio.
        totalEq:
          type: string
          description: Total equity in the strategy account.
        floatPnl:
          type: string
          description: Unrealized (floating) profit and loss.
        realizedPnl:
          type: string
          description: Realized profit and loss.
        frozenBal:
          type: string
          description: The balance that is frozen.
        availBal:
          type: string
          description: The available balance.
        lever:
          type: string
          description: Leverage, applicable to contract signals only.
        investAmt:
          type: string
          description: Investment amount in the algorithm.
        subOrdType:
          type: string
          enum:
            - "1"
            - "2"
            - "9"
          description: |
            Sub-order type:
            - `1`: Limit order
            - `2`: Market order
            - `9`: TradingView signal
        ratio:
          type: string
          description: Price offset ratio for limit orders, calculated as a percentage offset from the best bid/ask price.
        entrySettingParam:
          type: object
          properties:
            allowMultipleEntry:
              type: boolean
              description: Whether multiple entries in the same direction for the same trading pairs are allowed.
            entryType:
              type: string
              enum:
                - "1"
                - "2"
                - "3"
                - "4"
                - "5"
              description: "Entry type:<br>- `1`: TradingView signal<br>- `2`: Fixed margin<br>- `3`: Contracts<br>- `4`: Percentage of free margin<br>- `5`: Percentage of the initial invested margin"
            amt:
              type: string
              description: Amount per order, applicable to entry types 2 and 3.
            ratio:
              type: string
              description: Amount ratio per order, applicable to entry types 4 and 5.
        exitSettingParam:
          type: object
          properties:
            tpSlType:
              type: string
              enum:
                - "pnl"
                - "price"
              description: "Type of take-profit and stop-loss trigger:<br>- `pnl`: Based on estimated profit and loss percentage from entry point<br>- `price`: Based on price increase or decrease from entry price"
            tpPct:
              type: string
              description: Take-profit percentage.
            slPct:
              type: string
              description: Stop-loss percentage.
        signalChanId:
          type: string
          description: Signal channel ID.
        signalChanName:
          type: string
          description: Name of the signal channel.
        signalSourceType:
          type: string
          enum:
            - "1"
            - "2"
            - "3"
          description: "Signal source type:<br> - `1`: Created by yourself<br>- `2`: Subscribe<br>- `3`: Free signal"
      required:
        - algoId
        - instType
        - instIds
        - algoOrdType
        - state
        - totalPnl
        - totalEq
        - floatPnl
        - realizedPnl
        - frozenBal
        - availBal
        - investAmt
        - subOrdType
        - entrySettingParam
        - exitSettingParam
        - signalChanId
        - signalChanName
        - signalSourceType
    ActiveSignalResponse:
      type: object
      properties:
        algoId:
          type: string
          description: The unique identifier for the algorithm.
        algoClOrdId:
          type: string
          description: Client-supplied Algo ID.
        instType:
          type: string
          description: The type of instrument (e.g., spot, future).
        instIds:
          type: array
          items:
            type: string
          description: Array of instrument IDs involved in the algorithm.
        cTime:
          type: string
          description: Algo order creation time in Unix timestamp format (milliseconds).
        uTime:
          type: string
          description: Algo order last update time in Unix timestamp format (milliseconds).
        algoOrdType:
          type: string
          description: Type of the algo order (e.g., contract signal).
        state:
          type: string
          enum:
            - starting
            - running
            - stopping
            - stopped
          description: The current state of the algo order.
        cancelType:
          type: string
          enum:
            - "0"
          description: |
            The reason the algo order stopped:
            - `0`: None
        totalPnl:
          type: string
          description: Total profit and loss generated by the algorithm.
        totalPnlRatio:
          type: string
          description: Total profit and loss ratio.
        totalEq:
          type: string
          description: Total equity in the strategy account.
        floatPnl:
          type: string
          description: Unrealized (floating) profit and loss.
        realizedPnl:
          type: string
          description: Realized profit and loss.
        frozenBal:
          type: string
          description: The balance that is frozen.
        availBal:
          type: string
          description: The available balance.
        lever:
          type: string
          description: Leverage (only applicable to contract signals).
        investAmt:
          type: string
          description: Investment amount for the algorithm.
        subOrdType:
          type: string
          enum:
            - "1"
            - "2"
            - "9"
          description: |
            Sub-order type:
            - `1`: Limit order
            - `2`: Market order
            - `9`: TradingView signal
        ratio:
          type: string
          description: Price offset ratio, applied to limit orders.
        entrySettingParam:
          type: object
          properties:
            allowMultipleEntry:
              type: boolean
              description: Whether multiple entries in the same direction for the same trading pairs are allowed.
            entryType:
              type: string
              enum:
                - "1"
                - "2"
                - "3"
                - "4"
                - "5"
              description: |
                Entry type:
                - `1`: TradingView signal
                - `2`: Fixed margin
                - `3`: Contracts
                - `4`: Percentage of free margin
                - `5`: Percentage of the initial invested margin
            amt:
              type: string
              description: Amount per order (only applicable to entry types 2 and 3).
            ratio:
              type: string
              description: Amount ratio per order (only applicable to entry types 4 and 5).
        exitSettingParam:
          type: object
          properties:
            tpSlType:
              type: string
              enum:
                - "pnl"
                - "price"
              description: |
                Type of take-profit and stop-loss trigger:
                - `pnl`: Based on estimated profit and loss percentage from the entry point
                - `price`: Based on price increase or decrease from the entry price
            tpPct:
              type: string
              description: Take-profit percentage.
            slPct:
              type: string
              description: Stop-loss percentage.
        signalChanId:
          type: string
          description: Signal channel ID.
        signalChanName:
          type: string
          description: Name of the signal channel.
        signalSourceType:
          type: string
          enum:
            - "1"
            - "2"
            - "3"
          description: "Signal source type:<br> - `1`: Created by yourself<br>- `2`: Subscribe<br>- `3`: Free signal"
      required:
        - algoId
        - instType
        - instIds
        - algoOrdType
        - state
        - totalPnl
        - totalEq
        - floatPnl
        - realizedPnl
        - frozenBal
        - availBal
        - investAmt
        - subOrdType
        - entrySettingParam
        - exitSettingParam
        - signalChanId
        - signalChanName
        - signalSourceType
    SignalPositionResponse:
      type: object
      properties:
        algoId:
          type: string
          description: Unique identifier for the algorithm.
        algoClOrdId:
          type: string
          description: Client-supplied Algo ID. Used for potential extensions in the future.
        instType:
          type: string
          description: Type of instrument (e.g., spot, futures, swap).
        instId:
          type: string
          description: Instrument ID, such as BTC-USDT-SWAP.
        cTime:
          type: string
          format: date-time
          description: Algo order creation time, in Unix timestamp format (milliseconds).
        uTime:
          type: string
          format: date-time
          description: Algo order last updated time, in Unix timestamp format (milliseconds).
        avgPx:
          type: string
          description: Average price of the open position.
        ccy:
          type: string
          description: Margin currency.
        lever:
          type: string
          description: Leverage applied to the position.
        liqPx:
          type: string
          description: Estimated liquidation price.
        posSide:
          type: string
          enum:
            - net
          description: Position side, currently supports `net`.
        pos:
          type: string
          description: Quantity of the position.
        mgnMode:
          type: string
          enum:
            - cross
            - isolated
          description: Margin mode, either cross or isolated.
        mgnRatio:
          type: string
          description: Margin ratio.
        imr:
          type: string
          description: Initial margin requirement.
        mmr:
          type: string
          description: Maintenance margin requirement.
        upl:
          type: string
          description: Unrealized profit and loss (PnL).
        uplRatio:
          type: string
          description: Unrealized profit and loss ratio.
        last:
          type: string
          description: Latest traded price.
        notionalUsd:
          type: string
          description: Notional value of the position in USD.
        adl:
          type: string
          description: |
            Auto Decrease Line (ADL) signal area:
            - Divided into 5 levels (1-5).
            - Smaller numbers indicate weaker ADL intensity.
        markPx:
          type: string
          description: Mark price of the instrument.
      required:
        - algoId
        - instType
        - instId
        - cTime
        - avgPx
        - ccy
        - lever
        - posSide
        - mgnMode
    PositionHistoryResponse:
      type: object
      properties:
        cTime:
          type: string
          format: date-time
          description: Position creation time, in Unix timestamp format (milliseconds).
        closeAvgPx:
          type: string
          description: Average close price for the position.
        direction:
          type: string
          enum:
            - net
          description: Direction of the position, currently supports `net`.
        instId:
          type: string
          description: Instrument ID, such as ETH-USDT-SWAP.
        lever:
          type: string
          description: Leverage applied to the position.
        mgnMode:
          type: string
          enum:
            - cross
            - isolated
          description: Margin mode, either cross or isolated.
        openAvgPx:
          type: string
          description: Average open price for the position.
        pnl:
          type: string
          description: Profit and loss (PnL) of the position.
        pnlRatio:
          type: string
          description: Profit and loss ratio of the position.
        uTime:
          type: string
          format: date-time
          description: Last updated time for the position, in Unix timestamp format (milliseconds).
        uly:
          type: string
          description: Underlying asset, such as ETH-USDT.
      required:
        - cTime
        - closeAvgPx
        - direction
        - instId
        - lever
        - mgnMode
        - openAvgPx
        - pnl
        - pnlRatio
        - uTime
        - uly
    SubOrderResponse:
      type: object
      properties:
        instId:
          type: string
          description: Instrument ID, e.g., BTC-USDT-SWAP.
        algoId:
          type: string
          description: Algo ID for the order.
        side:
          type: string
          enum:
            - buy
            - sell
          description: Order side, either buy or sell.
        ordType:
          type: string
          enum:
            - market
            - limit
          description: Order type, market or limit.
        sz:
          type: string
          description: Quantity to buy or sell.
        px:
          type: string
          nullable: true
          description: Order price. Applicable only to limit orders.
        reduceOnly:
          type: boolean
          default: false
          description: Whether the order can only reduce the position size. Default is false. Applicable to Spot and futures mode/Multi-currency margin.
      required:
        - instId
        - algoId
        - side
        - ordType
        - sz
    CancelOrder:
      type: object
      properties:
        algoId:
          type: string
        instId:
          type: string
        signalOrdId:
          type: string
    BotSuborderResponse:
      type: object
      properties:
        accFillSz:
          type: string
          description: Accumulated filled size.
        algoClOrdId:
          type: string
          description: Client-supplied Algo ID. Can be empty.
        algoId:
          type: string
          description: Algo ID.
        algoOrdType:
          type: string
          description: Algo order type.
          enum:
            - contract
        avgPx:
          type: string
          description: Average executed price.
        cTime:
          type: string
          format: int64
          description: Creation time in Unix timestamp format (milliseconds).
        ccy:
          type: string
          description: Margin currency. Can be empty.
        clOrdId:
          type: string
          description: Client-supplied order ID.
        ctVal:
          type: string
          description: Contract value.
        fee:
          type: string
          description: Fee incurred by the order.
        feeCcy:
          type: string
          description: Fee currency.
        instId:
          type: string
          description: Instrument ID, e.g., ETH-USDT-SWAP.
        instType:
          type: string
          description: Instrument type.
          enum:
            - SWAP
        lever:
          type: string
          description: Leverage used.
        ordId:
          type: string
          description: Order ID.
        ordType:
          type: string
          description: Order type.
          enum:
            - market
        pnl:
          type: string
          description: Profit and Loss (P&L) of the order.
        posSide:
          type: string
          description: Position side.
          enum:
            - net
        px:
          type: string
          description: Order price. Can be empty.
        side:
          type: string
          description: Order side.
          enum:
            - buy
            - sell
        state:
          type: string
          description: Order state.
          enum:
            - filled
        sz:
          type: string
          description: Order size.
        tag:
          type: string
          description: Additional order tag. Can be empty.
        tdMode:
          type: string
          description: Trade mode.
          enum:
            - cross
        uTime:
          type: string
          format: int64
          description: Update time in Unix timestamp format (milliseconds).
    EventHistoryResponse:
      type: object
      properties:
        algoId:
          type: string
          description: Algo ID.
        eventType:
          type: string
          description: Event type.
          enum:
            - system_action
            - user_action
            - signal_processing
        eventCtime:
          type: string
          format: int64
          description: Event timestamp of creation in Unix timestamp format (milliseconds).
        eventUtime:
          type: string
          format: int64
          description: Event timestamp of update in Unix timestamp format (milliseconds).
        eventProcessMsg:
          type: string
          description: Event process message.
        eventStatus:
          type: string
          description: Event status.
          enum:
            - success
            - failure
        triggeredOrdData:
          type: array
          description: Triggered sub-order data.
          items:
            type: object
            properties:
              clOrdId:
                type: string
                description: Sub-order client-supplied ID.
    RecurringOrder:
      type: object
      required:
        - stgyName
        - recurringList
        - period
        - recurringTime
        - timeZone
        - amt
        - investmentCcy
        - tdMode
      properties:
        stgyName:
          type: string
          description: Custom name for the trading bot, no more than 40 characters.
        recurringList:
          type: array
          description: Recurring buy info.
          items:
            type: object
            required:
              - ccy
              - ratio
            properties:
              ccy:
                type: string
                description: Recurring currency, e.g., BTC.
              ratio:
                type: string
                description: Proportion of recurring currency assets, e.g., "0.2" representing 20%.
        period:
          type: string
          description: Period of recurring buy.
          enum:
            - monthly
            - weekly
            - daily
            - hourly
        recurringDay:
          type: integer
          description: |
            Recurring buy date:
            - When the period is monthly, the value range is [1,28].
            - When the period is weekly, the value range is [1,7].
            - Not required for daily/hourly.
        recurringHour:
          type: integer
          description: |
            Recurring buy interval in hours:
            - Values: 1, 4, 8, 12.
            - Required when the period is hourly.
        recurringTime:
          type: integer
          description: |
            Recurring buy time:
            - For hourly, it represents the time of the first investment (range [0,23]).
        timeZone:
          type: integer
          description: |
            UTC time zone offset:
            - Range: [-12, 14].
            - E.g., "8" represents UTC+8 (Beijing Time).
        amt:
          type: string
          description: Quantity invested per cycle.
        investmentCcy:
          type: string
          description: The unit of invested quantity, can only be USDT/USDC.
          enum:
            - USDT
            - USDC
        tdMode:
          type: string
          description: Trading mode.
          enum:
            - cross
            - cash
        algoClOrdId:
          type: string
          description: |
            Client-supplied Algo ID:
            - Up to 32 characters of case-sensitive alphanumerics, all numbers, or all letters.
            - Will have a value if the algo order attaches algoClOrdId, otherwise "".
        tag:
          type: string
          description: |
            Order tag:
            - Up to 16 characters of case-sensitive alphanumerics, all numbers, or all letters.
    RecurringAmendOrder:
      type: object
      properties:
        algoId:
          type: string
        stgyName:
          type: string
    RecurringOrderAlgo:
      type: object
      properties:
        ccy:
          type: string
          description: Recurring currency, e.g. BTC
        ratio:
          type: string
          description: Proportion of recurring currency assets, e.g. "0.2" representing 20%
    RecurringAlgoOrder:
      type: object
      properties:
        algoId:
          type: string
          description: Algo ID
        algoClOrdId:
          type: string
          description: Client-supplied Algo ID
        instType:
          type: string
          description: Instrument type
        cTime:
          type: string
          format: date-time
          description: Algo order created time, Unix timestamp format in milliseconds
        uTime:
          type: string
          format: date-time
          description: Algo order updated time, Unix timestamp format in milliseconds
        algoOrdType:
          type: string
          enum:
            - recurring
          description: Algo order type
        state:
          type: string
          enum:
            - running
            - stopping
            - pause
          description: Algo order state
        stgyName:
          type: string
          maxLength: 40
          description: Custom name for trading bot, no more than 40 characters
        recurringList:
          type: array
          items:
            $ref: "#/components/schemas/RecurringOrderAlgo"
          description: Recurring buy info
        period:
          type: string
          enum:
            - monthly
            - weekly
            - daily
            - hourly
          description: Period
        recurringDay:
          type: integer
          description: |
            Recurring buy date.
            - When the period is monthly, the value range is an integer of [1,28].
            - When the period is weekly, the value range is an integer of [1,7].
        recurringHour:
          type: integer
          description: "Recurring buy by hourly. Possible values: 1, 4, 8, 12."
        recurringTime:
          type: integer
          description: "Recurring buy time, the value range is an integer of [0,23]"
        timeZone:
          type: integer
          minimum: -12
          maximum: 14
          description: |
            UTC time zone, the value range is an integer of [-12,14].
            E.g., "8" representing UTC+8 (East 8 District), Beijing Time.
        amt:
          type: string
          description: Quantity invested per cycle
        investmentAmt:
          type: string
          description: Accumulate quantity invested
        investmentCcy:
          type: string
          enum:
            - USDT
            - USDC
          description: The invested quantity unit
        totalPnl:
          type: string
          description: Total P&L
        totalAnnRate:
          type: string
          description: Total annualized rate of yield
        pnlRatio:
          type: string
          description: Rate of yield
        mktCap:
          type: string
          description: Market value in unit of USDT
        cycles:
          type: integer
          description: Accumulate recurring buy cycles
        tag:
          type: string
          description: Order tag
    LeadResponse:
      type: object
      properties:
        instId:
          type: string
          description: Instrument ID, e.g., BTC-USDT-SWAP
        subPosId:
          type: string
          description: Lead or copy position ID
        posSide:
          type: string
          enum:
            - long
            - short
            - net
          description: Position side. Long positions have positive subPos; short positions have negative subPos
        mgnMode:
          type: string
          enum:
            - cross
            - isolated
          description: Margin mode
        lever:
          type: string
          description: Leverage
        openOrdId:
          type: string
          description: Order ID for opening position, only applicable to lead position
        openAvgPx:
          type: string
          description: Average open price
        openTime:
          type: string
          description: Open time
        subPos:
          type: string
          description: Quantity of positions
        tpTriggerPx:
          type: string
          description: Take-profit trigger price
        slTriggerPx:
          type: string
          description: Stop-loss trigger price
        algoId:
          type: string
          description: Stop order ID
        instType:
          type: string
          description: Instrument type
        tpOrdPx:
          type: string
          description: Take-profit order price, it is -1 for market price
        slOrdPx:
          type: string
          description: Stop-loss order price, it is -1 for market price
        margin:
          type: string
          description: Margin
        upl:
          type: string
          description: Unrealized profit and loss
        uplRatio:
          type: string
          description: Unrealized profit and loss ratio
        markPx:
          type: string
          description: Latest mark price, only applicable to contract
        uniqueCode:
          type: string
          description: Lead trader unique code
        ccy:
          type: string
          description: Margin currency
        availSubPos:
          type: string
          description: Quantity of positions that can be closed
    LeadPlaceRequest:
      type: object
      properties:
        instType:
          type: string
          enum:
            - SPOT
            - SWAP
          description: Instrument type. Default is SWAP.
        subPosId:
          type: string
          description: Lead or copy position ID
        tpTriggerPx:
          type: string
          description: >
            Take-profit trigger price. Take-profit order price will be the market price after triggering.  
            At least one of `tpTriggerPx` and `slTriggerPx` must be filled.  
            The take-profit order will be deleted if set to 0.
        slTriggerPx:
          type: string
          description: >
            Stop-loss trigger price. Stop-loss order price will be the market price after triggering.  
            The stop-loss order will be deleted if set to 0.
        tpOrdPx:
          type: string
          description: >
            Take-profit order price. If the price is -1, take-profit will be executed at the market price.  
            Default is -1. Only applicable to SPOT lead traders.
        slOrdPx:
          type: string
          description: >
            Stop-loss order price. If the price is -1, stop-loss will be executed at the market price.  
            Default is -1. Only applicable to SPOT lead traders.
        tpTriggerPxType:
          type: string
          enum:
            - last
            - index
            - mark
          description: >
            Take-profit trigger price type.  
            `last`: last price, `index`: index price, `mark`: mark price. Default is `last`.
        slTriggerPxType:
          type: string
          enum:
            - last
            - index
            - mark
          description: >
            Stop-loss trigger price type.  
            `last`: last price, `index`: index price, `mark`: mark price. Default is `last`.
        tag:
          type: string
          description: >
            Order tag. A combination of case-sensitive alphanumerics, all numbers, or all letters  
            of up to 16 characters.
        subPosType:
          type: string
          enum:
            - lead
            - copy
          description: >
            Data type.  
            `lead`: lead trading (default), `copy`: copy trading.
      required:
        - subPosId
    LeadPlaceResponse:
      type: object
      properties:
        tag:
          type: string
          description: Order Tag
        subPosId:
          type: string
          description: Lead or copy position ID
    LeadSubPositionRequest:
      type: object
      properties:
        instType:
          type: string
          enum:
            - SPOT
            - SWAP
          description: Instrument type. Default is SWAP.
        subPosType:
          type: string
          enum:
            - lead
            - copy
          description: >
            Data type.  
            `lead`: lead trading (default), `copy`: copy trading.
        subPosId:
          type: string
          description: Lead or copy position ID.
        ordType:
          type: string
          enum:
            - market
            - limit
          description: >
            Order type.  
            `market`: Market order (default), `limit`: Limit order.
        px:
          type: string
          description: >
            Order price. Only applicable to limit orders and SPOT lead traders.  
            If the price is 0, the pending order will be canceled.  
            Setting `px` after placing a limit order modifies the order.
        tag:
          type: string
          description: >
            Order tag. A combination of case-sensitive alphanumerics,  
            all numbers, or all letters of up to 16 characters.
      required:
        - subPosId
    ProfitLeadResponse:
      type: object
      properties:
        ccy:
          type: string
          description: The currency of profit sharing.
        profitSharingAmt:
          type: string
          description: Profit sharing amount. It will be 0 if there is no profit sharing.
        unrealizedprofitSharingAmt:
          type: string
          description: Profit sharing amount. It will be 0 if there is no profit sharing.
        totalunrealizedprofitSharingAmt:
          type: string
          description: Profit sharing amount. It will be 0 if there is no profit sharing
        totalprofitSharingAmt:
          type: string
          description: Profit sharing amount. It will be 0 if there is no profit sharing.
        nickName:
          type: string
          description: Nickname of the copy trader.
        profitSharingId:
          type: string
          description: Profit sharing ID.
        instType:
          type: string
          description: Instrument type.
        portLink:
          type: string
          description: Portrait link.
        ts:
          type: string
          format: date-time
          description: Profit sharing time.
    ConfigTrading:
      type: object
      properties:
        uniqueCode:
          type: string
          description: User unique code
        nickName:
          type: string
          description: Nickname
        portLink:
          type: string
          description: Portrait link
        details:
          type: string
          description: Details
        instType:
          type: string
          description: Instrument type
          enum:
            - SPOT
            - SWAP
        roleType:
          type: integer
          description: Role type
          enum:
            - 0 # General user
            - 1 # Leading trader
            - 2 # Copy trader
        profitSharingRatio:
          type: string
          description: Profit sharing ratio. Only applicable to lead trader, or it will be "". 0.1 represents 10%.
          example: "0.1"
        maxCopyTraderNum:
          type: integer
          description: Maximum number of copy traders
        copyTraderNum:
          type: integer
          description: Current number of copy traders
      required:
        - uniqueCode
        - nickName
        - instType
        - roleType
    FirstCopyTrading:
      type: object
      properties:
        instType:
          type: string
          description: Instrument type. Default is SWAP.
          enum:
            - SWAP
          default: SWAP
        uniqueCode:
          type: string
          description: Lead trader unique code. A combination of case-sensitive alphanumerics with a length of 16 characters.
          pattern: "^[a-zA-Z0-9]{16}$"
          example: 213E8C92DC61EFAC
        copyMgnMode:
          type: string
          description: Copy margin mode.
          enum:
            - cross
            - isolated
            - copy
          example: copy
        copyInstIdType:
          type: string
          description: Copy contract type set by the user.
          enum:
            - custom
            - copy
          example: custom
        instId:
          type: string
          description: Instrument ID. If there are multiple instruments, separate them with commas. Required if `copyInstIdType` is `custom`.
          example: BTC-USD,ETH-USD
        copyMode:
          type: string
          description: Copy mode. Default is fixed_amount.
          enum:
            - fixed_amount
            - ratio_copy
          default: fixed_amount
        copyTotalAmt:
          type: string
          description: Maximum total amount in USDT to invest at any given time across all orders in this copy trade.
          example: "1000"
        copyAmt:
          type: string
          description: Copy amount per order in USDT. Required if `copyMode` is `fixed_amount`.
          example: "50"
        copyRatio:
          type: string
          description: Copy ratio per order. Required if `copyMode` is `ratio_copy`.
          example: "0.1"
        tpRatio:
          type: string
          description: Take profit per order. 0.1 represents 10%.
          example: "0.1"
        slRatio:
          type: string
          description: Stop loss per order. 0.1 represents 10%.
          example: "0.1"
        slTotalAmt:
          type: string
          description: Total stop loss in USDT for the trader. You stop copying if your net loss reaches this amount.
          example: "500"
        subPosCloseType:
          type: string
          description: Action type for open positions. Default is copy_close.
          enum:
            - market_close
            - copy_close
            - manual_close
          default: copy_close
      required:
        - uniqueCode
        - copyMgnMode
        - copyInstIdType
        - copyTotalAmt
        - subPosCloseType
    CopySettings:
      type: object
      properties:
        copyMode:
          type: string
          description: Copy mode.
          enum:
            - fixed_amount
            - ratio_copy
        copyAmt:
          type: string
          description: Copy amount in USDT per order. Required if `copyMode` is `fixed_amount`.
          example: "100"
        copyRatio:
          type: string
          description: Copy ratio per order. Required if `copyMode` is `ratio_copy`.
          example: "0.1"
        copyTotalAmt:
          type: string
          description: Maximum total amount in USDT you'll invest across all orders in this copy trade.
          example: "1000"
        tpRatio:
          type: string
          description: Take profit per order. 0.1 represents 10%.
          example: "0.2"
        slRatio:
          type: string
          description: Stop loss per order. 0.1 represents 10%.
          example: "0.1"
        copyInstIdType:
          type: string
          description: Copy contract type.
          enum:
            - custom
            - copy
        instIds:
          type: array
          description: Instrument list. Includes all lead contracts of the lead trader.
          items:
            type: object
            properties:
              instId:
                type: string
                description: Instrument ID.
                example: BTC-USD
              enabled:
                type: string
                description: Whether copying this instId.
                enum:
                  - "0"
                  - "1"
                example: "1"
        slTotalAmt:
          type: string
          description: Total stop loss in USDT for the trader. Stop copying when net loss reaches this value.
          example: "500"
        subPosCloseType:
          type: string
          description: Action type for open positions. Default is `copy_close`.
          enum:
            - market_close
            - copy_close
            - manual_close
          default: copy_close
        copyMgnMode:
          type: string
          description: Copy margin mode.
          enum:
            - cross
            - isolated
            - copy
          example: copy
        ccy:
          type: string
          description: Margin currency.
          example: USDT
        copyState:
          type: string
          description: Current copy state.
          enum:
            - "0" # non-copy
            - "1" # copy
          example: "1"
      required:
        - copyMode
        - copyTotalAmt
        - copyInstIdType
        - copyMgnMode
        - ccy
    Leverages:
      type: object
      properties:
        instId:
          type: string
          description: Instrument ID.
          example: BTC-USD
        mgnMode:
          type: string
          description: Margin mode.
          enum:
            - isolated
            - cross
          example: isolated
        leadTraderLevers:
          type: array
          description: List of leverage settings for the lead trader.
          items:
            $ref: "#/components/schemas/LeverageSetting"
        myLevers:
          type: array
          description: List of leverage settings for the user.
          items:
            $ref: "#/components/schemas/LeverageSetting"
      required:
        - instId
        - mgnMode
    LeverageSetting:
      type: object
      properties:
        lever:
          type: string
          description: Leverage value.
          example: "10"
        posSide:
          type: string
          description: Position side.
          enum:
            - long
            - short
            - both
          example: long
    LeveragesRequest:
      type: object
      properties:
        mgnMode:
          type: string
          description: Margin mode.
          enum:
            - cross
            - isolated
          example: cross
        lever:
          type: string
          description: Leverage value.
          example: "10"
        instId:
          type: string
          description: Instrument ID. If there are multiple instruments, separate them with commas.
          example: "BTC-USD,ETH-USD"
      required:
        - mgnMode
        - lever
        - instId
    LeveragesResponse:
      type: object
      properties:
        succInstId:
          type: string
          description: Instrument ID set successfully.
          example: BTC-USD
        failInstId:
          type: string
          description: Instrument ID set unsuccessfully.
          example: ETH-USD
        result:
          type: string
          description: Result of the operation.
          enum:
            - "0"
            - "1"
            - "2"
          example: "0"
          # 0: All success
          # 1: Some successes
          # 2: All fail
      required:
        - result
    CurrentLeaderTrader:
      type: object
      properties:
        portLink:
          type: string
          description: Portrait link of the trader.
          example: "https://example.com/portrait.jpg"
        nickName:
          type: string
          description: Nickname of the trader.
          example: "Trader123"
        margin:
          type: string
          description: Margin for copy trading.
          example: "5000"
        copyTotalAmt:
          type: string
          description: Total amount to copy in USDT.
          example: "10000"
        copyTotalPnl:
          type: string
          description: Total profit and loss for the copy trading.
          example: "200"
        uniqueCode:
          type: string
          description: Lead trader's unique code.
          example: "213E8C92DC61EFAC"
        ccy:
          type: string
          description: Margin currency.
          example: "USDT"
        profitSharingRatio:
          type: string
          description: Profit sharing ratio, e.g., "0.1" represents 10%.
          example: "0.1"
        beginCopyTime:
          type: string
          description: Time when copying started, in Unix timestamp format (milliseconds).
          example: "1597026383085"
        upl:
          type: string
          description: Unrealized profit and loss.
          example: "150"
        todayPnl:
          type: string
          description: Profit and loss for today.
          example: "50"
        leadMode:
          type: string
          description: Mode of the lead trader.
          enum:
            - public
            - private
          example: "public"
      required:
        - portLink
        - nickName
        - margin
        - copyTotalAmt
        - copyTotalPnl
        - uniqueCode
        - ccy
        - profitSharingRatio
        - beginCopyTime
        - upl
        - todayPnl
        - leadMode
    CopyTradingConfig:
      type: object
      properties:
        maxCopyAmt:
          type: string
          description: Maximum copy amount per order in USDT when using copy mode `fixed_amount`.
          example: "500"
        minCopyAmt:
          type: string
          description: Minimum copy amount per order in USDT when using copy mode `fixed_amount`.
          example: "10"
        maxCopyTotalAmt:
          type: string
          description: Maximum copy total amount under a certain lead trader. The minimum is the same as `minCopyAmt`.
          example: "5000"
        minCopyRatio:
          type: string
          description: Minimum ratio per order when using copy mode `ratio_copy`.
          example: "0.1"
        maxCopyRatio:
          type: string
          description: Maximum ratio per order when using copy mode `ratio_copy`.
          example: "5"
        maxTpRatio:
          type: string
          description: Maximum ratio of taking profit per order. The minimum is 0.
          example: "0.3"
        maxSlRatio:
          type: string
          description: Maximum ratio of stopping loss per order. The minimum is 0.
          example: "0.2"
      required:
        - maxCopyAmt
        - minCopyAmt
        - maxCopyTotalAmt
        - minCopyRatio
        - maxCopyRatio
        - maxTpRatio
        - maxSlRatio
    LeadTradersResponse:
      type: object
      properties:
        dataVer:
          type: string
          description: Data version (14 digits)
        totalPage:
          type: string
          description: Total number of pages
        ranks:
          type: array
          items:
            type: object
            properties:
              aum:
                type: string
                description: Assets under management in USDT
              copyState:
                type: string
                description: Current copy state
                enum:
                  - "0" # non-copy
                  - "1" # copy
              maxCopyTraderNum:
                type: string
                description: Maximum number of copy traders
              copyTraderNum:
                type: string
                description: Current number of copy traders
              accCopyTraderNum:
                type: string
                description: Accumulated number of copy traders
              portLink:
                type: string
                description: Portrait link of the lead trader
              nickName:
                type: string
                description: Nickname of the lead trader
              ccy:
                type: string
                description: Margin currency
              uniqueCode:
                type: string
                description: Lead trader unique code
              winRatio:
                type: string
                description: Win ratio (e.g., 0.1 represents 10%)
              leadDays:
                type: string
                description: Number of days the trader has been leading
              traderInsts:
                type: array
                items:
                  type: string
                  description: List of contract IDs that the lead trader is managing
              pnl:
                type: string
                description: Profit and loss (P&L) in USDT for the last 90 days
              pnlRatio:
                type: string
                description: Profit and loss ratio over the last 90 days (e.g., 0.1 represents 10%)
              pnlRatios:
                type: array
                items:
                  type: object
                  properties:
                    beginTs:
                      type: string
                      description: Begin time of P&L ratio on that day (timestamp format)
                    pnlRatio:
                      type: string
                      description: P&L ratio for the day (e.g., 0.1 represents 10%)
      required:
        - dataVer
        - totalPage
        - ranks
    LeaderPnl:
      type: object
      properties:
        beginTs:
          type: string
          description: Begin time of P&L ratio for the week (timestamp format)
        pnl:
          type: string
          description: Profit and loss for that week in USDT
        pnlRatio:
          type: string
          description: P&L ratio for that week (e.g., 0.1 represents 10%)
      required:
        - beginTs
        - pnl
        - pnlRatio
    PublicStats:
      type: object
      properties:
        winRatio:
          type: string
          description: Win ratio (e.g., 0.1 represents 10%)
        profitDays:
          type: string
          description: Number of profit days
        lossDays:
          type: string
          description: Number of loss days
        curCopyTraderPnl:
          type: string
          description: Current copy trader PnL in USDT
        avgSubPosNotional:
          type: string
          description: Average lead position notional in USDT
        investAmt:
          type: string
          description: Investment amount in USDT
        ccy:
          type: string
          description: Margin currency
      required:
        - winRatio
        - profitDays
        - lossDays
        - curCopyTraderPnl
        - avgSubPosNotional
        - investAmt
        - ccy
    PrefStats:
      type: object
      properties:
        ratio:
          type: string
          description: Win ratio (e.g., 0.1 represents 10%)
        ccy:
          type: string
          description: Margin currency
    SubPosition:
      type: object
      properties:
        instId:
          type: string
          description: Instrument ID (e.g., BTC-USDT-SWAP)
        subPosId:
          type: string
          description: Lead position ID
        posSide:
          type: string
          enum:
            - long
            - short
            - net
          description: Position side (long, short, or net)
        mgnMode:
          type: string
          enum:
            - cross
            - isolated
          description: Margin mode (cross or isolated)
        lever:
          type: string
          description: Leverage
        openAvgPx:
          type: string
          description: Average open price
        openTime:
          type: string
          description: Open time (e.g., Unix timestamp)
        subPos:
          type: string
          description: Quantity of positions
        instType:
          type: string
          description: Instrument type
        margin:
          type: string
          description: Margin amount
        upl:
          type: string
          description: Unrealized profit and loss
        uplRatio:
          type: string
          description: Unrealized profit and loss ratio
        markPx:
          type: string
          description: Latest mark price (only applicable to contract)
        uniqueCode:
          type: string
          description: Lead trader unique code
        ccy:
          type: string
          description: Currency (e.g., USDT)
      required:
        - instId
        - subPosId
        - posSide
        - mgnMode
        - lever
        - openAvgPx
        - openTime
        - subPos
        - instType
        - margin
        - upl
        - uplRatio
        - markPx
        - uniqueCode
        - ccy
    SubPositionHistory:
      type: object
      properties:
        instId:
          type: string
          description: Instrument ID (e.g., BTC-USDT-SWAP)
        subPosId:
          type: string
          description: Lead position ID
        posSide:
          type: string
          enum:
            - long
            - short
            - net
          description: Position side (long, short, or net). Long positions have positive `subPos`, while short positions have negative `subPos`.
        mgnMode:
          type: string
          enum:
            - cross
            - isolated
          description: Margin mode (cross or isolated)
        lever:
          type: string
          description: Leverage applied to the position
        openAvgPx:
          type: string
          description: Average price at the time the position was opened
        openTime:
          type: string
          description: Time when the position was opened (e.g., Unix timestamp)
        subPos:
          type: string
          description: Quantity of positions (e.g., number of contracts or units)
        closeTime:
          type: string
          description: Time when the position was closed (e.g., Unix timestamp)
        closeAvgPx:
          type: string
          description: Average price at the time the position was closed
        pnl:
          type: string
          description: Profit and loss for the position
        pnlRatio:
          type: string
          description: Profit and loss ratio for the position
        instType:
          type: string
          description: Type of instrument (e.g., futures, swap, etc.)
        margin:
          type: string
          description: Margin allocated for the position
        ccy:
          type: string
          description: Currency used for margin (e.g., USDT)
        uniqueCode:
          type: string
          description: Unique code of the lead trader
      required:
        - instId
        - subPosId
        - posSide
        - mgnMode
        - lever
        - openAvgPx
        - openTime
        - subPos
        - closeTime
        - closeAvgPx
        - pnl
        - pnlRatio
        - instType
        - margin
        - ccy
        - uniqueCode
    CopyTraders:
      type: object
      properties:
        copyTotalPnl:
          type: string
          description: Total profit and loss from all copy traders
        ccy:
          type: string
          description: The currency name for profit and loss (e.g., USDT)
        copyTraderNumChg:
          type: string
          description: The number of copy traders changed in the last 7 days
        copyTraderNumChgRatio:
          type: string
          description: The ratio change in the number of copy traders in the last 7 days
        copyTraders:
          type: array
          description: List of copy traders' information
          items:
            type: object
            properties:
              beginCopyTime:
                type: string
                description: The time when copying began (Unix timestamp in milliseconds, e.g., 1597026383085)
              nickName:
                type: string
                description: The nick name of the copy trader
              portLink:
                type: string
                description: The portrait link of the copy trader
              pnl:
                type: string
                description: The profit and loss from the copy trader's trades
      required:
        - copyTotalPnl
        - ccy
        - copyTraderNumChg
        - copyTraderNumChgRatio
        - copyTraders
    LeaderRanks:
      type: object
      properties:
        dataVer:
          type: string
          description: Data version
        totalPage:
          type: string
          description: Total number of pages
        ranks:
          type: array
          items:
            type: object
            properties:
              chanType:
                type: string
                description: Channel type (e.g., OKX, ND)
              aum:
                type: string
                description: Assets under management
              copyState:
                type: string
                description: "Current copy state (0: non-copy, 1: copy)"
              maxCopyTraderNum:
                type: string
                description: Maximum number of copy traders
              copyTraderNum:
                type: string
                description: Current number of copy traders
              accCopyTraderNum:
                type: string
                description: Accumulated number of copy traders
              portLink:
                type: string
                description: Portrait link of the lead trader
              nickName:
                type: string
                description: Nickname of the lead trader
              ccy:
                type: string
                description: Margin currency (e.g., USDT, BTC)
              uniqueCode:
                type: string
                description: Lead trader unique code
              winRatio:
                type: string
                description: Win ratio, where 0.1 represents 10%
              leadDays:
                type: string
                description: Lead days (the number of days the trader has been leading)
              traderInsts:
                type: array
                items:
                  type: string
                  description: Contract list that the lead trader is leading
              pnl:
                type: string
                description: PnL (Profit and Loss) in USDT over the last 90 days
              pnlRatio:
                type: string
                description: PnL ratio over the last 90 days, where 0.1 represents 10%
              pnlRatios:
                type: array
                items:
                  type: object
                  properties:
                    beginTs:
                      type: string
                      description: Begin time of PnL ratio on that day (ISO 8601 format)
                    pnlRatio:
                      type: string
                      description: PnL ratio on that day, where 0.1 represents 10%
    Tickers:
      type: object
      properties:
        instType:
          type: string
          description: Instrument type
        instId:
          type: string
          description: Instrument ID
        last:
          type: string
          description: Last traded price
        lastSz:
          type: string
          description: Last traded size. 0 represents there is no trading volume
        askPx:
          type: string
          description: Best ask price
        askSz:
          type: string
          description: Best ask size
        bidPx:
          type: string
          description: Best bid price
        bidSz:
          type: string
          description: Best bid size
        open24h:
          type: string
          description: Open price in the past 24 hours
        high24h:
          type: string
          description: Highest price in the past 24 hours
        low24h:
          type: string
          description: Lowest price in the past 24 hours
        volCcy24h:
          type: string
          description: |
            24h trading volume, with a unit of currency.
            - For derivatives contracts: The value is the number of base currency.
            - For SPOT/MARGIN: The value is the quantity in quote currency.
        vol24h:
          type: string
          description: |
            24h trading volume, with a unit of contract.
            - For derivatives contracts: The value is the number of contracts.
            - For SPOT/MARGIN: The value is the quantity in base currency.
        sodUtc0:
          type: string
          description: Open price in the UTC 0 timezone
        sodUtc8:
          type: string
          description: Open price in the UTC 8 timezone
        ts:
          type: string
          description: Ticker data generation time, in Unix timestamp format (milliseconds)
    OrderBooks:
      type: object
      properties:
        asks:
          type: array
          description: A list of ask orders.
          items:
            type: array
            items:
              type: string
            description: An ask order represented as an array [price, size, extra, orderId].
            example:
              - "41006.8"
              - "0.60038921"
              - "0"
              - "1"
        bids:
          type: array
          description: A list of bid orders.
          items:
            type: array
            items:
              type: string
            description: A bid order represented as an array [price, size, extra, orderId].
            example:
              - "41006.3"
              - "0.30178218"
              - "0"
              - "2"
        ts:
          type: string
          description: Ticker data generation time, in Unix timestamp format (milliseconds).
          example: "1629966436396"
    Trades:
      type: object
      description: Trade details for a specific instrument.
      properties:
        instId:
          type: string
          description: Instrument ID.
          example: "BTC-USDT"
        tradeId:
          type: string
          description: Trade ID.
          example: "123456789"
        px:
          type: string
          description: Trade price.
          example: "42000.50"
        sz:
          type: string
          description: Trade quantity. For spot trading, the unit is the base currency.
          example: "0.5"
        side:
          type: string
          description: Trade side.
          enum:
            - buy
            - sell
          example: "buy"
        ts:
          type: string
          format: date-time
          description: Trade time in Unix timestamp format (milliseconds).
          example: "1597026383085"
    OptionTrade:
      type: object
      description: 24h trading volume and option trade information.
      properties:
        vol24h:
          type: string
          description: 24h trading volume, with a unit of contract.
          example: "1500"
        optType:
          type: string
          description: Option type.
          enum:
            - C
            - P
          example: "C"
        tradeInfo:
          type: array
          description: The list of trade data.
          items:
            $ref: "#/components/schemas/Trades"
    PublicOptionTrade:
      type: object
      description: Detailed information about a trade.
      properties:
        instId:
          type: string
          description: Instrument ID.
          example: "BTC-USDT"
        instFamily:
          type: string
          description: Instrument family.
          example: "BTC-Options"
        tradeId:
          type: string
          description: Trade ID.
          example: "123456789"
        px:
          type: string
          description: Trade price.
          example: "42000.50"
        sz:
          type: string
          description: Trade quantity.
          example: "0.5"
        side:
          type: string
          description: Trade side.
          enum:
            - buy
            - sell
          example: "buy"
        optType:
          type: string
          description: Option type.
          enum:
            - C
            - P
          example: "C"
        fillVol:
          type: string
          description: Implied volatility while trading, corresponding to the trade price.
          example: "0.25"
        fwdPx:
          type: string
          description: Forward price while trading.
          example: "42010.00"
        idxPx:
          type: string
          description: Index price while trading.
          example: "42005.00"
        markPx:
          type: string
          description: Mark price while trading.
          example: "42008.00"
        ts:
          type: string
          format: date-time
          description: Trade time in Unix timestamp format (milliseconds).
          example: "1597026383085"
    vol24:
      type: object
      properties:
        volUSD:
          type: string
        colCNY:
          type: string
        ts:
          type: string
    Auction:
      type: object
      properties:
        instId:
          type: string
          description: Instrument ID.
          example: "BTC-USDT"
        eqPx:
          type: string
          description: Equilibrium price.
          example: "42000.00"
        matchedSz:
          type: string
          description: Matched size for both buy and sell. The unit is in base currency.
          example: "10.5"
        unmatchedSz:
          type: string
          description: Unmatched size.
          example: "2.0"
        auctionEndTime:
          type: string
          format: date-time
          description: Call auction end time in Unix timestamp (milliseconds).
          example: "1629966436396"
        state:
          type: string
          description: Trading state of the symbol.
          enum:
            - call_auction
            - continuous_trading
          example: "call_auction"
        ts:
          type: string
          format: date-time
          description: Data generation time in Unix timestamp (milliseconds).
          example: "1629966436396"
    SpreadOrder:
      type: object
      properties:
        sprdId:
          type: string
          description: Spread ID, e.g., BTC-USDT_BTC-USD-SWAP.
          example: "BTC-USDT_BTC-USD-SWAP"
        clOrdId:
          type: string
          description: Client Order ID as assigned by the client. A combination of case-sensitive alphanumerics, all numbers, or all letters of up to 32 characters.
          example: "b15"
        tag:
          type: string
          description: Order tag. A combination of case-sensitive alphanumerics, all numbers, or all letters of up to 16 characters.
          example: "orderTag"
        side:
          type: string
          description: Order side.
          enum:
            - buy
            - sell
          example: "buy"
        ordType:
          type: string
          description: Order type.
          enum:
            - market
            - limit
            - post_only
            - ioc
          example: "limit"
        sz:
          type: string
          description: Quantity to buy or sell. The unit is USD for inverse spreads, and the corresponding baseCcy for linear and hybrid spreads.
          example: "100"
        px:
          type: string
          description: Order price. Only applicable to `limit`, `post_only`, `ioc`.
          example: "42000.00"
    AmendOrder:
      type: object
      properties:
        ordId:
          type: string
          description: Order ID. Either `ordId` or `clOrdId` is required. If both are passed, `ordId` will be used.
          example: "312269865356374016"
        clOrdId:
          type: string
          description: Client Order ID as assigned by the client. Either `ordId` or `clOrdId` is required.
          example: "b15"
        reqId:
          type: string
          description: Client Request ID as assigned by the client for order amendment. Helps identify the request in the response if provided.
          example: "amendRequest123"
        newSz:
          type: string
          description: New quantity after amendment. Either `newSz` or `newPx` is required. For partially-filled orders, this should include the amount already filled.
          example: "150"
        newPx:
          type: string
          description: New price after amendment. Either `newSz` or `newPx` is required.
          example: "42500.00"
      required:
        - ordId
        - clOrdId
        - newSz
        - newPx
    SpreadOrderInfo:
      type: object
      properties:
        sprdId:
          type: string
          description: Spread ID.
          example: "BTC-USDT_BTC-USD-SWAP"
        ordId:
          type: string
          description: Order ID.
          example: "312269865356374016"
        clOrdId:
          type: string
          description: Client Order ID as assigned by the client.
          example: "b15"
        tag:
          type: string
          description: Order tag.
          example: "strategy1"
        px:
          type: string
          description: Price.
          example: "41000.00"
        sz:
          type: string
          description: Quantity to buy or sell.
          example: "100"
        ordType:
          type: string
          description: Order type.
          enum: [market, limit, post_only, ioc]
          example: "limit"
        side:
          type: string
          description: Order side.
          enum: [buy, sell]
          example: "buy"
        fillSz:
          type: string
          description: Last fill quantity.
          example: "50"
        fillPx:
          type: string
          description: Last fill price.
          example: "41000.00"
        tradeId:
          type: string
          description: Last trade ID.
          example: "1629966436396"
        accFillSz:
          type: string
          description: Accumulated fill quantity.
          example: "50"
        pendingFillSz:
          type: string
          description: Live quantity.
          example: "50"
        pendingSettleSz:
          type: string
          description: Quantity pending settlement.
          example: "10"
        canceledSz:
          type: string
          description: Quantity canceled due to order cancellations or trade rejections.
          example: "40"
        avgPx:
          type: string
          description: Average filled price. If none is filled, it will return "0".
          example: "41000.00"
        state:
          type: string
          description: State of the order.
          enum: [canceled, live, partially_filled, filled]
          example: "partially_filled"
        cancelSource:
          type: string
          description: Source of the order cancellation.
          enum:
            - "0"
            - "1"
            - "14"
            - "15"
            - "20"
            - "31"
            - "32"
            - "34"
            - "35"
          example: "1"
        uTime:
          type: string
          description: Update time, Unix timestamp format in milliseconds.
          example: "1597026383085"
        cTime:
          type: string
          description: Creation time, Unix timestamp format in milliseconds.
          example: "1597026383085"
    SpreadTradeInfo:
      type: object
      properties:
        sprdId:
          type: string
          description: Spread ID
          example: "BTC-USDT_BTC-USD-SWAP"
        tradeId:
          type: string
          description: Trade ID
          example: "12345"
        ordId:
          type: string
          description: Order ID
          example: "67890"
        clOrdId:
          type: string
          description: Client Order ID as assigned by the client
          example: "clientOrder123"
        tag:
          type: string
          description: Order tag
          example: "orderTag"
        fillPx:
          type: string
          description: Filled price
          example: "41000.50"
        fillSz:
          type: string
          description: Filled quantity
          example: "0.5"
        side:
          type: string
          description: Order side
          enum:
            - buy
            - sell
          example: "buy"
        state:
          type: string
          description: Trade state
          enum:
            - filled
            - rejected
          example: "filled"
        execType:
          type: string
          description: Liquidity taker or maker
          enum:
            - T
            - M
          example: "T"
        ts:
          type: string
          format: int64
          description: Data generation time, Unix timestamp format in milliseconds
          example: "1597026383085"
        legs:
          type: array
          description: Legs of trade
          items:
            type: object
            properties:
              instId:
                type: string
                description: Instrument ID, e.g. BTC-USDT-SWAP
                example: "BTC-USDT-SWAP"
              px:
                type: string
                description: The price the leg executed
                example: "41000.50"
              sz:
                type: string
                description: The size of each leg
                example: "0.5"
              szCont:
                type: string
                description: Filled amount of the contract. Only applicable to contracts, return "" for spot.
                example: "1"
              side:
                type: string
                description: The direction of the leg
                enum:
                  - buy
                  - sell
                example: "sell"
              fee:
                type: string
                description: Fee. Negative number represents the user transaction fee charged by the platform. Positive number represents rebate.
                example: "-0.001"
              feeCcy:
                type: string
                description: Fee currency
                example: "USDT"
              tradeId:
                type: string
                description: Traded ID in the OKX orderbook
                example: "98765"
        code:
          type: string
          description: Error Code, the default is 0
          example: "0"
        msg:
          type: string
          description: Error Message, the default is ""
          example: ""
    SpreadTickers:
      type: object
      properties:
        sprdId:
          type: string
          description: Spread ID.
          example: "BTC-USDT_BTC-USD-SWAP"
        tradeId:
          type: string
          description: Trade ID.
          example: "1234567890"
        px:
          type: string
          description: Trade price.
          example: "41006.8"
        sz:
          type: string
          description: Trade quantity.
          example: "0.30178218"
        side:
          type: string
          description: Trade side of the taker.
          enum:
            - buy
            - sell
          example: "buy"
        ts:
          type: string
          format: date-time
          description: Trade time, Unix timestamp format in milliseconds.
          example: "1597026383085"
    SpreadCancel:
      type: object
      properties:
        triggerTime:
          type: string
          description: >
            The time the cancellation is triggered. 
            `triggerTime=0` means Cancel All After is disabled.
          example: "1597026383085"
        ts:
          type: string
          description: >
            The time the request is received, in Unix timestamp format in milliseconds.
          example: "1597026383085"
    PublicInstrument:
      type: object
      properties:
        instType:
          type: string
          description: |
            Instrument type. Valid values:
            - SPOT: Spot
            - MARGIN: Margin
            - SWAP: Perpetual Futures
            - FUTURES: Expiry Futures
            - OPTION: Option
        instId:
          type: string
          description: Instrument ID, e.g., BTC-USD-SWAP.
        uly:
          type: string
          description: |
            Underlying, e.g., BTC-USD.
            Only applicable to MARGIN/FUTURES/SWAP/OPTION.
        instFamily:
          type: string
          description: |
            Instrument family, e.g., BTC-USD.
            Only applicable to MARGIN/FUTURES/SWAP/OPTION.
        category:
          type: string
          description: |
            Currency category. Note: this parameter is already deprecated.
        baseCcy:
          type: string
          description: |
            Base currency, e.g., BTC in BTC-USDT.
            Only applicable to SPOT/MARGIN.
        quoteCcy:
          type: string
          description: |
            Quote currency, e.g., USDT in BTC-USDT.
            Only applicable to SPOT/MARGIN.
        settleCcy:
          type: string
          description: |
            Settlement and margin currency, e.g., BTC.
            Only applicable to FUTURES/SWAP/OPTION.
        ctVal:
          type: string
          description: |
            Contract value.
            Only applicable to FUTURES/SWAP/OPTION.
        ctMult:
          type: string
          description: |
            Contract multiplier.
            Only applicable to FUTURES/SWAP/OPTION.
        ctValCcy:
          type: string
          description: |
            Contract value currency.
            Only applicable to FUTURES/SWAP/OPTION.
        optType:
          type: string
          description: |
            Option type:
            - C: Call
            - P: Put
            Only applicable to OPTION.
        stk:
          type: string
          description: |
            Strike price.
            Only applicable to OPTION.
        listTime:
          type: string
          description: Listing time in Unix timestamp format in milliseconds, e.g., 1597026383085.
        auctionEndTime:
          type: string
          description: |
            The end time of call auction in Unix timestamp format in milliseconds, e.g., 1597026383085.
            Only applicable to SPOT listed through call auctions, returns "" in other cases.
        expTime:
          type: string
          description: |
            Expiry time.
            Applicable to SPOT/MARGIN/FUTURES/SWAP/OPTION.
            For FUTURES/OPTION, it is the natural delivery/exercise time.
            For SPOT/MARGIN/FUTURES/SWAP manual offline, it is the instrument offline time.
        lever:
          type: string
          description: Maximum leverage. Not applicable to SPOT, OPTION.
        tickSz:
          type: string
          description: |
            Tick size, e.g., 0.0001.
            For Option, it is the minimum tick size among tick bands. Use "Get option tick bands" to retrieve tick bands.
        lotSz:
          type: string
          description: |
            Lot size.
            - For derivatives contracts, the value is the number of contracts.
            - For SPOT/MARGIN, the value is the quantity in base currency.
        minSz:
          type: string
          description: |
            Minimum order size.
            - For derivatives contracts, the value is the number of contracts.
            - For SPOT/MARGIN, the value is the quantity in base currency.
        ctType:
          type: string
          description: |
            Contract type. Valid values:
            - linear: Linear contract
            - inverse: Inverse contract
            Only applicable to FUTURES/SWAP.
        alias:
          type: string
          description: |
            Alias. Valid values:
            - this_week
            - next_week
            - this_month
            - next_month
            - quarter
            - next_quarter
            Only applicable to FUTURES. Not recommended for use; use `expTime` to determine delivery time.
        state:
          type: string
          description: |
            Instrument status. Valid values:
            - live
            - suspend
            - preopen: Preopen state before Futures and Options contracts are live.
            - test: Test pairs, cannot be traded.
        ruleType:
          type: string
          description: |
            Trading rule types. Valid values:
            - normal: Normal trading
            - pre_market: Pre-market trading.
        maxLmtSz:
          type: string
          description: |
            The maximum order quantity of a single limit order.
            - For derivatives contracts, the value is the number of contracts.
            - For SPOT/MARGIN, the value is the quantity in base currency.
        maxMktSz:
          type: string
          description: |
            The maximum order quantity of a single market order.
            - For derivatives contracts, the value is the number of contracts.
            - For SPOT/MARGIN, the value is the quantity in USDT.
        maxLmtAmt:
          type: string
          description: Maximum USD amount for a single limit order.
        maxMktAmt:
          type: string
          description: |
            Maximum USD amount for a single market order.
            Only applicable to SPOT/MARGIN.
        maxTwapSz:
          type: string
          description: |
            The maximum order quantity of a single TWAP order.
            - For derivatives contracts, the value is the number of contracts.
            - For SPOT/MARGIN, the value is the quantity in base currency.
            The minimum order quantity of a single TWAP order is `minSz * 2`.
        maxIcebergSz:
          type: string
          description: |
            The maximum order quantity of a single iceberg order.
            - For derivatives contracts, the value is the number of contracts.
            - For SPOT/MARGIN, the value is the quantity in base currency.
        maxTriggerSz:
          type: string
          description: |
            The maximum order quantity of a single trigger order.
            - For derivatives contracts, the value is the number of contracts.
            - For SPOT/MARGIN, the value is the quantity in base currency.
        maxStopSz:
          type: string
          description: |
            The maximum order quantity of a single stop market order.
            - For derivatives contracts, the value is the number of contracts.
            - For SPOT/MARGIN, the value is the quantity in USDT.
    ExercisesHistory:
      type: object
      properties:
        ts:
          type: string
          description: |
            Delivery/exercise time in Unix timestamp format in milliseconds, e.g., 1597026383085.
        details:
          type: object
          description: Delivery/exercise details.
          properties:
            insId:
              type: string
              description: Delivery/exercise contract ID.
            px:
              type: string
              description: Delivery/exercise price.
            type:
              type: string
              description: |
                Type of the delivery/exercise. Valid values:
                - delivery
                - exercised
                - expired_otm: Out of the money.
    OpenInterest:
      type: object
      properties:
        instType:
          type: string
          description: Instrument type.
        instId:
          type: string
          description: Instrument ID.
        oi:
          type: string
          description: Open interest in the number of contracts.
        oiCcy:
          type: string
          description: Open interest in the number of coins.
        oiUsd:
          type: string
          description: Open interest in the number of USD.
        ts:
          type: string
          description: |
            Data return time in Unix timestamp format in milliseconds, e.g., 1597026383085.
    FundingRate:
      type: object
      properties:
        instType:
          type: string
          description: Instrument type, e.g., SWAP.
        instId:
          type: string
          description: Instrument ID, e.g., BTC-USD-SWAP.
        method:
          type: string
          description: "Funding rate mechanism. Valid values are:<br> - `current_period`<br>- `next_period`"
        fundingRate:
          type: string
          description: Current funding rate.
        nextFundingRate:
          type: string
          description: |
            Forecasted funding rate for the next period. The value will be "" if the method is `current_period`.
        fundingTime:
          type: string
          description: Settlement time, Unix timestamp format in milliseconds, e.g., 1597026383085.
        nextFundingTime:
          type: string
          description: Forecasted funding time for the next period, Unix timestamp format in milliseconds, e.g., 1597026383085.
        minFundingRate:
          type: string
          description: The lower limit of the predicted funding rate of the next cycle.
        maxFundingRate:
          type: string
          description: The upper limit of the predicted funding rate of the next cycle.
        settState:
          type: string
          description: "Settlement state of funding rate. Valid values are:<br>- `processing`<br>- `settled`"
        settFundingRate:
          type: string
          description: |
            If `settState` = `processing`, it is the funding rate used for the current settlement cycle.
            If `settState` = `settled`, it is the funding rate used for the previous settlement cycle.
        premium:
          type: string
          description: Premium between the mid-price of the perpetual market and the index price.
        ts:
          type: string
          description: Data return time, Unix timestamp format in milliseconds, e.g., 1597026383085.
    PriceLimit:
      type: object
      properties:
        instType:
          type: string
          description: Instrument type.
        instId:
          type: string
          description: Instrument ID, e.g., BTC-USDT-SWAP.
        buyLmt:
          type: string
          description: Highest buy limit. Returns an empty string ("") when `enabled` is false.
        sellLmt:
          type: string
          description: Lowest sell limit. Returns an empty string ("") when `enabled` is false.
        ts:
          type: string
          format: int64
          description: Data return time, Unix timestamp format in milliseconds, e.g., 1597026383085.
        enabled:
          type: boolean
          description: Whether the price limit is effective. `true` means the price limit is effective, `false` means it is not effective.
    OptSummary:
      type: object
      properties:
        instType:
          type: string
          description: >
            Instrument type. Fixed value: OPTION.
        instId:
          type: string
          description: >
            Instrument ID, e.g., BTC-USD-200103-5500-C.
        uly:
          type: string
          description: >
            Underlying asset for the option.
        delta:
          type: string
          description: >
            Sensitivity of option price to underlying price.
        gamma:
          type: string
          description: >
            Sensitivity of delta to underlying price.
        vega:
          type: string
          description: >
            Sensitivity of option price to implied volatility.
        theta:
          type: string
          description: >
            Sensitivity of option price to remaining maturity.
        deltaBS:
          type: string
          description: >
            Sensitivity of option price to underlying price in Black-Scholes mode.
        gammaBS:
          type: string
          description: >
            Sensitivity of delta to underlying price in Black-Scholes mode.
        vegaBS:
          type: string
          description: >
            Sensitivity of option price to implied volatility in Black-Scholes mode.
        thetaBS:
          type: string
          description: >
            Sensitivity of option price to remaining maturity in Black-Scholes mode.
        lever:
          type: string
          description: >
            Leverage of the option.
        markVol:
          type: string
          description: >
            Mark volatility.
        bidVol:
          type: string
          description: >
            Bid volatility.
        askVol:
          type: string
          description: >
            Ask volatility.
        realVol:
          type: string
          description: >
            Realized volatility (currently not used).
        volLv:
          type: string
          description: >
            Implied volatility of at-the-money options.
        fwdPx:
          type: string
          description: >
            Forward price.
        ts:
          type: string
          format: int64
          description: >
            Data update time in Unix timestamp format (milliseconds), e.g., 1597026383085.
    EstimatedPrice:
      type: object
      properties:
        instType:
          type: string
          description: >
            Instrument type. Allowed values:
            - FUTURES
            - OPTION
        instId:
          type: string
          description: >
            Instrument ID, e.g., BTC-USDT-SWAP.
        settlePx:
          type: string
          description: >
            Estimated delivery price.
        ts:
          type: string
          format: int64
          description: >
            Data return time in Unix timestamp format (milliseconds), e.g., 1597026383085.
    DiscountRate:
      type: object
      properties:
        ccy:
          type: string
          description: Currency.
        amt:
          type: string
          description: Interest-free quota.
        discountLv:
          type: string
          deprecated: true
          description: >
            Discount rate level. (Deprecated)
        minDiscountRate:
          type: string
          description: >
            Minimum discount rate when it exceeds the maximum amount of the last tier.
        details:
          type: array
          description: New discount details.
          items:
            type: object
            properties:
              discountRate:
                type: string
                description: Discount rate.
              maxAmt:
                type: string
                description: >
                  Tier - upper bound. The unit is the currency like BTC. "" means positive infinity.
              minAmt:
                type: string
                description: >
                  Tier - lower bound. The unit is the currency like BTC. The minimum is 0.
              tier:
                type: string
                description: Tiers.
              liqPenaltyRate:
                type: string
                description: Liquidation penalty rate.
              disCcyEq:
                type: string
                description: >
                  Discount equity in currency for quick calculation if your equity is the maxAmt.
    MarkPrice:
      type: object
      properties:
        instType:
          type: string
          description: Instrument type.
          enum:
            - MARGIN
            - SWAP
            - FUTURES
            - OPTION
        instId:
          type: string
          description: Instrument ID, e.g. BTC-USD-200214.
        markPx:
          type: string
          description: Mark price.
        ts:
          type: string
          description: "Data return time, Unix timestamp format in milliseconds, e.g. 1597026383085."
    TiersData:
      type: object
      properties:
        uly:
          type: string
          description: Underlying (Applicable to FUTURES/SWAP/OPTION)
          nullable: true
        instFamily:
          type: string
          description: Instrument family (Applicable to FUTURES/SWAP/OPTION)
          nullable: true
        instId:
          type: string
          description: Instrument ID
          nullable: true
        tier:
          type: string
          description: Tiers
          nullable: true
        minSz:
          type: string
          description: |
            The minimum borrowing amount or position of this gear, applicable to margin/options/perpetual/delivery.
            The minimum position is 0 by default. It will return the minimum borrowing amount when `ccy` takes effect.
          nullable: true
        maxSz:
          type: string
          description: |
            The maximum borrowing amount or number of positions held in this position, applicable to margin/options/perpetual/delivery.
            It will return the maximum borrowing amount when `ccy` takes effect.
          nullable: true
        mmr:
          type: string
          description: Maintenance margin requirement rate
          nullable: true
        imr:
          type: string
          description: Initial margin requirement rate
          nullable: true
        maxLever:
          type: string
          description: Maximum available leverage
          nullable: true
        optMgnFactor:
          type: string
          description: Option Margin Coefficient (only applicable to options)
          nullable: true
        quoteMaxLoan:
          type: string
          description: |
            Quote currency borrowing amount (only applicable to leverage and the case when `instId` takes effect)
          nullable: true
        baseMaxLoan:
          type: string
          description: |
            Base currency borrowing amount (only applicable to leverage and the case when `instId` takes effect)
          nullable: true
    LoanData:
      type: object
      properties:
        basic:
          type: array
          items:
            type: object
            properties:
              ccy:
                type: string
                description: Currency
              rate:
                type: string
                description: Daily interest rate
              quota:
                type: string
                description: Maximum borrow quota
        vip:
          type: array
          items:
            type: object
            properties:
              level:
                type: string
                description: VIP Level (e.g. VIP1)
              loanQuotaCoef:
                type: string
                description: Loan quota coefficient. Loan quota = quota * level
              irDiscount:
                type: string
                description: Interest rate discount (Deprecated)
        regular:
          type: array
          items:
            type: object
            properties:
              level:
                type: string
                description: Regular user level (e.g. Lv1)
              loanQuotaCoef:
                type: string
                description: Loan quota coefficient. Loan quota = quota * level
              irDiscount:
                type: string
                description: Interest rate discount (Deprecated)
    InsuranceFund:
      type: object
      properties:
        total:
          type: string
          description: The total balance of the insurance fund, in USD.
        instFamily:
          type: string
          description: Instrument family. Applicable to FUTURES/SWAP/OPTION.
        instType:
          type: string
          description: Instrument type. Can be one of MARGIN, SWAP, FUTURES, OPTION.
        details:
          type: array
          items:
            type: object
            properties:
              balance:
                type: string
                description: The balance of the insurance fund.
              amt:
                type: string
                description: The change in the balance of the insurance fund. Applicable when type is liquidation_balance_deposit, bankruptcy_loss, or platform_revenue.
              ccy:
                type: string
                description: The currency of the insurance fund.
              type:
                type: string
                description: The type of insurance fund.
              maxBal:
                type: string
                description: Maximum insurance fund balance in the past eight hours. Only applicable when type is adl.
              maxBalTs:
                type: string
                description: Timestamp when insurance fund balance reached maximum in the past eight hours. Unix timestamp format in milliseconds. Only applicable when type is adl.
              decRate:
                type: string
                description: Real-time insurance fund decline rate (compare balance and maxBal). Only applicable when type is adl.
              adlType:
                type: string
                description: "ADL related events. Possible values are:<br>- rate_adl_start: ADL begins due to high insurance fund decline rate<br>- bal_adl_start: ADL begins due to insurance fund balance falling<br>- pos_adl_start: ADL begins due to the volume of liquidation orders falling to a certain level (only applicable to premarket symbols)<br>- adl_end: ADL ends<br>only applicable when type is adl."
              ts:
                type: string
                description: The update timestamp of the insurance fund. Unix timestamp format in milliseconds.
      required:
        - total
        - instFamily
        - instType
        - details
    ConversionCoin:
      type: object
      properties:
        type:
          type: string
          description: "Convert type"
          enum:
            - "1" # Convert currency to contract
            - "2" # Convert contract to currency
          default: "1"
        instId:
          type: string
          description: "Instrument ID. Only applicable to FUTURES/SWAP/OPTION."
        px:
          type: string
          description: "Order price. Required for crypto-margined contracts, and when converting between USDT and contract."
          nullable: true
        sz:
          type: string
          description: "Quantity to buy or sell. It is the quantity of contract while converting currency to contract, and the quantity of currency while converting contract to currency."
        unit:
          type: string
          description: "The unit of currency. Applicable to USDⓈ-margined contracts from FUTURES/SWAP."
          enum:
            - "coin"
            - "usds" # USDT/USDC
          nullable: true
      required:
        - type
        - instId
        - sz
    TickBand:
      type: object
      properties:
        instType:
          type: string
          description: "Instrument type"
        instFamily:
          type: string
          description: "Instrument family"
        tickBand:
          type: string
          description: "Tick size band"
        minPx:
          type: string
          description: "Minimum price while placing an order"
        maxPx:
          type: string
          description: "Maximum price while placing an order"
        tickSz:
          type: string
          description: "Tick size, e.g. 0.0001"
      required:
        - instType
        - instFamily
        - tickBand
        - minPx
        - maxPx
        - tickSz
    PremiumHistory:
      type: object
      properties:
        instId:
          type: string
          description: "Instrument ID, e.g. BTC-USDT-SWAP"
        premium:
          type: string
          description: "Premium between the mid price of perps market and the index price"
        ts:
          type: string
          description: "Data generation time, Unix timestamp format in milliseconds, e.g. 1597026383085"
    IndexTickers:
      type: object
      properties:
        instId:
          type: string
          description: "Index"
        idxPx:
          type: string
          description: "Latest index price"
        high24h:
          type: string
          description: "Highest price in the past 24 hours"
        low24h:
          type: string
          description: "Lowest price in the past 24 hours"
        open24h:
          type: string
          description: "Open price in the past 24 hours"
        sodUtc0:
          type: string
          description: "Open price in UTC 0"
        sodUtc8:
          type: string
          description: "Open price in UTC 8"
        ts:
          type: string
          description: "Index price update time, Unix timestamp format in milliseconds, e.g. 1597026383085"
    Oracle:
      type: object
      properties:
        messages:
          type: string
          description: "ABI-encoded values [kind, timestamp, key, value], where kind equals 'prices', timestamp is the time when price was obtained, key is the asset ticker (e.g. btc) and value is the asset price."
        prices:
          type: string
          description: "Readable asset prices"
        signatures:
          type: string
          description: "Ethereum-compatible ECDSA signatures for each message"
        timestamp:
          type: string
          description: "Time of latest datapoint, Unix timestamp, e.g. 1597026387"
    IndexComponents:
      type: object
      properties:
        index:
          type: string
          description: "Index"
        last:
          type: string
          description: "Latest Index Price"
        ts:
          type: string
          description: "Data generation time, Unix timestamp format in milliseconds, e.g. 1597026383085"
        components:
          type: array
          items:
            type: object
            properties:
              exch:
                type: string
                description: "Name of Exchange"
              symbol:
                type: string
                description: "Name of Exchange Trading Pairs"
              symPx:
                type: string
                description: "Price of Exchange Trading Pairs"
              wgt:
                type: string
                description: "Weights"
              cnvPx:
                type: string
                description: "Price converted to index"
    EconomicCalender:
      type: object
      properties:
        calendarId:
          type: string
          description: "Calendar ID"
        date:
          type: string
          format: int64
          description: "Estimated release time of the value of actual field, in Unix timestamp format (milliseconds)."
        region:
          type: string
          description: "Country, region, or entity."
        category:
          type: string
          description: "Category name."
        event:
          type: string
          description: "Event name."
        refDate:
          type: string
          description: "Date for which the datapoint refers to."
        actual:
          type: string
          description: "The actual value of this event."
        previous:
          type: string
          description: "Latest actual value of the previous period. The value will be revised if revision is applicable."
        forecast:
          type: string
          description: "Average forecast among a representative group of economists."
        dateSpan:
          type: string
          enum:
            - "0"
            - "1"
          description: "Indicates the time of the event: 0 for known, 1 for unknown exact time."
        importance:
          type: string
          enum:
            - "1"
            - "2"
            - "3"
          description: "Level of importance: 1 (low), 2 (medium), 3 (high)."
        uTime:
          type: string
          format: int64
          description: "Update time of this record, in Unix timestamp format (milliseconds)."
        prevInitial:
          type: string
          description: "The initial value of the previous period. Only applicable when revision happens."
        ccy:
          type: string
          description: "Currency of the data."
        unit:
          type: string
          description: "Unit of the data."
      required:
        - calendarId
        - date
        - region
        - category
        - event
        - refDate
        - actual
        - previous
        - forecast
        - dateSpan
        - importance
        - uTime
        - ccy
        - unit
    SupportCoin:
      type: object
      properties:
        contract:
          type: array
          items:
            type: string
          description: "Currencies supported by derivatives trading data."
        option:
          type: array
          items:
            type: string
          description: "Currencies supported by option trading data."
        spot:
          type: array
          items:
            type: string
          description: "Currencies supported by spot trading data."
      required:
        - contract
        - option
        - spot
    ContractHistory:
      type: object
      properties:
        ts:
          type: string
          description: "Timestamp, millisecond format of Unix timestamp, e.g. 1597026383085"
        oi:
          type: string
          description: "Open interest in the unit of contracts"
        oiCcy:
          type: string
          description: "Open interest in the unit of crypto"
        oiUsd:
          type: string
          description: "Open interest in the unit of USD"
      required:
        - ts
        - oi
    TakerVol:
      type: object
      properties:
        ts:
          type: string
          description: "Timestamp in Unix timestamp format."
        sellVol:
          type: string
          description: "Sell volume."
        buyVol:
          type: string
          description: "Buy volume."
      required:
        - ts
        - sellVol
        - buyVol
    VolumStrike:
      type: object
      properties:
        ts:
          type: string
          description: "Timestamp"
        strike:
          type: string
          description: "Strike price"
        callOI:
          type: string
          description: "Total call open interest (coin as the unit)"
        putOI:
          type: string
          description: "Total put open interest (coin as the unit)"
        callVol:
          type: string
          description: "Total call trading volume (coin as the unit)"
        putVol:
          type: string
          description: "Total put trading volume (coin as the unit)"
      required:
        - ts
        - strike
        - callOI
        - putOI
        - callVol
        - putVol
    CurrunciesData:
      type: object
      properties:
        ccy:
          type: string
          description: "Currency, e.g. BTC"
        name:
          type: string
          description: "Name of currency"
        logoLink:
          type: string
          description: "The logo link of currency"
        chain:
          type: string
          description: "Chain name, e.g. USDT-ERC20, USDT-TRC20"
        canDep:
          type: boolean
          description: "The availability to deposit from chain"
        canWd:
          type: boolean
          description: "The availability to withdraw to chain"
        canInternal:
          type: boolean
          description: "The availability to internal transfer"
        minDep:
          type: string
          description: "The minimum deposit amount of currency in a single transaction"
        minWd:
          type: string
          description: "The minimum on-chain withdrawal amount of currency in a single transaction"
        maxWd:
          type: string
          description: "The maximum amount of currency on-chain withdrawal in a single transaction"
        wdTickSz:
          type: string
          description: "The withdrawal precision, indicating the number of digits after the decimal point"
        wdQuota:
          type: string
          description: "The withdrawal limit in the past 24 hours (in USD)"
        usedWdQuota:
          type: string
          description: "The amount of currency withdrawal used in the past 24 hours (in USD)"
        fee:
          type: string
          description: "The fixed withdrawal fee"
        minFee:
          type: string
          description: "The minimum withdrawal fee for normal address (Deprecated)"
        maxFee:
          type: string
          description: "The maximum withdrawal fee for normal address (Deprecated)"
        minFeeForCtAddr:
          type: string
          description: "The minimum withdrawal fee for contract address (Deprecated)"
        maxFeeForCtAddr:
          type: string
          description: "The maximum withdrawal fee for contract address (Deprecated)"
        burningFeeRate:
          type: string
          description: "Burning fee rate, e.g. '0.05' represents '5%'"
        mainNet:
          type: boolean
          description: "If current chain is main net"
        needTag:
          type: boolean
          description: "Whether tag/memo information is required for withdrawal (e.g. EOS will return true)"
        minDepArrivalConfirm:
          type: string
          description: "The minimum number of blockchain confirmations to acknowledge fund deposit"
        minWdUnlockConfirm:
          type: string
          description: "The minimum number of blockchain confirmations required for withdrawal of a deposit"
        depQuotaFixed:
          type: string
          description: "The fixed deposit limit, in USD"
        usedDepQuotaFixed:
          type: string
          description: "The used amount of fixed deposit quota, in USD"
        depQuoteDailyLayer2:
          type: string
          description: "The layer2 network daily deposit limit"
      required:
        - ccy
        - name
        - chain
    BalanceData:
      type: object
      properties:
        ccy:
          type: string
          description: "Currency, e.g., BTC"
        bal:
          type: string
          description: "Total balance"
        frozenBal:
          type: string
          description: "Frozen balance"
        availBal:
          type: string
          description: "Available balance"
      required:
        - ccy
        - bal
        - availBal
    AccountValuation:
      type: object
      properties:
        totalBal:
          type: string
          description: "Valuation of total account assets"
        ts:
          type: string
          description: "Unix timestamp format in milliseconds, e.g., 1597026383085"
        details:
          type: object
          properties:
            funding:
              type: string
              description: "Funding account"
            trading:
              type: string
              description: "Trading account"
            classic:
              type: string
              description: "[Deprecated] Classic account"
            earn:
              type: string
              description: "Earn account"
          additionalProperties: false
      required:
        - totalBal
        - ts
        - details
    TransferRequest:
      type: object
      properties:
        type:
          type: string
          description: "Transfer type"
          enum:
            - "0" # transfer within account
            - "1" # master account to sub-account (Only applicable to API Key from master account)
            - "2" # sub-account to master account (Only applicable to API Key from master account)
            - "3" # sub-account to master account (Only applicable to APIKey from sub-account)
            - "4" # sub-account to sub-account (Only applicable to APIKey from sub-account)
          default: "0"
        ccy:
          type: string
          description: "Transfer currency, e.g. USDT"
        amt:
          type: string
          description: "Amount to be transferred"
        from:
          type: string
          description: "The remitting account"
          enum:
            - "6" # Funding account
            - "18" # Trading account
        to:
          type: string
          description: "The beneficiary account"
          enum:
            - "6" # Funding account
            - "18" # Trading account
        subAcct:
          type: string
          description: "Name of the sub-account. Required for types 1, 2, and 4"
          nullable: true
        loanTrans:
          type: boolean
          description: "Whether or not borrowed coins can be transferred out under Spot mode/Multi-currency margin/Portfolio margin"
          default: false
        omitPosRisk:
          type: string
          description: "Ignore position risk. Default is false. Applicable to Portfolio margin"
          default: "false"
        clientId:
          type: string
          description: "Client-supplied ID. A combination of case-sensitive alphanumerics, all numbers, or all letters of up to 32 characters."
          maxLength: 32
          nullable: true
      required:
        - type
        - ccy
        - amt
        - from
        - to
    TransferResponse:
      type: object
      properties:
        transId:
          type: string
          description: "Transfer ID"
        clientId:
          type: string
          description: "Client-supplied ID"
          nullable: true
        ccy:
          type: string
          description: "Currency"
        from:
          type: string
          description: "The remitting account"
          enum:
            - "6" # Funding account
            - "18" # Trading account
        amt:
          type: string
          description: "Transfer amount"
        to:
          type: string
          description: "The beneficiary account"
          enum:
            - "6" # Funding account
            - "18" # Trading account
      required:
        - transId
        - ccy
        - from
        - amt
        - to
    TransferStateResponse:
      type: object
      properties:
        transId:
          type: string
          description: "Transfer ID"
        clientId:
          type: string
          description: "Client-supplied ID"
          maxLength: 32
          pattern: "^[a-zA-Z0-9]+$"
        ccy:
          type: string
          description: "Currency to be transferred, e.g., USDT"
        amt:
          type: string
          description: "Amount to be transferred"
        type:
          type: string
          description: "Transfer type"
          enum:
            - "0" # Transfer within account
            - "1" # Master account to sub-account
            - "2" # Sub-account to master account
            - "3" # Sub-account to master account (sub-account API)
            - "4" # Sub-account to sub-account (within same master account)
          default: "0"
        from:
          type: string
          description: "The remitting account"
          enum:
            - "6" # Funding account
            - "18" # Trading account
        to:
          type: string
          description: "The beneficiary account"
          enum:
            - "6" # Funding account
            - "18" # Trading account
        subAcct:
          type: string
          description: "Name of the sub-account (Required for transfer types 1, 2, 3, and 4)"
        instId:
          type: string
          description: "Deprecated field"
        toInstId:
          type: string
          description: "Deprecated field"
        state:
          type: string
          description: "Transfer state"
          enum:
            - "success"
            - "pending"
            - "failed"
          default: "pending"
      required:
        - ccy
        - amt
        - type
        - from
        - to
    AssetBills:
      type: object
      properties:
        billId:
          type: string
          description: Bill ID
        ccy:
          type: string
          description: Account balance currency
        clientId:
          type: string
          description: Client-supplied ID for transfer or withdrawal
        balChg:
          type: string
          description: Change in balance at the account level
        bal:
          type: string
          description: Balance at the account level
        type:
          type: string
          description: Bill type
        ts:
          type: string
          format: int64
          description: >
            Creation time in Unix timestamp format (milliseconds),
            e.g., 1597026383085
    Deposit:
      type: object
      properties:
        addr:
          type: string
          description: Deposit address
        tag:
          type: string
          nullable: true
          description: >
            Deposit tag (will not be returned if the currency does not require a tag for deposit)
        memo:
          type: string
          nullable: true
          description: >
            Deposit memo (will not be returned if the currency does not require a memo for deposit)
        pmtId:
          type: string
          nullable: true
          description: >
            Deposit payment ID (will not be returned if the currency does not require a payment_id for deposit)
        addrEx:
          type: object
          nullable: true
          additionalProperties:
            type: string
          description: >
            Deposit address attachment (will not be returned if the currency does not require this). 
            Example: For TONCOIN, the attached tag name is 'comment', e.g., {'comment':'123456'}
        ccy:
          type: string
          description: Currency, e.g., BTC
        chain:
          type: string
          description: Chain name, e.g., USDT-ERC20, USDT-TRC20
        to:
          type: string
          enum:
            - "6"
            - "18"
          description: >
            The beneficiary account.
            6: Funding account
            18: Trading account
            Note: Some users (e.g., Brazil) only support deposits to the trading account.
        verifiedName:
          type: string
          nullable: true
          description: Verified name (for recipient)
        selected:
          type: boolean
          description: Indicates if the current deposit address is selected by the website page
        ctAddr:
          type: string
          description: Last 6 digits of the contract address
    DepositHistory:
      type: object
      properties:
        ccy:
          type: string
          description: Currency, e.g., BTC
        chain:
          type: string
          description: Chain name, e.g., USDT-ERC20, USDT-TRC20
        amt:
          type: string
          description: Deposit amount
        from:
          type: string
          description: >
            Deposit account. If the deposit comes from an internal transfer, this field displays the account information of the internal transfer initiator, which can be a mobile phone number, email address, account name, and will return an empty string ("") in other cases.
        areaCodeFrom:
          type: string
          description: If `from` is a phone number, this parameter returns the area code of the phone number.
        to:
          type: string
          description: >
            Deposit address. If the deposit comes from the on-chain, this field displays the on-chain address, and will return an empty string ("") in other cases.
        txId:
          type: string
          description: Hash record of the deposit.
        ts:
          type: string
          format: int64
          description: >
            The timestamp that the deposit record is created, Unix timestamp format in milliseconds, e.g., 1655251200000.
        state:
          type: string
          description: >
            Status of deposit:
            - `0`: Waiting for confirmation  
            - `1`: Deposit credited  
            - `2`: Deposit successful  
            - `8`: Pending due to temporary deposit suspension on this cryptocurrency  
            - `11`: Match the address blacklist  
            - `12`: Account or deposit is frozen  
            - `13`: Sub-account deposit interception  
            - `14`: KYC limit
          enum:
            - "0"
            - "1"
            - "2"
            - "8"
            - "11"
            - "12"
            - "13"
            - "14"
        depId:
          type: string
          description: Deposit ID.
        fromWdId:
          type: string
          description: >
            Internal transfer initiator's withdrawal ID. If the deposit comes from an internal transfer, this field displays the withdrawal ID of the internal transfer initiator, and will return an empty string ("") in other cases.
        actualDepBlkConfirm:
          type: string
          description: The actual amount of blockchain confirmed in a single deposit.
      required:
        - ccy
        - chain
        - amt
        - ts
        - state
        - depId
    WithdrawalRequest:
      type: object
      properties:
        ccy:
          type: string
          description: >
            Currency, e.g., USDT.
        amt:
          type: string
          description: >
            Withdrawal amount. Withdrawal fee is not included in this amount. Ensure sufficient transaction fees are reserved.  
            For internal transfer, the transaction fee is always 0.
        dest:
          type: string
          description: >
            Withdrawal method:  
            - `3`: internal transfer  
            - `4`: on-chain withdrawal
          enum:
            - "3"
            - "4"
        toAddr:
          type: string
          description: >
            The recipient address/account.  
            - If `dest` is `4`, some cryptocurrency addresses are formatted as `address:tag`, e.g., `ARDOR-7JF3-8F2E-QUWZ-CAN7F:123456`.  
            - If `dest` is `3`, `toAddr` should be a recipient address such as an email, phone number, or login account name (account name is only for sub-accounts).
        chain:
          type: string
          description: >
            Chain name.  
            - For currencies with multiple chains (e.g., USDT: USDT-ERC20, USDT-TRC20), specify the chain.  
            - If omitted, defaults to the main chain or the unique withdrawal chain for non-tradable assets.
          nullable: true
        areaCode:
          type: string
          description: >
            Area code for the phone number, e.g., `86`.  
            Required if `toAddr` is a phone number and `dest` is `3`.
          nullable: true
        rcvrInfo:
          type: object
          description: >
            Recipient information, required for specific entity users for on-chain or lightning withdrawals.
          properties:
            walletType:
              type: string
              description: >
                Wallet type:  
                - `exchange`: Withdraw to exchange wallet  
                - `private`: Withdraw to private wallet  
                For `exchange`, additional recipient information is required.
              enum:
                - "exchange"
                - "private"
            exchId:
              type: string
              description: >
                Exchange ID. Query supported exchanges through the "Get exchange list" endpoint.  
                If the exchange is not listed, use `0`.  
                Required if `walletType` is `exchange`.
              nullable: true
            rcvrFirstName:
              type: string
              description: >
                Receiver's first name, e.g., Bruce.  
                Required if `walletType` is `exchange`.
              nullable: true
            rcvrLastName:
              type: string
              description: >
                Receiver's last name, e.g., Wayne.  
                Required if `walletType` is `exchange`.
              nullable: true
            rcvrCountry:
              type: string
              description: >
                Recipient's country, e.g., United States.  
                Use an English country name or a two-letter ISO 3166-1 code.  
                Required if `walletType` is `exchange`.
              nullable: true
            rcvrCountrySubDivision:
              type: string
              description: >
                State/Province of the recipient, e.g., California.  
                Required if `walletType` is `exchange`.
              nullable: true
            rcvrTownName:
              type: string
              description: >
                The town/city where the recipient is located, e.g., San Jose.  
                Required if `walletType` is `exchange`.
              nullable: true
            rcvrStreetName:
              type: string
              description: >
                Recipient's street address, e.g., Clementi Avenue 1.  
                Required if `walletType` is `exchange`.
              nullable: true
        clientId:
          type: string
          description: >
            Client-supplied ID. A combination of case-sensitive alphanumerics, all numbers, or all letters of up to 32 characters.
          nullable: true
      required:
        - ccy
        - amt
        - dest
        - toAddr
    WithdrawalResponse:
      type: object
      properties:
        ccy:
          type: string
          description: >
            Currency, e.g., USDT.
        chain:
          type: string
          description: >
            Chain name, e.g., USDT-ERC20, USDT-TRC20.
        amt:
          type: string
          description: >
            Withdrawal amount.
        wdId:
          type: string
          description: >
            Withdrawal ID.
        clientId:
          type: string
          description: >
            Client-supplied ID. A combination of case-sensitive alphanumerics, all numbers, or all letters of up to 32 characters.
    DepositWithdraw:
      type: object
      properties:
        estCompleteTime:
          type: string
          description: >
            Estimated complete time (timezone UTC+8). The format is MM/dd/yyyy, h:mm:ss AM/PM.
            This is only an approximate estimated time, for reference only.
        state:
          type: string
          description: >
            The detailed stage and status of the deposit/withdrawal.
            The message before the colon represents the stage, and the message after the colon represents the ongoing status.
        txId:
          type: string
          description: >
            Hash record on-chain. For withdrawal, if the txId has already been generated, it will return the value.
            Otherwise, it will return "".
        wdId:
          type: string
          description: >
            Withdrawal ID. When retrieving deposit status, wdId returns blank "".
    ExchangeList:
      type: object
      properties:
        exchName:
          type: string
          description: "The name of the exchange, e.g., 1xbet."
        exchId:
          type: string
          description: "The unique identifier for the exchange, e.g., did:ethr:0xfeb4f99829a9acdf52979abee87e83addf22a7e1."
    Statements:
      type: object
      properties:
        fileHref:
          type: string
          description: "The URL or path to the download file."
        ts:
          type: integer
          description: "The timestamp when the download link was generated. Format is Unix timestamp in milliseconds."
        state:
          type: string
          enum:
            - "finished"
            - "ongoing"
          description: "The current status of the download link. Possible values are 'finished' or 'ongoing'."
    CurrencyPair:
      type: object
      properties:
        instId:
          type: string
          description: "Currency pair, e.g., BTC-USDT"
        baseCcy:
          type: string
          description: "Base currency, e.g., BTC in BTC-USDT"
        baseCcyMax:
          type: string
          description: "Maximum amount of base currency"
        baseCcyMin:
          type: string
          description: "Minimum amount of base currency"
        quoteCcy:
          type: string
          description: "Quote currency, e.g., USDT in BTC-USDT"
        quoteCcyMax:
          type: string
          description: "Maximum amount of quote currency"
        quoteCcyMin:
          type: string
          description: "Minimum amount of quote currency"
      required:
        - instId
        - baseCcy
        - quoteCcy
    EstimationRequest:
      type: object
      properties:
        baseCcy:
          type: string
          description: "Base currency, e.g., BTC in BTC-USDT"
        quoteCcy:
          type: string
          description: "Quote currency, e.g., USDT in BTC-USDT"
        side:
          type: string
          enum: [buy, sell]
          description: "Trade side based on baseCcy"
        rfqSz:
          type: string
          description: "RFQ amount"
        rfqSzCcy:
          type: string
          description: "RFQ currency"
        clQReqId:
          type: string
          description: "Client Order ID as assigned by the client"
          maxLength: 32
        tag:
          type: string
          description: "Order tag. Applicable to broker user schema only."
      required:
        - baseCcy
        - quoteCcy
        - side
        - rfqSz
        - rfqSzCcy
    EstimationResponse:
      type: object
      properties:
        quoteTime:
          type: string
          description: "Quotation generation time, Unix timestamp format in milliseconds"
        ttlMs:
          type: string
          description: "Validity period of quotation in milliseconds"
        clQReqId:
          type: string
          description: "Client Order ID as assigned by the client"
          maxLength: 32
        quoteId:
          type: string
          description: "Quote ID"
        baseCcy:
          type: string
          description: "Base currency, e.g., BTC in BTC-USDT"
        quoteCcy:
          type: string
          description: "Quote currency, e.g., USDT in BTC-USDT"
        side:
          type: string
          enum: [buy, sell]
          description: "Trade side based on baseCcy"
        origRfqSz:
          type: string
          description: "Original RFQ amount"
        rfqSz:
          type: string
          description: "Real RFQ amount"
        rfqSzCcy:
          type: string
          description: "RFQ currency"
        cnvtPx:
          type: string
          description: "Convert price based on quote currency"
        baseSz:
          type: string
          description: "Convert amount of base currency"
        quoteSz:
          type: string
          description: "Convert amount of quote currency"
      required:
        - quoteTime
        - ttlMs
        - clQReqId
        - quoteId
        - baseCcy
        - quoteCcy
        - side
        - origRfqSz
        - rfqSz
        - rfqSzCcy
        - cnvtPx
        - baseSz
        - quoteSz
    TradeConversionRequest:
      type: object
      properties:
        quoteId:
          type: string
          description: "Quote ID"
        baseCcy:
          type: string
          description: "Base currency, e.g., BTC in BTC-USDT"
        quoteCcy:
          type: string
          description: "Quote currency, e.g., USDT in BTC-USDT"
        side:
          type: string
          enum: [buy, sell]
          description: "Trade side based on baseCcy"
        sz:
          type: string
          description: "Quote amount, should not exceed RFQ amount"
        szCcy:
          type: string
          description: "Quote currency"
        clTReqId:
          type: string
          description: "Client Order ID as assigned by the client"
          maxLength: 32
        tag:
          type: string
          description: "Order tag (applicable to broker user)"
      required:
        - quoteId
        - baseCcy
        - quoteCcy
        - side
        - sz
        - szCcy
    TradeConversionResponse:
      type: object
      properties:
        tradeId:
          type: string
          description: "Trade ID"
        quoteId:
          type: string
          description: "Quote ID"
        clTReqId:
          type: string
          description: "Client Order ID as assigned by the client"
          maxLength: 32
        state:
          type: string
          enum: [fullyFilled, rejected]
          description: "Trade state. 'fullyFilled' indicates success, 'rejected' indicates failure."
        instId:
          type: string
          description: "Currency pair, e.g., BTC-USDT"
        baseCcy:
          type: string
          description: "Base currency, e.g., BTC in BTC-USDT"
        quoteCcy:
          type: string
          description: "Quote currency, e.g., USDT in BTC-USDT"
        side:
          type: string
          enum: [buy, sell]
          description: "Trade side based on baseCcy"
        fillPx:
          type: string
          description: "Filled price based on quote currency"
        fillBaseSz:
          type: string
          description: "Filled amount for base currency"
        fillQuoteSz:
          type: string
          description: "Filled amount for quote currency"
        ts:
          type: string
          description: "Trade time in Unix timestamp format in milliseconds (e.g., 1597026383085)"
      required:
        - tradeId
        - quoteId
        - state
        - instId
        - baseCcy
        - quoteCcy
        - side
        - fillPx
        - fillBaseSz
        - fillQuoteSz
        - ts
    TradeHistoryResponse:
      type: object
      properties:
        tradeId:
          type: string
          description: "Trade ID"
        clTReqId:
          type: string
          description: "Client Order ID as assigned by the client"
        state:
          type: string
          enum: ["fullyFilled", "rejected"]
          description: "Trade state. Possible values: 'fullyFilled' (success), 'rejected' (failed)"
        instId:
          type: string
          description: "Currency pair, e.g. BTC-USDT"
        baseCcy:
          type: string
          description: "Base currency, e.g. BTC in BTC-USDT"
        quoteCcy:
          type: string
          description: "Quote currency, e.g. USDT in BTC-USDT"
        side:
          type: string
          enum: ["buy", "sell"]
          description: "Trade side based on baseCcy. Possible values: 'buy', 'sell'"
        fillPx:
          type: string
          description: "Filled price based on quote currency"
        fillBaseSz:
          type: string
          description: "Filled amount for base currency"
        fillQuoteSz:
          type: string
          description: "Filled amount for quote currency"
        ts:
          type: string
          description: "Convert trade time, Unix timestamp format in milliseconds (e.g., 1597026383085)"
    PaymentMethodsResponse:
      type: array
      items:
        type: object
        properties:
          acctNum:
            type: string
            description: "The account number, which can be an IBAN or other bank account number."
          bankCode:
            type: string
            description: "The Swift code / BIC / bank code associated with the account."
          bankName:
            type: string
            description: "The name of the bank associated with the account."
          ccy:
            type: string
            description: "The currency code."
          dailyLimit:
            type: string
            description: "The daily transaction limit."
          dailyLimitRemaining:
            type: string
            description: "The remaining daily transaction limit."
          feeRate:
            type: string
            description: "The fee rate for each deposit, expressed as a percentage. For example: 0.02 (2 percent fee for each transaction)."
          lifetimeLimit:
            type: string
            description: "The lifetime transaction limit. Returns the configured value, or an empty string if not configured."
          limits:
            type: object
            properties:
              maxAmt:
                type: string
                description: "The maximum amount allowed per transaction."
              minAmt:
                type: string
                description: "The minimum amount allowed per transaction."
              minFee:
                type: string
                description: "The minimum fee for each deposit."
              monthlyLimit:
                type: string
                description: "The monthly transaction limit."
              monthlyLimitRemaining:
                type: string
                description: "The remaining monthly transaction limit."
              paymentAccId:
                type: string
                description: "The account ID for withdrawal."
          paymentMethod:
            type: string
            description: "The payment method associated with the currency. For example: SEPA, TR_BANKS, PIX."
          recipientName:
            type: string
            description: "The name of the recipient."
          state:
            type: string
            description: "The state of the account (e.g., active)."
          weeklyLimit:
            type: string
            description: "The weekly transaction limit."
          weeklyLimitRemaining:
            type: string
            description: "The remaining weekly transaction limit."
    WithdrawalPaymentMethodsResponse:
      type: object
      properties:
        accounts:
          type: array
          items:
            type: object
            properties:
              acctNum:
                type: string
                description: "The account number, which can be an IBAN or other bank account number."
              bankCode:
                type: string
                description: "The Swift code / BIC / bank code associated with the account."
              bankName:
                type: string
                description: "The name of the bank associated with the account."
              ccy:
                type: string
                description: "The currency code."
              dailyLimit:
                type: string
                description: "The daily transaction limit."
              dailyLimitRemaining:
                type: string
                description: "The remaining daily transaction limit."
              feeRate:
                type: string
                description: "The fee rate for each deposit, expressed as a percentage (e.g., 0.02 for 2 percent fee for each transaction)."
              lifetimeLimit:
                type: string
                description: "The lifetime transaction limit. Returns an empty string if not configured."
              limits:
                type: object
                properties:
                  maxAmt:
                    type: string
                    description: "The maximum amount allowed per transaction."
                  minAmt:
                    type: string
                    description: "The minimum amount allowed per transaction."
                  minFee:
                    type: string
                    description: "The minimum fee for each deposit."
                  monthlyLimit:
                    type: string
                    description: "The monthly transaction limit."
                  monthlyLimitRemaining:
                    type: string
                    description: "The remaining monthly transaction limit."
              paymentAcctId:
                type: string
                description: "The account ID for withdrawal."
              paymentMethod:
                type: string
                description: "The payment method associated with the currency (e.g., SEPA, TR_BANKS, PIX)."
              recipientName:
                type: string
                description: "The name of the recipient."
              state:
                type: string
                description: "The state of the account (e.g., active)."
              weeklyLimit:
                type: string
                description: "The weekly transaction limit."
              weeklyLimitRemaining:
                type: string
                description: "The remaining weekly transaction limit."
    CreateWithdrawal:
      type: object
      properties:
        paymentAcctId:
          type: string
          description: "Payment account id to withdraw to, retrieved from get withdrawal payment methods API."
        ccy:
          type: string
          description: "Currency for withdrawal, must match currency allowed for paymentMethod."
        amt:
          type: string
          description: "Requested withdrawal amount before fees. Has to be less than or equal to 2 decimal points double."
        paymentMethod:
          type: string
          enum: ["TR_BANKS", "SEPA", "PIX"]
          description: "Payment method to use for withdrawal."
        clientId:
          type: string
          description: "Client-supplied ID, a combination of case-sensitive alphanumerics, all numbers, or all letters of up to 32 characters."
          pattern: "^[a-zA-Z0-9]{1,32}$" # Ensures the clientId is alphanumeric and up to 32 characters
      required:
        - paymentAcctId
        - ccy
        - amt
        - paymentMethod
        - clientId
    CreateWithdrawalResponse:
      type: object
      properties:
        amt:
          type: string
          description: "The requested amount for the transaction."
        cTime:
          type: string
          format: date-time
          description: "The creation time of the transaction in ISO 8601 format."
        clientId:
          type: string
          description: "The client ID associated with the transaction."
        ccy:
          type: string
          description: "The currency of the transaction."
        fee:
          type: string
          description: "The transaction fee."
        ordId:
          type: string
          description: "The unique order ID for the transaction."
        paymentAcctId:
          type: string
          description: "The ID of the payment account used."
        paymentMethod:
          type: string
          enum: ["SEPA", "TR_BANKS", "PIX"]
          description: "The payment method used for the transaction."
        state:
          type: string
          description: "The state of the transaction."
        uTime:
          type: string
          format: date-time
          description: "The update time of the transaction in ISO 8601 format."
      required:
        - amt
        - cTime
        - clientId
        - ccy
        - fee
        - ordId
        - paymentAcctId
        - paymentMethod
        - state
        - uTime
    WithdrawalHistory:
      type: object
      properties:
        amt:
          type: string
          description: "Final amount of the transaction (after fees)."

        cTime:
          type: string
          format: date-time
          description: "Creation time of the transaction in Unix timestamp format (milliseconds)."

        clientId:
          type: string
          description: "Client ID associated with the transaction. A combination of case-sensitive alphanumerics, all numbers, or all letters of up to 32 characters."

        ccy:
          type: string
          description: "Currency of the transaction. ISO-4217 3-character currency code (e.g., USD, EUR)."

        fee:
          type: string
          description: "Transaction fee associated with the transaction."

        ordId:
          type: string
          description: "Unique order ID for this transaction."

        paymentAcctId:
          type: string
          description: "ID of the payment account used for the transaction."

        paymentMethod:
          type: string
          description: "Payment method type used for the transaction. Possible values: SEPA, TR_BANKS, PIX."

        state:
          type: string
          description: "State of the transaction. Possible values: completed, failed, pending, canceled, inqueue."

        uTime:
          type: string
          format: date-time
          description: "Update time of the transaction in Unix timestamp format (milliseconds)."
    Transaction:
      type: object
      properties:
        amt:
          type: string
          description: "Amount of the transaction"
        ccy:
          type: string
          description: "The currency of the transaction (e.g., USD, EUR)"
        cTime:
          type: string
          description: "Creation time of the transaction"
          format: date-time
        clientId:
          type: string
          description: "The original request ID associated with the transaction. If it's a deposit, it's most likely an empty string."
        fee:
          type: string
          description: "Transaction fee"
        ordId:
          type: string
          description: "The unique order ID"
        paymentAcctId:
          type: string
          description: "The ID of the payment account used"
        paymentMethod:
          type: string
          description: "Payment method type used for the transaction (e.g., SEPA, TR_BANKS, PIX)"
        state:
          type: string
          description: "The state of the transaction (e.g., completed, failed, pending, canceled, inqueue, processing)"
        uTime:
          type: string
          description: "Update time of the transaction"
          format: date-time
      required:
        - amt
        - ccy
        - cTime
        - clientId
        - fee
        - ordId
        - paymentAcctId
        - paymentMethod
        - state
        - uTime
    SubAccount:
      type: object
      properties:
        type:
          type: string
          description: |
            Sub-account type:
            - `1`: Standard sub-account
            - `2`: Managed trading sub-account
            - `5`: Custody trading sub-account - Copper
            - `9`: Managed trading sub-account - Copper
            - `12`: Custody trading sub-account - Komainu

        enable:
          type: boolean
          description: |
            Sub-account status:
            - `true`: Normal
            - `false`: Frozen (global)
        subAcct:
          type: string
          description: Sub-account name
        uid:
          type: string
          description: Sub-account UID
        label:
          type: string
          description: Sub-account note
        mobile:
          type: string
          description: Mobile number linked with the sub-account
        gAuth:
          type: boolean
          description: |
            Google Authenticator login authentication:
            - `true`: On
            - `false`: Off
        frozenFunc:
          type: array
          items:
            type: string
            enum:
              - trading
              - convert
              - transfer
              - withdrawal
              - deposit
              - flexible_loan
          description: A list of frozen functions for the sub-account
        canTransOut:
          type: boolean
          description: |
            Whether the sub-account has the right to transfer out:
            - `true`: Can transfer out
            - `false`: Cannot transfer out
        ts:
          type: string
          format: int64
          description: |
            Sub-account creation time, Unix timestamp in milliseconds.
            Example: `1597026383085`
    ApiKeyReset:
      type: object
      required:
        - subAcct
        - apiKey
      properties:
        subAcct:
          type: string
          description: The name of the sub-account
        apiKey:
          type: string
          description: The API Key for the sub-account
        label:
          type: string
          nullable: true
          description: |
            Sub-account API Key label. If provided, the label will be reset.
        perm:
          type: string
          nullable: true
          description: |
            Sub-account API Key permissions:
            - `read_only`: Read
            - `trade`: Trade
            Separate with commas if more than one.
            The permissions will be reset if this is provided.
          example: read_only,trade
        ip:
          type: string
          nullable: true
          description: |
            Sub-account API Key linked IP addresses:
            - Separate with commas for multiple IPs (up to 20 supported).
            - If set to an empty string `""`, no IP addresses will be linked to the API Key.
          example: 192.168.1.1,192.168.1.2
    SubAccountKey:
      type: object
      properties:
        subAcct:
          type: string
          description: The name of the sub-account
        apiKey:
          type: string
          description: The public API Key for the sub-account
        label:
          type: string
          description: The label associated with the sub-account API Key
        perm:
          type: string
          description: |
            Permissions granted to the sub-account API Key:
            - `read_only`: Read
            - `trade`: Trade
            Permissions are separated by commas if there are multiple.
          example: read_only,trade
        ip:
          type: string
          description: |
            IP addresses linked to the sub-account API Key.
            Multiple addresses are separated by commas.
          example: 192.168.0.1,192.168.0.2
        ts:
          type: string
          format: date-time
          description: Creation time of the API Key in Unix timestamp format (in milliseconds).
          example: 1597026383085
    SubAccountDetails:
      type: object
      properties:
        uTime:
          type: string
          format: date-time
          description: The latest time to get account information, Unix timestamp in milliseconds.
          example: 1597026383085
        totalEq:
          type: string
          description: Total amount of equity in USD.
        isoEq:
          type: string
          description: |
            Isolated margin equity in USD. Applicable to Spot and futures mode/Multi-currency margin/Portfolio margin.
        adjEq:
          type: string
          description: |
            Adjusted/effective equity in USD. Used for multi-currency margin/portfolio margin, considering market risk adjustments.
        ordFroz:
          type: string
          description: Margin frozen for pending cross orders in USD.
        imr:
          type: string
          description: Initial margin requirement in USD for cross-margin mode.
        mmr:
          type: string
          description: Maintenance margin requirement in USD for cross-margin mode.
        borrowFroz:
          type: string
          description: |
            Potential borrowing IMR of the account in USD. Applicable only to Multi-currency margin/Portfolio margin.
        mgnRatio:
          type: string
          description: Margin ratio in USD.
        notionalUsd:
          type: string
          description: Notional value of positions in USD.
        upl:
          type: string
          description: Unrealized profit and loss at the account level in USD.
        details:
          type: array
          description: Detailed asset information in all currencies.
          items:
            $ref: "#/components/schemas/CurrencyDetails"

    CurrencyDetails:
      type: object
      properties:
        ccy:
          type: string
          description: Currency.
        eq:
          type: string
          description: Equity of the currency.
        cashBal:
          type: string
          description: Cash balance.
        uTime:
          type: string
          format: date-time
          description: Update time, Unix timestamp in milliseconds.
          example: 1597026383085
        isoEq:
          type: string
          description: Isolated margin equity of the currency.
        fixedBal:
          type: string
          description: Frozen balance for Dip Sniper and Peak Sniper.
        availEq:
          type: string
          description: Available equity for trading on margin or futures.
        disEq:
          type: string
          description: Discounted equity of the currency in USD.
        availBal:
          type: string
          description: Available balance of the currency.
        frozenBal:
          type: string
          description: Frozen balance of the currency.
        ordFrozen:
          type: string
          description: Margin frozen for open orders.
        liab:
          type: string
          description: Liabilities of the currency.
        upl:
          type: string
          description: Unrealized profit and loss of the currency.
        uplLiab:
          type: string
          description: Liabilities due to unrealized loss of the currency.
        crossLiab:
          type: string
          description: Cross liabilities of the currency.
        isoLiab:
          type: string
          description: Isolated liabilities of the currency.
        mgnRatio:
          type: string
          description: Cross margin ratio of the currency.
        imr:
          type: string
          description: Initial margin requirement at the currency level.
        mmr:
          type: string
          description: Maintenance margin requirement at the currency level.
        interest:
          type: string
          description: Interest of the currency.
        twap:
          type: string
          description: System's forced repayment (TWAP) indicator.
        maxLoan:
          type: string
          description: Maximum loan amount of the currency.
        eqUsd:
          type: string
          description: Equity in USD of the currency.
        borrowFroz:
          type: string
          description: Potential borrowing IMR of the currency in USD.
        notionalLever:
          type: string
          description: Leverage of the currency.
        spotIsoBal:
          type: string
          description: SPOT isolated balance, applicable to copy trading.
        smtSyncEq:
          type: string
          description: Smart sync equity, applicable to copy trading.
        spotCopyTradingEq:
          type: string
          description: Spot smart sync equity, applicable to copy trading.
        spotBal:
          type: string
          description: Spot balance in the unit of the currency.
        openAvgPx:
          type: array
          items:
            type: string
          description: Spot average cost price in USD.
        accAvgPx:
          type: array
          items:
            type: string
          description: Spot accumulated cost price in USD.
        spotUpl:
          type: string
          description: Spot unrealized profit and loss in USD.
        spotUplRatio:
          type: string
          description: Spot unrealized profit and loss ratio.
        totalPnl:
          type: string
          description: Spot accumulated profit and loss in USD.
        totalPnlRatio:
          type: string
          description: Spot accumulated profit and loss ratio
    AccountBalance:
      type: object
      properties:
        ccy:
          type: string
          description: Currency (e.g., BTC, ETH)
        bal:
          type: string
          description: Total balance in the specified currency
        frozenBal:
          type: string
          description: Frozen balance, unable to be used for trading or withdrawal
        availBal:
          type: string
          description: Available balance that can be used for trading or withdrawal
    MaxWithdrawal:
      type: object
      properties:
        ccy:
          type: string
          description: Currency (e.g., BTC, ETH)
        maxWd:
          type: string
          description: Max withdrawal amount (excluding borrowed assets under Multi-currency margin)
        maxWdEx:
          type: string
          description: Max withdrawal amount (including borrowed assets under Multi-currency margin)
        spotOffsetMaxWd:
          type: string
          description: Max withdrawal under Spot-Derivatives risk offset mode (excluding borrowed assets under Portfolio margin)
        spotOffsetMaxWdEx:
          type: string
          description: Max withdrawal under Spot-Derivatives risk offset mode (including borrowed assets under Portfolio margin)
    SubAccountBills:
      type: object
      properties:
        billId:
          type: string
          description: Bill ID
        ccy:
          type: string
          description: Transfer currency
        amt:
          type: string
          description: Transfer amount
        type:
          type: string
          description: Bill type
        subAcct:
          type: string
          description: Sub-account name
        ts:
          type: string
          description: Bill ID creation time, Unix timestamp in millisecond format, e.g. 1597026383085
          pattern: '^\d{13}$' # Regex for Unix timestamp in milliseconds
      required:
        - billId
        - ccy
        - amt
        - type
        - ts
    ManagedBills:
      type: object
      properties:
        billId:
          type: string
          description: Bill ID
        ccy:
          type: string
          description: Transfer currency
        amt:
          type: string
          description: Transfer amount
        type:
          type: string
          description: Bill type
        subAcct:
          type: string
          description: Sub-account name
        subUid:
          type: string
          description: Sub-account UID
        ts:
          type: string
          description: Bill ID creation time, Unix timestamp in millisecond format, e.g. 1597026383085
          pattern: '^\d{13}$' # Regex for Unix timestamp in milliseconds
      required:
        - billId
        - ccy
        - amt
        - type
        - subAcct
        - subUid
        - ts
    Transfer:
      type: object
      properties:
        ccy:
          type: string
          description: Currency
        amt:
          type: string
          description: Transfer amount
        from:
          type: string
          description: Account type of transfer from sub-account
          enum: ["6", "18"] # 6: Funding Account, 18: Trading Account
        to:
          type: string
          description: Account type of transfer to sub-account
          enum: ["6", "18"] # 6: Funding Account, 18: Trading Account
        fromSubAccount:
          type: string
          description: Sub-account name of the account that transfers funds out
        toSubAccount:
          type: string
          description: Sub-account name of the account that transfers funds in
        loanTrans:
          type: boolean
          description: Whether or not borrowed coins can be transferred out under Multi-currency margin/Portfolio margin
          default: false
        omitPosRisk:
          type: string
          description: Ignore position risk (Applicable to Portfolio margin schema)
          enum: ["true", "false"]
          default: "false"
      required:
        - ccy
        - amt
        - from
        - to
        - fromSubAccount
        - toSubAccount
    SubAccountTransferRights:
      type: object
      properties:
        subAcct:
          type: string
          description: Name of the sub-account(s). Single sub-account or multiple sub-accounts (no more than 20), separated by commas.
        canTransOut:
          type: boolean
          description: Whether the sub-account has the right to transfer out. The default is true.
          default: true
      required:
        - subAcct
