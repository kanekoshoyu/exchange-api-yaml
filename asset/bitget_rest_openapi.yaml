openapi: 3.0.0
info:
  title: Bitget API 
  version: 1.0.0
  description: |
    Welcome to Bitget Developer document!
    
servers:
  - url: https://api.bitget.com/api/v2
    description: Main REST API
  - url: https://capi.bitget.com
    description: Old REST API
tags:
  - name: Spot Trading-Market
  - name: Spot Trading-Trade
  - name: Spot Trading-Triggers
  - name: Spot Trading-Account
  - name: Future Trading-Market
  - name: Future Trading-Account
  - name: Future Trading-Position
  - name: Future Trading-Triggers
  
paths:
  /public/coin:
    get:
      tags: 
       -  Spot Trading-Market
      summary: Get Coin Info
      description: 'Frequency limit: 3 times/1s (IP).Get spot coin information,supporting both individual and full queries.'
      parameters:
        - in: query
          name: coin
          required: false
          schema:
            type: string
            example: "coin name e.g; btc,if left blank will get all coin's info"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/CoinInfo"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /public/symbol:
    get:
      tags: 
       -  Spot Trading-Market
      summary: Get Symbols Info
      description: 'Frequency limit: 20 times/1s (IP).Get spot trading pair information,supporting both individual and full queries'
      parameters:
        - in: query
          name: symbol
          required: false
          schema:
            type: string
            example: "symbol name e.g; BTCUSDT,if left blank will get all symbol's info"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/SymbolInfo"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/market/vip-fee-rate:
    get:
      tags: 
       -  Spot Trading-Market
      summary: Get VIP Fee Rate
      description: 'Frequency limit: 10 times/1s (IP)'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/VIPFeeInfo"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"        
  /spot/market/tickers:
    get:
      tags: 
       -  Spot Trading-Market
      summary: Get Tickers Info
      description: 'Frequency limit: 20 times/1s (IP).Get Ticker Information,Supports both single and batch queries'
      parameters:
        - in: query
          name: symbol
          required: false
          schema:
            type: string
            example: "symbol name e.g; BTCUSDT,if left blank will get all symbol's info"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/TickerInfo"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/market/merge-depth:
    get:
      tags: 
       -  Spot Trading-Market
      summary: Get Merge Depth Info
      description: 'Frequency limit: 20 times/1s (IP)'
      parameters:
        - name: symbol
          in: query
          required: true
          schema:
            type: string
          description: Trading pair, e.g., "BTCUSDT"
          example: "BTCUSDT"
        
        - name: precision
          in: query
          required: false
          schema:
            type: string
            enum: ["scale0", "scale1", "scale2", "scale3"]
          description: |
            Price precision for cumulative depth. Options:
            - `scale0`: No merge (default)
            - `scale1`: Quotation accuracy at 10
            - `scale2`: Quotation accuracy at 100 (if available)
            - `scale3`: Quotation accuracy at 1000 (if available)
            If requested precision is unavailable for the trading pair, returns the highest available precision.
          example: "scale1"
        
        - name: limit
          in: query
          required: false
          schema:
            type: string
            enum: ["1", "5", "15", "50", "max"]
          description: |
            Fixed depth limit. Options:
            - 1, 5, 15, 50, max (default: 100).
            Returns available depth if less than the specified limit. "max" returns maximum depth for the trading pair.
          example: "50"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/MergeDepth"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/market/orderbook:
    get:
      tags: 
       -  Spot Trading-Market
      summary: Get OrderBook Depth
      description: 'Frequency limit: 20 times/1s (IP)'
      parameters:
        - name: symbol
          in: query
          required: true
          schema:
            type: string
          description: Trading pair, e.g., "BTCUSDT"
          example: "BTCUSDT"
        
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum: ["step0","step1","step2","step3","step4","step5"]
        - name: limit
          in: query
          required: false
          schema:
            type: string
          description: |
            Number of queries. (default: 150).
          example: "150"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderBook"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/market/candles:
    get:
      tags: 
       -  Spot Trading-Market
      summary: Get Candlestick Data
      description: 'Frequency limit: 20 times/1s (IP)'
      parameters:
        - name: symbol
          in: query
          required: true
          schema:
            type: string
          description: Trading pair, e.g., "BTCUSDT"
          example: "BTCUSDT"
        
        - name: granularity
          in: query
          required: true
          schema:
            type: string
            enum:
              - 1min
              - 5min
              - 15min
              - 30min
              - 1h
              - 4h
              - 6h
              - 12h
              - 1day
              - 3day
              - 1week
              - 1M
              - 6Hutc
              - 12Hutc
              - 1Dutc
              - 3Dutc
              - 1Wutc
              - 1Mutc
          description: |
            Time interval of charts. Options include:
            - Minute intervals: 1min, 5min, 15min, 30min
            - Hour intervals: 1h, 4h, 6h, 12h
            - Day intervals: 1day, 3day
            - Week: 1week
            - Month: 1M
            - Hour in UTC: 6Hutc, 12Hutc
            - Day in UTC: 1Dutc, 3Dutc
            - Week in UTC: 1Wutc
            - Month in UTC: 1Mutc
          example: "1h"
        
        - name: startTime
          in: query
          required: false
          schema:
            type: string
            format: int64
          description: The starting timestamp for chart data in Unix milliseconds, e.g., 1690196141868
          example: "1690196141868"
        
        - name: endTime
          in: query
          required: false
          schema:
            type: string
            format: int64
          description: The ending timestamp for chart data in Unix milliseconds, e.g., 1690196141868
          example: "1690196141868"
        
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
          description: Number of queries to retrieve, with a maximum of 1000.
          example: 500
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/Candles"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/market/history-candles:
    get:
      tags: 
       -  Spot Trading-Market
      summary: Get Candlestick Data
      description: 'Frequency limit: 20 times/1s (IP)'
      parameters:
        - name: symbol
          in: query
          required: true
          schema:
            type: string
          description: Trading pair, e.g., "BTCUSDT"
          example: "BTCUSDT"
        
        - name: granularity
          in: query
          required: true
          schema:
            type: string
            enum:
              - 1min
              - 5min
              - 15min
              - 30min
              - 1h
              - 4h
              - 6h
              - 12h
              - 1day
              - 3day
              - 1week
              - 1M
              - 6Hutc
              - 12Hutc
              - 1Dutc
              - 3Dutc
              - 1Wutc
              - 1Mutc
          description: |
            Time interval of charts. Options include:
            - Minute intervals: 1min, 5min, 15min, 30min
            - Hour intervals: 1h, 4h, 6h, 12h
            - Day intervals: 1day, 3day
            - Week: 1week
            - Month: 1M
            - Hour in UTC: 6Hutc, 12Hutc
            - Day in UTC: 1Dutc, 3Dutc
            - Week in UTC: 1Wutc
            - Month in UTC: 1Mutc
          example: "1h"
        
        - name: startTime
          in: query
          required: false
          schema:
            type: string
            format: int64
          description: The starting timestamp for chart data in Unix milliseconds, e.g., 1690196141868
          example: "1690196141868"
        
        - name: endTime
          in: query
          required: false
          schema:
            type: string
            format: int64
          description: The ending timestamp for chart data in Unix milliseconds, e.g., 1690196141868
          example: "1690196141868"
        
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
          description: Number of queries to retrieve, with a maximum of 1000.
          example: 500
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/Candles"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/market/fills:
    get:
      tags: 
       -  Spot Trading-Market
      summary: Get Recent Trades
      description: 'Frequency limit: 10 times/1s (IP)'
      parameters:
        - name: symbol
          in: query
          required: true
          schema:
            type: string
          description: Trading pair, e.g., "BTCUSDT"
          example: "BTCUSDT"
        
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 100
          description: Number of queries to retrieve, with a maximum of 500.
          example: 500
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/Trade"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/market/fills-history:
    get:
      tags: 
       -  Spot Trading-Market
      summary: Get Market Trades
      description: 'Rate limit: 10 req/sec/IP'
      parameters:
        - name: symbol
          in: query
          required: true
          schema:
            type: string
          description: Trading pair name, e.g., "BTCUSDT"
          example: "BTCUSDT"
        
        - name: limit
          in: query
          required: false
          schema:
            type: string
          description: Number of data records to return. Default is 500, maximum is 1000.
          example: "500"
        
        - name: idLessThan
          in: query
          required: false
          schema:
            type: string
          description: Order ID to return records less than the specified 'tradeId'.
          example: "1"
        
        - name: startTime
          in: query
          required: false
          schema:
            type: string
            format: int64
          description: Start time for the trade records in Unix milliseconds, e.g., 1690196141868. Should be within 7 days of the current time.
          example: "1690196141868"
        
        - name: endTime
          in: query
          required: false
          schema:
            type: string
            format: int64
          description: End time for the trade records in Unix milliseconds, e.g., 1690196141868. Should be within 7 days of the current time.
          example: "1690196141868"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/Trade"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/trade/place-order:
    post:
      tags: 
       -  Spot Trading-Trade
      summary: Get Market Trades
      description: '<strong>Rate limit:</Strong> 10 requests/second/UID<br><strong>Rate limit:</strong> 1 request/second/UID for copy trading traders'
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderRequest"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/trade/cancel-replace-order:
    post:
      tags: 
       -  Spot Trading-Trade
      summary: Cancel an Existing Order and Send a New Order
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderUpdateRequest"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderUpdateResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/trade/batch-cancel-replace-order:
    post:
      tags: 
       -  Spot Trading-Trade
      summary: Cancel an Existing Order and Send a New Order
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchOrderRequest"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderUpdateResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/trade/cancel-order:
    post:
      tags: 
       -  Spot Trading-Trade
      summary: Cancel an Existing Order
      description: Frequency limit:10 times/1s (UID)
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelRequest"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/trade/batch-orders:
    post:
      tags: 
       -  Spot Trading-Trade
      summary: Place Batch orders
      description: 'Frequency limit: 5 times/1s (UID)Trader frequency limit: 1 times/1s (UID)'
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchPlaceRequest"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/BatchPlaceResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/trade/batch-cancel-order:
    post:
      tags: 
       -  Spot Trading-Trade
      summary: Cancel Orders in Batch
      description: 'Frequency limit:10 times/1s (UID)'
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchCancelRequest"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/BatchPlaceResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/trade/cancel-symbol-order:
    post:
      tags: 
       -  Spot Trading-Trade
      summary: Cancel order by symbol
      description: 'Frequency limit: 5 times/1s (UID)'
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                symbol:
                  type: string
                  example: "btcusdt"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        symbol:
                          type: string
                          example: "btcusdt"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/trade/orderInfo:
    get:
      tags: 
       -  Spot Trading-Trade
      summary: Get Order Info
      description: 'Get Order Info<br>If you query the order details through clientOid, the following requirements need to be met:<br>clientOid is customized by user, not our system-generated<br>the order is in unfilled status'
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      parameters:
        - name: orderId
          in: query
          required: false
          description: Either Order ID or clientOid is required.
          schema:
            type: string
        - name: clientOid
          in: query
          required: false
          description: Either Client customized ID or orderId is required.
          schema:
            type: string
        - name: requestTime
          in: query
          required: false
          description: Request Time as Unix millisecond timestamp.
          schema:
            type: string
        - name: receiveWindow
          in: query
          required: false
          description: Valid window period as Unix millisecond timestamp.
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/OrderInfoResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/trade/unfilled-orders:
    get:
      tags: 
       -  Spot Trading-Trade
      summary: Get Unfilled Orders
      description: 'Frequency limit: 20 times/1s (UID)'
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      parameters:
        - in: query
          name: symbol
          required: false
          schema:
            type: string
          description: Trading pair.
      
        - in: query
          name: startTime
          required: false
          schema:
            type: string
          description: The record start time for the query (Unix millisecond timestamp).
      
        - in: query
          name: endTime
          required: false
          schema:
            type: string
          description: The end time of the record for the query (Unix millisecond timestamp).
      
        - in: query
          name: idLessThan
          required: false
          schema:
            type: string
          description: Requests the content on the page before this ID (older data). Should be the orderId of the corresponding interface.
      
        - in: query
          name: limit
          required: false
          schema:
            type: string
          description: 'Limit number of records returned (default: 100, max: 100).'
      
        - in: query
          name: orderId
          required: false
          schema:
            type: string
          description: Order ID.
      
        - in: query
          name: tpslType
          required: false
          schema:
            type: string
          description: "Order type (default: normal). Can be 'normal' for spot orders or 'tpsl' for spot TP/SL orders."
      
        - in: query
          name: requestTime
          required: false
          schema:
            type: string
          description: Request time (Unix millisecond timestamp).
      
        - in: query
          name: receiveWindow
          required: false
          schema:
            type: string
          description: Valid time window (Unix millisecond timestamp).
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/OrderInfoResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/trade/history-orders:
    get:
      tags: 
       -  Spot Trading-Trade
      summary: Get History Orders
      description: 'Frequency limit: 20 times/1s (UID)'
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      parameters:
        - in: query
          name: symbol
          required: false
          schema:
            type: string
          description: Trading pair.
      
        - in: query
          name: startTime
          required: false
          schema:
            type: string
          description: The record start time for the query (Unix millisecond timestamp).
      
        - in: query
          name: endTime
          required: false
          schema:
            type: string
          description: The end time of the record for the query (Unix millisecond timestamp).
      
        - in: query
          name: idLessThan
          required: false
          schema:
            type: string
          description: Requests the content on the page before this ID (older data). Should be the orderId of the corresponding interface.
      
        - in: query
          name: limit
          required: false
          schema:
            type: string
          description: 'Limit number of records returned (default: 100, max: 100).'
      
        - in: query
          name: orderId
          required: false
          schema:
            type: string
          description: Order ID.
      
        - in: query
          name: tpslType
          required: false
          schema:
            type: string
          description: "Order type (default: normal). Can be 'normal' for spot orders or 'tpsl' for spot TP/SL orders."
      
        - in: query
          name: requestTime
          required: false
          schema:
            type: string
          description: Request time (Unix millisecond timestamp).
      
        - in: query
          name: receiveWindow
          required: false
          schema:
            type: string
          description: Valid time window (Unix millisecond timestamp).
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                          $ref: "#/components/schemas/OrderInfoResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/trade/fills:
    get:
      tags: 
       -  Spot Trading-Trade
      summary: Get Fills
      description: 'Frequency limit: 10 times/1s (UID)'
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      parameters:
        - in: query
          name: symbol
          required: false
          schema:
            type: string
          description: Trading pair.
      
        - in: query
          name: startTime
          required: false
          schema:
            type: string
          description: The record start time for the query (Unix millisecond timestamp).
      
        - in: query
          name: endTime
          required: false
          schema:
            type: string
          description: The end time of the record for the query (Unix millisecond timestamp).
      
        - in: query
          name: idLessThan
          required: false
          schema:
            type: string
          description: Requests the content on the page before this ID (older data). Should be the orderId of the corresponding interface.
      
        - in: query
          name: limit
          required: false
          schema:
            type: string
          description: 'Limit number of records returned (default: 100, max: 100).'
      
        - in: query
          name: orderId
          required: false
          schema:
            type: string
          description: Order ID.
      
        - in: query
          name: requestTime
          required: false
          schema:
            type: string
          description: Request time (Unix millisecond timestamp).
      
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/TradeFillsResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/trade/place-plan-order:
    post:
      tags: 
       -  Spot Trading-Triggers
      summary: Place plan order
      description: 'Frequency limit: 20 times/1s (UID)'
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlanOrderRequest"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/trade/modify-plan-order:
    post:
      tags: 
       -  Spot Trading-Triggers
      summary: Place plan order
      description: 'Frequency limit: 20 times/1s (UID)'
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModifyOrderRequest"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/trade/cancel-plan-order:
    post:
      tags: 
       -  Spot Trading-Triggers
      summary: Cancel Plan order
      description: 'Frequency limit: 20 times/1s (UID)'
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderResponse"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        result:
                          type: string
                          example: "succcess"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/trade/current-plan-order:
    get:
      tags: 
       -  Spot Trading-Triggers
      summary: Get Current Order
      description: 'Frequency limit: 10 times/1s (UID)'
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      parameters:
        - in: query
          name: symbol
          required: false
          schema:
            type: string
          description: Trading pair.
      
        - in: query
          name: startTime
          required: false
          schema:
            type: string
          description: The record start time for the query (Unix millisecond timestamp).
      
        - in: query
          name: endTime
          required: false
          schema:
            type: string
          description: The end time of the record for the query (Unix millisecond timestamp).
      
        - in: query
          name: idLessThan
          required: false
          schema:
            type: string
          description: Requests the content on the page before this ID (older data). Should be the orderId of the corresponding interface.
      
        - in: query
          name: limit
          required: false
          schema:
            type: string
          description: 'Limit number of records returned (default: 100, max: 100).'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/CurrentPlanResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/trade/plan-sub-order:
    get:
      tags: 
       -  Spot Trading-Triggers
      summary: Get Sub Order
      description: 'Frequency limit: 20 times/1s (UID)'
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      parameters:
        - in: query
          name: planOrderId
          required: false
          schema:
            type: string
          description: Order Id
      
        
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                       $ref: "#/components/schemas/PlanSubOrderResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/trade/history-plan-order:
    get:
      tags: 
       -  Spot Trading-Triggers
      summary: Get History Plan Orders
      description: 'Frequency limit: 20 times/1s (UID)'
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      parameters:
        - in: query
          name: symbol
          required: false
          schema:
            type: string
          description: Trading pair.
      
        - in: query
          name: startTime
          required: false
          schema:
            type: string
          description: The record start time for the query (Unix millisecond timestamp).
      
        - in: query
          name: endTime
          required: false
          schema:
            type: string
          description: The end time of the record for the query (Unix millisecond timestamp).
      
        - in: query
          name: idLessThan
          required: false
          schema:
            type: string
          description: Requests the content on the page before this ID (older data). Should be the orderId of the corresponding interface.
      
        - in: query
          name: limit
          required: false
          schema:
            type: string
          description: 'Limit number of records returned (default: 100, max: 100).'
      
        
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/CurrentPlanResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/trade/batch-cancel-plan-order:
    post:
      tags: 
       -  Spot Trading-Triggers
      summary: Cancel plan orders in batch
      description: 'Rate limit: 5 req/sec/UID'
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                symbolList:
                  type: array
                  items:
                    type: string
                    example: ["BTCUSDT","ETHUSDT"]
                  
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/BatchPlaceResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/account/info:
    get:
      tags: 
       -  Spot Trading-Account
      summary: Get account information(SPOT read or SPOT read/write permission needed)
      description: 'Frequency limit: 1 time/1s (User ID)'
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - $ref: "#/components/schemas/AccountResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/account/assets:
    get:
      tags: 
       -  Spot Trading-Account
      summary: Get account Assets
      description: 'Frequency limit: 10 times/1s (User ID)'
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      parameters:
        - name: coin
          in: query
          required: false
          schema:
            type: string
          description: "Token name, e.g. USDT. This field is used for querying the positions of a single coin."
      
        - name: assetType
          in: query
          required: false
          schema:
            type: string
            enum:
              - hold_only
              - all
          description: "Asset type. 'hold_only' for position coin, 'all' for all coins. This field is used for querying the positions of multiple coins. Default is 'hold_only'. If only assetType is entered without coin, results of all eligible coins are returned. When both coin and assetType are entered, coin has higher priority."
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/AccountAssetsResponse"
                
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/account/subaccount-assets:
    get:
      tags: 
       -  Spot Trading-Account
      summary: Get Sub-accounts Assets(only return the sub-accounts which assets > 0).
      description: 'Frequency limit: 10 times/1s (User ID)'
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/SubAccountAssetsResponse"
                
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/wallet/modify-deposit-account:
    post:
      tags: 
       -  Spot Trading-Account
      summary: Modify the auto-transfer account type of deposit.
      description: 'Frequency limit: 10 times/1s (User ID)'
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModifyRequest"
            
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: string
                      example: success
                
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/account/bills:
    get:
      tags: 
       -  Spot Trading-Account
      summary: Get Account Bills
      description: 'Frequency limit: 10 times/1s (User ID)'
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      parameters:
        - in: query
          name: coin
          schema:
            type: string
          required: false
          description: "Token name, e.g., USDT."
        - in: query
          name: groupType
          schema:
            type: string
            enum: ["deposit", "withdraw", "transaction", "transfer", "other"]
          required: false
          description: "Billing type."
        - in: query
          name: businessType
          schema:
            type: string
            enum: ["deposit", "withdraw", "buy", "sell", "deduction of handling fee", "transfer-in", "transfer-out", "rebate rewards", "airdrop rewards", "USDT contract rewards", "mix contract rewards", "system lock", "user lock"]
          required: false
          description: "Business type for the billing entry."
        - in: query
          name: startTime
          schema:
            type: string
            format: int64
          required: false
          description: "The start time of the billing history, Unix millisecond timestamp, e.g., 1690196141868."
        - in: query
          name: endTime
          schema:
            type: string
            format: int64
          required: false
          description: "The end time of the billing history, Unix millisecond timestamp, e.g., 1690196141868. Interval must not exceed 90 days."
        - in: query
          name: limit
          schema:
            type: integer
            default: 100
            maximum: 500
          required: false
          description: "Number of results returned. Default is 100, max is 500."
        - in: query
          name: idLessThan
          schema:
            type: string
          required: false
          description: "Requests content on the page before this ID (older data), using the billId of the corresponding entry."

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/AccountBillResponse"
                
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/wallet/transfer:
    post:
      tags: 
       -  Spot Trading-Account
      summary: Transfer assets between different productType accounts
      description: 'Frequency limit: 10 requests/second/UID'
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransferRequest"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/TransferResponse"
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/wallet/transfer-coin-info:
    post:
      tags: 
       -  Spot Trading-Account
      summary: Get transferable coin list
      description: 'Frequency limit: 10 times/1s (User ID)'
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      parameters:
        - name: fromType
          in: query
          required: true
          schema:
            type: string
            enum: [spot, p2p, coin_futures, usdt_futures, usdc_futures, crossed_margin, isolated_margin]
          description: Source account type for the transfer.
        - name: toType
          in: query
          required: true
          schema:
            type: string
            enum: [spot, p2p, coin_futures, usdt_futures, usdc_futures, crossed_margin, isolated_margin]
          description: Destination account type for the transfer.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: string
                        example: ["BTC","USDT", "ETH" ]
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/wallet/subaccount-transfer:
    post:
      tags: 
       -  Spot Trading-Account
      summary: Transfer assets between different productType accounts
      description: "Frequency limit: 10 requests/second/UID</br>The types of transfers supported by this interface include<br>1- Parent account transfer to sub-accounts (only parent account APIKey has access)<br>2- Sub-accounts to parent account (only parent account APIKey has access)<br>3- Sub-accounts transfer to sub-accounts (only the parent account APIKey has access and the sub-accounts belong to same parent account)<br>4- Sub-account inner accounts transfer, e.g. spot to futures(only the parent account APIKey has access, and the fromUserId & toUserId should be same)<br>Only the parent account API Key can use this endpoint, and the API Key must bind IP"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubTransferRequest"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/TransferResponse"
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/wallet/withdrawal:
    post:
      tags: 
       -  Spot Trading-Account
      summary: Transfer assets between different productType accounts
      description: "Frequency limit: 5 requests/second/UID</br>Coin withdrawals including on-chain withdrawals and internal transfers(the address needs to be added in the address book on web)"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WithdrawRequest"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderResponse"
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/account/sub-main-trans-record:
    get:
      tags: 
       -  Spot Trading-Account
      summary: Get transfer record
      description: "Frequency limit: 20 requests/second/UID"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      parameters:
        - name: coin
          in: query
          schema:
            type: string
          required: false
          description: Token name to filter the transfer records.
        - name: role
          in: query
          schema:
            type: string
            enum: [initiator, receiver]
            default: initiator
          required: false
          description: Transfer role type. Defaults to 'initiator'.
        - name: subUid
          in: query
          schema:
            type: string
          required: false
          description: Sub-account UID. If empty, only records from the main account are queried.
        - name: startTime
          in: query
          schema:
            type: string
            format: int64
          required: false
          description: Start time in Unix millisecond timestamp format to get the billing history after this time (e.g., 1690196141868).
        - name: endTime
          in: query
          schema:
            type: string
            format: int64
          required: false
          description: End time in Unix millisecond timestamp format to get the billing history before this time (e.g., 1690196141868). The interval between startTime and endTime must not exceed 90 days.
        - name: clientOid
          in: query
          schema:
            type: string
          required: false
          description: User-customized order ID.
        - name: limit
          in: query
          schema:
            type: integer
            default: 100
            maximum: 100
          required: false
          description: Number of results returned. Default is 100, with a maximum of 100 results.
        - name: idLessThan
          in: query
          schema:
            type: string
          required: false
          description: Requests content before this ID for older data; input should be the `transferId` of the related record.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/MainSubTransferResponse"
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/account/transferRecords:
    get:
      tags: 
       -  Spot Trading-Account
      summary: Get transfer record
      description: "Frequency limit: 20 requests/second/UID"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      parameters:
      - name: coin
        in: query
        required: true
        schema:
          type: string
        description: Token name (e.g., USDT)
      
      - name: fromType
        in: query
        required: true
        schema:
          type: string
          enum: 
            - spot
            - p2p
            - coin_futures
            - usdt_futures
            - usdc_futures
            - crossed_margin
            - isolated_margin
        description: Account type (e.g., spot, p2p, coin_futures, etc.)
    
      - name: startTime
        in: query
        required: false
        schema:
          type: string
          format: int64
        description: Start time of the billing history in Unix milliseconds (e.g., 1690196141868)
    
      - name: endTime
        in: query
        required: false
        schema:
          type: string
          format: int64
        description: End time of the billing history in Unix milliseconds (e.g., 1690196141868). The interval between startTime and endTime must not exceed 90 days.
    
      - name: clientOid
        in: query
        required: false
        schema:
          type: string
        description: Order ID customized by the user
    
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          maximum: 500
        description: Number of results to return. Default is 100, with a maximum of 500.
    
      - name: idLessThan
        in: query
        required: false
        schema:
          type: string
        description: Requests content on the page before this ID (older data), using the transferId of the corresponding interface
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/TransferRecordResponse"
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/account/switch-deduct:
    post:
      tags: 
       -  Spot Trading-Account
      summary: Switch BGB Deduct
      description: "Frequency limit: 1 requests/second/UID"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                deduct:
                  type: string
                  example: "on/off"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: boolean
                      example: true
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/wallet/deposit-address:
    get:
      tags: 
       -  Spot Trading-Account
      summary: Get Deposit Address
      description: "Frequency limit: 10 requests/second/UID"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      parameters:
      - name: coin
        in: query
        required: true
        schema:
          type: string
          description: "Coin name, e.g., USDT. All coin names can be retrieved from the Get Coin Info interface."
      - name: chain
        in: query
        required: false
        schema:
          type: string
          description: "Chain name, e.g., trc20. Available chain names can be retrieved from the Get Coin Info interface."
      - name: size
        in: query
        required: false
        schema:
          type: string
          description: "Bitcoin Lightning Network withdrawal amount. Limits: 0.000001 - 0.01."
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/DepositResponse"
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/wallet/subaccount-deposit-address:
    get:
      tags: 
       -  Spot Trading-Account
      summary: Get Deposit Address
      description: "Frequency limit: 10 requests/second/UID"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      parameters:
      - name: coin
        in: query
        required: true
        schema:
          type: string
          description: "Coin name, e.g., USDT. All coin names can be retrieved from the Get Coin Info interface."
      - name: chain
        in: query
        required: false
        schema:
          type: string
          description: "Chain name, e.g., trc20. Available chain names can be retrieved from the Get Coin Info interface."
      - name: size
        in: query
        required: false
        schema:
          type: string
          description: "Bitcoin Lightning Network withdrawal amount. Limits: 0.000001 - 0.01."
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/DepositResponse"
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/account/deduct-info:
    post:
      tags: 
       -  Spot Trading-Account
      summary: Get BGB Deduct Info
      description: "Frequency limit: 1 requests/second/UID"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        deduct:
                          type: boolean
                          example: "on"
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/wallet/cancel-withdrawal:
    post:
      tags: 
       -  Spot Trading-Account
      summary: Cancel Withdrawal
      description: "Frequency limit: 1 requests/second/UID<br>The user center can set the switch [Cancel Withdrawal], and there is a 'regret period' of 1 minute to cancel the withdrawal.<br>There is manual review in the preliminary review status, and the withdrawal can be cancelled. Once the initial review is passed or uploaded to the chain, the withdrawal cannot be revoked.<br>Small-amount automatic currency withdrawals do not require manual review, and the withdrawal cannot be revoked."
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                orderid:
                  type: string
                  
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: string
                      example: "success"
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/wallet/subaccount-deposit-records:
    get:
      tags: 
       -  Spot Trading-Account
      summary: Get SubAccount Deposit Records
      description: "Frequency limit: 10 requests/second/UID"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      parameters:
      - name: subUid
        in: query
        required: true
        description: "Sub Account UID"
        schema:
          type: string
    
      - name: coin
        in: query
        required: false
        description: "Coin name, e.g., USDT"
        schema:
          type: string
    
      - name: startTime
        in: query
        required: false
        description: "The record start time for the query. Unix millisecond timestamp, e.g., 1690196141868"
        schema:
          type: string
    
      - name: endTime
        in: query
        required: false
        description: "The end time of the record for the query. Unix millisecond timestamp, e.g., 1690196141868"
        schema:
          type: string
    
      - name: idLessThan
        in: query
        required: false
        description: "Requests the content on the page before this ID (older data), the value input should be the orderId of the corresponding interface"
        schema:
          type: string
    
      - name: limit
        in: query
        required: false
        description: "Number of entries per page. The default value is 20 and the maximum value is 100"
        schema:
          type: string
          default: "20"
          enum:
            - "20"
            - "50"
            - "100"

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/SubaccountDepositResponse"
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/wallet/withdrawal-records:
    get:
      tags: 
       -  Spot Trading-Account
      summary: Get Withdrawal Records
      description: "Frequency limit: 10 times/1s (User ID)"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      
      parameters:
        - name: coin
          in: query
          description: Coin name (e.g., USDT)
          required: false
          schema:
            type: string
        - name: clientOid
          in: query
          description: Client customized ID
          required: false
          schema:
            type: string
        - name: startTime
          in: query
          description: The record start time for the query. Unix millisecond timestamp (e.g., 1690196141868)
          required: true
          schema:
            type: string
            format: int64
        - name: endTime
          in: query
          description: The end time of the record for the query. Unix millisecond timestamp (e.g., 1690196141868)
          required: true
          schema:
            type: string
            format: int64
        - name: idLessThan
          in: query
          description: Requests the content on the page before this ID (older data), should be the orderId of the corresponding interface
          required: false
          schema:
            type: string
        - name: orderId
          in: query
          description: The response orderId
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: The number of entries per page. Default is 20, max 100
          required: false
          schema:
            type: string
            default: "20"
            enum:
              - "20"
              - "50"
              - "100"

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/WithdrawResponse"
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spot/wallet/deposit-records:
    get:
      tags: 
       -  Spot Trading-Account
      summary: Get Deposit Records(Not include Fiat deposit record)
      description: "Frequency limit: 10 times/1s (User ID)"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      
      parameters:
        - name: coin
          in: query
          description: Coin name (e.g., USDT)
          required: false
          schema:
            type: string
        - name: clientOid
          in: query
          description: Client customized ID
          required: false
          schema:
            type: string
        - name: startTime
          in: query
          description: The record start time for the query. Unix millisecond timestamp (e.g., 1690196141868)
          required: true
          schema:
            type: string
            format: int64
        - name: endTime
          in: query
          description: The end time of the record for the query. Unix millisecond timestamp (e.g., 1690196141868)
          required: true
          schema:
            type: string
            format: int64
        - name: idLessThan
          in: query
          description: Requests the content on the page before this ID (older data), should be the orderId of the corresponding interface
          required: false
          schema:
            type: string
        - name: orderId
          in: query
          description: The response orderId
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: The number of entries per page. Default is 20, max 100
          required: false
          schema:
            type: string
            default: "20"
            enum:
              - "20"
              - "50"
              - "100"

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/WithdrawResponse"
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/market/vip-fee-rate:
    get:
      tags: 
       -  Future Trading-Market
      summary: VIP Fee Rate
      description: "Frequency limit: 10 times/1s (User ID)"
      
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/VIPFeeResponse"
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/market/union-interest-rate-history:
    get:
      tags: 
       -  Future Trading-Market
      summary: Get Interest rate history
      description: "Frequency limit: 5 times/1s (User ID)"
      parameters:
        - in: query
          name: coin
          required: true
          schema:
            type: string
            example: "usdt"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/InterestResponse"
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/market/exchange-rate:
    get:
      tags: 
       -  Future Trading-Market
      summary: Get Interest Exchange Rate
      description: "Frequency limit: 5 times/1s (User ID)"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/ExchangeResponse"
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/market/discount-rate:
    get:
      tags: 
       -  Future Trading-Market
      summary: Get Discount Rate
      description: "Frequency limit: 5 times/1s (User ID)"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/DiscountResponse"
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/market/merge-depth:
    get:
      tags: 
       -  Future Trading-Market
      summary: Get merge depth data
      description: "Frequency limit: 20 times/1s (User ID)"
      parameters:
        - name: symbol
          in: query
          required: true
          schema:
            type: string
        - name: productType
          in: query
          required: true
          schema:
            type: string
            enum:
              - USDT-FUTURES
              - COIN-FUTURES
              - USDC-FUTURES
              - SUSDT-FUTURES
              - SCOIN-FUTURES
              - SUSDC-FUTURES
        - name: precision
          in: query
          required: false
          schema:
            type: string
            enum:
              - scale0
              - scale1
              - scale2
              - scale3
            default: scale0
        - name: limit
          in: query
          required: false
          schema:
            type: string
            enum:
              - '1'
              - '5'
              - '15'
              - '50'
              - '100'
            default: '100'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/DepthResponse"
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/market/ticker:
    get:
      tags: 
       -  Future Trading-Market
      summary: Get Tickers Info
      description: "Get ticker data of the given 'productType' and 'symbol'"
      parameters:
        - in: query
          name: symbol
          required: true
          schema:
            type: string
            example: "symbol name e.g; BTCUSDT,if left blank will get all symbol's info"
        - in: query
          name: productType
          required: true
          schema:
            type: string
            example: "SUSDT-FUTURES"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/FutureTickerInfo"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/market/tickers:
    get:
      tags: 
       -  Future Trading-Market
      summary: Get Tickers Info
      description: "Get ticker data of the given 'productType'"
      parameters:
        - in: query
          name: productType
          required: true
          schema:
            type: string
            example: "SUSDT-FUTURES"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/FutureTickerInfo"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/market/fills:
    get:
      tags: 
       -  Future Trading-Market
      summary: Get Recent Transactions
      description: "Get the record of last 100 transactions"
      parameters:
        - in: query
          name: productType
          required: true
          schema:
            type: string
            example: "SUSDT-FUTURES"
        - in: query
          name: symbol
          required: true
          schema:
            type: string
            example: "BTCUSDT"
        - in: query
          name: limit
          required: false
          schema:
            type: string
            example: "100"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/FutureFillsInfo"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/market/fills-history:
    get:
      tags: 
       -  Future Trading-Market
      summary: Get History Transactions
      description: "Frequency limit: 10 times/1s (IP)"
      parameters:
        - name: "symbol"
          in: "query"
          required: true
          schema:
            type: string
          description: "The trading pair (e.g., BTCUSDT)"
        
        - name: "productType"
          in: "query"
          required: true
          schema:
            type: string
            enum:
              - "USDT-FUTURES"
              - "COIN-FUTURES"
              - "USDC-FUTURES"
              - "SUSDT-FUTURES"
              - "SCOIN-FUTURES"
              - "SUSDC-FUTURES"
          description: "The product type"
        
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: string
            default: "500"
          description: "The number of queries, default is 500, maximum is 1000"
        
        - name: "idLessThan"
          in: "query"
          required: false
          schema:
            type: string
          description: "ID to query older data, the value should be the endId"
        
        - name: "startTime"
          in: "query"
          required: false
          schema:
            type: string
            example: "1597026383085"
          description: "Start timestamp in Unix milliseconds format"
        
        - name: "endTime"
          in: "query"
          required: false
          schema:
            type: string
            example: "1597026383085"
          description: "End timestamp in Unix milliseconds format"
          
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/FutureFillHistoryInfo"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/market/candles:
    get:
      tags: 
       -  Future Trading-Market
      summary: Get History Transactions
      description: "By default, 100 records are returned. If there is no data, an empty array is returned. The queryable data history varies depending on the k-line granularity.<br>The rules are as follows:<br>1m, 3m, and 5m can be checked for up to one month;<br>15m can be checked for up to 52 days;<br>30m can be searched for up to 62 days;<br>1H can be checked for up to 83 days;<br>2H can be checked for up to 120 days;<br>4H can be checked for up to 240 days;<br>6H can be checked for up to 360 days"
      parameters:
        - name: symbol
          in: query
          required: true
          schema:
            type: string
            example: "BTCUSDT"
        - name: productType
          in: query
          required: true
          schema:
            type: string
            enum:
              - USDT-FUTURES
              - COIN-FUTURES
              - USDC-FUTURES
              - SUSDT-FUTURES
              - SCOIN-FUTURES
              - SUSDC-FUTURES
          example: "USDT-FUTURES"
        - name: granularity
          in: query
          required: true
          schema:
            type: string
            enum:
              - 1m
              - 3m
              - 5m
              - 15m
              - 30m
              - 1H
              - 4H
              - 6H
              - 12H
              - 1D
              - 3D
              - 1W
              - 1M
              - 6Hutc
              - 12Hutc
              - 1Dutc
              - 3Dutc
              - 1Wutc
              - 1Mutc
          example: "1m"
        - name: startTime
          in: query
          required: false
          schema:
            type: string
            example: "1672410780000"
        - name: endTime
          in: query
          required: false
          schema:
            type: string
            example: "1672410780000"
        - name: kLineType
          in: query
          required: false
          schema:
            type: string
            enum:
              - MARKET
              - MARK
              - INDEX
          example: "MARKET"
        - name: limit
          in: query
          required: false
          schema:
            type: string
            enum:
              - "100"
              - "500"
              - "1000"
          example: "100"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/Candles"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/market/history-candles:
    get:
      tags: 
       -  Future Trading-Market
      summary: Get History Transactions
      description: "Frequency limit: 20 times/1s (IP).Query all historical K-line data and return a maximum of 200 pieces of data."
      parameters:
        - name: symbol
          in: query
          required: true
          schema:
            type: string
            example: "BTCUSDT"
        - name: productType
          in: query
          required: true
          schema:
            type: string
            enum:
              - USDT-FUTURES
              - COIN-FUTURES
              - USDC-FUTURES
              - SUSDT-FUTURES
              - SCOIN-FUTURES
              - SUSDC-FUTURES
          example: "USDT-FUTURES"
        - name: granularity
          in: query
          required: true
          schema:
            type: string
            enum:
              - 1m
              - 3m
              - 5m
              - 15m
              - 30m
              - 1H
              - 4H
              - 6H
              - 12H
              - 1D
              - 3D
              - 1W
              - 1M
              - 6Hutc
              - 12Hutc
              - 1Dutc
              - 3Dutc
              - 1Wutc
              - 1Mutc
          example: "1m"
        - name: startTime
          in: query
          required: false
          schema:
            type: string
            example: "1672410780000"
        - name: endTime
          in: query
          required: false
          schema:
            type: string
            example: "1672410780000"
        - name: kLineType
          in: query
          required: false
          schema:
            type: string
            enum:
              - MARKET
              - MARK
              - INDEX
          example: "MARKET"
        - name: limit
          in: query
          required: false
          schema:
            type: string
            enum:
              - "100"
              - "500"
              - "1000"
          example: "100"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/Candles"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/market/history-index-candles:
    get:
      tags: 
       -  Future Trading-Market
      summary: Get History Transactions
      description: "Frequency limit: 20 times/1s (IP).Query the historical K-line data of contract index price, and return a maximum of 200 pieces of data."
      parameters:
        - name: symbol
          in: query
          required: true
          schema:
            type: string
            example: "BTCUSDT"
        - name: productType
          in: query
          required: true
          schema:
            type: string
            enum:
              - USDT-FUTURES
              - COIN-FUTURES
              - USDC-FUTURES
              - SUSDT-FUTURES
              - SCOIN-FUTURES
              - SUSDC-FUTURES
          example: "USDT-FUTURES"
        - name: granularity
          in: query
          required: true
          schema:
            type: string
            enum:
              - 1m
              - 3m
              - 5m
              - 15m
              - 30m
              - 1H
              - 4H
              - 6H
              - 12H
              - 1D
              - 3D
              - 1W
              - 1M
              - 6Hutc
              - 12Hutc
              - 1Dutc
              - 3Dutc
              - 1Wutc
              - 1Mutc
          example: "1m"
        - name: startTime
          in: query
          required: false
          schema:
            type: string
            example: "1672410780000"
        - name: endTime
          in: query
          required: false
          schema:
            type: string
            example: "1672410780000"
        - name: limit
          in: query
          required: false
          schema:
            type: string
            enum:
              - "100"
              - "500"
              - "1000"
          example: "100"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/Candles"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/market/history-mark-candles:
    get:
      tags: 
       -  Future Trading-Market
      summary: Get History Transactions
      description: "Frequency limit: 20 times/1s (IP).Query the historical K-line data of contract index price, and return a maximum of 200 pieces of data."
      parameters:
        - name: symbol
          in: query
          required: true
          schema:
            type: string
            example: "BTCUSDT"
        - name: productType
          in: query
          required: true
          schema:
            type: string
            enum:
              - USDT-FUTURES
              - COIN-FUTURES
              - USDC-FUTURES
              - SUSDT-FUTURES
              - SCOIN-FUTURES
              - SUSDC-FUTURES
          example: "USDT-FUTURES"
        - name: granularity
          in: query
          required: true
          schema:
            type: string
            enum:
              - 1m
              - 3m
              - 5m
              - 15m
              - 30m
              - 1H
              - 4H
              - 6H
              - 12H
              - 1D
              - 3D
              - 1W
              - 1M
              - 6Hutc
              - 12Hutc
              - 1Dutc
              - 3Dutc
              - 1Wutc
              - 1Mutc
          example: "1m"
        - name: startTime
          in: query
          required: false
          schema:
            type: string
            example: "1672410780000"
        - name: endTime
          in: query
          required: false
          schema:
            type: string
            example: "1672410780000"
        - name: limit
          in: query
          required: false
          schema:
            type: string
            enum:
              - "100"
              - "500"
              - "1000"
          example: "100"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/Candles"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/market/open-interest:
    get:
      tags: 
       -  Future Trading-Market
      summary: Get Open interest
      description: "Frequency limit: 20 times/1s (IP).Get the total positions of a certain trading pair on the platform."
      parameters:
        - name: symbol
          in: query
          required: true
          schema:
            type: string
            example: "BTCUSDT"
        - name: productType
          in: query
          required: true
          schema:
            type: string
            enum:
              - USDT-FUTURES
              - COIN-FUTURES
              - USDC-FUTURES
              - SUSDT-FUTURES
              - SCOIN-FUTURES
              - SUSDC-FUTURES
          example: "USDT-FUTURES"
        
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/InterestsResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/market/funding-time:
    get:
      tags: 
       -  Future Trading-Market
      summary: Get Next funding time
      description: "Frequency limit: 20 times/1s (IP).Get the next settlement time of the contract and the settlement period of the contract."
      parameters:
        - name: symbol
          in: query
          required: true
          schema:
            type: string
            example: "BTCUSDT"
        - name: productType
          in: query
          required: true
          schema:
            type: string
            enum:
              - USDT-FUTURES
              - COIN-FUTURES
              - USDC-FUTURES
              - SUSDT-FUTURES
              - SCOIN-FUTURES
              - SUSDC-FUTURES
          example: "USDT-FUTURES"
        
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/FundingTimeResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/market/symbol-price:
    get:
      tags: 
       -  Future Trading-Market
      summary: Get Mark/Index/Market Prices
      description: "Frequency limit: 20 times/s, frequency is limited according to user ID.Get market/index/mark prices."
      parameters:
        - name: symbol
          in: query
          required: true
          schema:
            type: string
            example: "BTCUSDT"
        - name: productType
          in: query
          required: true
          schema:
            type: string
            enum:
              - USDT-FUTURES
              - COIN-FUTURES
              - USDC-FUTURES
              - SUSDT-FUTURES
              - SCOIN-FUTURES
              - SUSDC-FUTURES
          example: "USDT-FUTURES"
        
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/SymbolPriceResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/market/history-fund-rate:
    get:
      tags: 
       -  Future Trading-Market
      summary: Get Historical Funding Rates
      description: "Frequency limit: 20 times/s, Get the historical funding rate of the contract"
      parameters:
        - name: symbol
          in: query
          required: true
          schema:
            type: string
            example: "BTCUSDT"
        - name: productType
          in: query
          required: true
          schema:
            type: string
            enum:
              - USDT-FUTURES
              - COIN-FUTURES
              - USDC-FUTURES
              - SUSDT-FUTURES
              - SCOIN-FUTURES
              - SUSDC-FUTURES
          example: "USDT-FUTURES"
        - in: query
          name: pageSize
          required: false
          schema:
            type: string
            example: 20
        - in: query
          name: pageNo
          required: false
          schema:
            type: string
            example: "15"
          
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/FundingRateResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/market/contracts:
    get:
      tags: 
       -  Future Trading-Market
      summary: Get Contract Config
      description: "Frequency limit: 20 times/s, Interface is used to get future contract details."
      parameters:
        - name: symbol
          in: query
          required: true
          schema:
            type: string
            example: "BTCUSDT"
        - name: productType
          in: query
          required: true
          schema:
            type: string
            enum:
              - USDT-FUTURES
              - COIN-FUTURES
              - USDC-FUTURES
              - SUSDT-FUTURES
              - SCOIN-FUTURES
              - SUSDC-FUTURES
          example: "USDT-FUTURES"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/ContractConfigResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/account/account:
    get:
      tags: 
       -  Future Trading-Account
      summary: Get Single Account
      description: "Frequency limit: 10 times/s,Get account details with the given 'marginCoin' and 'productType'."
      parameters:
        - name: symbol
          in: query
          required: true
          schema:
            type: string
            example: "BTCUSDT"
        - name: productType
          in: query
          required: true
          schema:
            type: string
            enum:
              - USDT-FUTURES
              - COIN-FUTURES
              - USDC-FUTURES
              - SUSDT-FUTURES
              - SCOIN-FUTURES
              - SUSDC-FUTURES
          example: "USDT-FUTURES"
        - name: marginCoin
          in: query
          required: true
          schema:
            type: string
            example: "USDT"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/FutureAccountResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/account/accounts:
    get:
      tags: 
       -  Future Trading-Account
      summary: Get Single Account
      description: "Frequency limit: 10 times/s,Get account details with the given 'marginCoin' and 'productType'."
      parameters:
        - name: productType
          in: query
          required: true
          schema:
            type: string
            enum:
              - USDT-FUTURES
              - COIN-FUTURES
              - USDC-FUTURES
              - SUSDT-FUTURES
              - SCOIN-FUTURES
              - SUSDC-FUTURES
          example: "USDT-FUTURES"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/FutureAccountsResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/account/sub-account-assets:
    get:
      tags: 
       -  Future Trading-Account
      summary: Get Subaacount asset
      description: "Frequency limit: 10 times/s,Get account details with the given 'marginCoin' and 'productType'."
      parameters:
        - name: productType
          in: query
          required: true
          schema:
            type: string
            enum:
              - USDT-FUTURES
              - COIN-FUTURES
              - USDC-FUTURES
              - SUSDT-FUTURES
              - SCOIN-FUTURES
              - SUSDC-FUTURES
          example: "USDT-FUTURES"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/FutureAccountsResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/account/interest-history:
    get:
      tags: 
       -  Future Trading-Account
      summary: Get USDT-M futures Interest history
      description: "Frequency limit: 5 times/s,Get USDT-M futures Interest history"
      parameters:
        - name: coin
          in: query
          required: false
          schema:
            type: string
          description: Coin
        - name: productType
          in: query
          required: true
          schema:
            type: string
            enum: 
              - USDT-FUTURES
              - SUSDT-FUTURES
          description: Product type (e.g., USDT-FUTURES for USDT professional futures, SUSDT-FUTURES for demo)
        - name: idLessThan
          in: query
          required: false
          schema:
            type: string
          description: Requests the content on the page before this ID (older data); the value input should be the endId of the corresponding interface.
        - name: startTime
          in: query
          required: false
          schema:
            type: string
            format: timestamp
            example: "1597026383085"
          description: Start timestamp in Unix milliseconds, e.g., 1597026383085
        - name: endTime
          in: query
          required: false
          schema:
            type: string
            format: timestamp
            example: "1597026383085"
          description: End timestamp in Unix milliseconds, e.g., 1597026383085
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 20
            maximum: 100
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/InterestHistoryResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/account/open-account:
    get:
      tags: 
       -  Future Trading-Account
      summary: Estimated open count
      description: "Frequency limit: 10 times/s,Get estimated open count per UID"
      parameters:
      - name: symbol
        in: query
        required: true
        schema:
          type: string
          description: Trading pair, e.g., ETHUSDT
          example: "ETHUSDT"
      - name: productType
        in: query
        required: true
        schema:
          type: string
          description: Product type
          enum: [USDT-FUTURES, COIN-FUTURES, USDC-FUTURES, SUSDT-FUTURES, SCOIN-FUTURES, SUSDC-FUTURES]
          example: "USDT-FUTURES"
      - name: marginCoin
        in: query
        required: true
        schema:
          type: string
          description: Margin coin
          example: "USDT"
      - name: openAmount
        in: query
        required: true
        schema:
          type: string
          description: Margin amount
          example: "1000"
      - name: openPrice
        in: query
        required: true
        schema:
          type: string
          description: Price of the order
          example: "25000"
      - name: leverage
        in: query
        required: false
        schema:
          type: string
          description: Leverage, default is 20
          default: "20"
          example: "10"

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        size:
                          type: string
                          example: "0.47"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/account/set-auto-margin:
    post:
      tags: 
       -  Future Trading-Account
      summary: Adjust isolated position auto margin
      description: "Frequency limit: 5 times/s"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IsolatedRequest"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: string
                      example: "success"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/account/set-leverage:
    post:
      tags: 
       -  Future Trading-Account
      summary: Set Leverage
      description: "Frequency limit: 5 times/s,Adjust the leverage on the given symbol and productType"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LeverageRequest"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/LeverageResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/account/set-margin:
    post:
      tags: 
       -  Future Trading-Account
      summary: Adjust Position Margin
      description: "Frequency limit: 5 times/s,Add or reduce the margin（only for isolated margin mode)"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetMarginRequest"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: string
                      example: "success"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/account/set-asset-mode:
    post:
      tags: 
       -  Future Trading-Account
      summary: Set USDT-M Futures Asset Mode
      description: "Frequency limit: 5 times/s,Add or reduce the margin（only for isolated margin mode)"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetAssetRequest"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: string
                      example: "success"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/account/set-margin-mode:
    post:
      tags: 
       -  Future Trading-Account
      summary: Change Margin Mode
      description: "Frequency limit: 5 times/s,This interface cannot be used when the users have an open position or an order"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarginRequest"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/MarginResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/account/set-position-mode:
    post:
      tags: 
       -  Future Trading-Account
      summary: Change Position Mode
      description: "Frequency limit: 5 times/s,Adjust the position mode between 'one way mode' and 'hedge mode'<br>If you want to change the user's position mode on all symbol contracts, you need to specify hedge mode positions or one-way positions.<br>Note: The position mode can't be adjusted when there is an open position order under the product type. Changes the user's position mode for all symbol futures: hedging mode or one-way mode.When users hold positions or orders on any side of any trading pair in the specific product type, the request may fail."
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PositionRequest"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/PositionResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/account/bill:
    get:
      tags: 
       -  Future Trading-Account
      summary: Get Account Bills
      description: "Frequency limit: 10 times/s"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      parameters:
      - name: productType
        in: query
        required: true
        description: Product type.
        schema:
          type: string
          enum:
            - "USDT-FUTURES"
            - "COIN-FUTURES"
            - "USDC-FUTURES"
            - "SUSDT-FUTURES"
            - "SCOIN-FUTURES"
            - "SUSDC-FUTURES"
        example: "USDT-FUTURES"
    
      - name: coin
        in: query
        required: false
        description: Currency. Valid only when businessType is "trans_from_exchange" or "trans_to_exchange".
        schema:
          type: string
        example: "USDT"
    
      - name: businessType
        in: query
        required: false
        description: Type of business action.
        schema:
          type: string
          enum:
            - "unknown"
            - "trans_from_exchange"
            - "trans_to_exchange"
            - "open_long"
            - "open_short"
            - "close_long"
            - "close_short"
            - "force_close_long"
            - "force_close_short"
            - "contract_settle_fee"
            - "append_margin"
            - "adjust_down_lever_append_margin"
            - "reduce_margin"
            - "auto_append_margin"
            - "cash_gift_issue"
            - "cash_gift_recycle"
            - "tracking_follow_pay"
            - "tracking_follow_back"
            - "tracking_trader_income"
            - "burst_long_loss_query"
            - "burst_short_loss_query"
            - "trans_from_contract"
            - "trans_to_contract"
            - "trans_from_otc"
            - "trans_to_otc"
            - "buy"
            - "sell"
            - "force_buy"
            - "force_sell"
            - "burst_buy"
            - "burst_sell"
            - "bonus_issue"
            - "bonus_recycle"
            - "bonus_expired"
            - "delivery_long"
            - "delivery_short"
            - "trans_from_cross"
            - "trans_to_cross"
            - "trans_from_isolated"
            - "trans_to_isolated"
        example: "open_long"
    
      - name: idLessThan
        in: query
        required: false
        description: Requests the content on the page before this ID (older data).
        schema:
          type: string
        example: "xxxxxxxxxxxxxxx"
    
      - name: startTime
        in: query
        required: false
        description: Start time in milliseconds.
        schema:
          type: string
        example: "1597026383085"
    
      - name: endTime
        in: query
        required: false
        description: End time in milliseconds.
        schema:
          type: string
        example: "1597026383085"
    
      - name: limit
        in: query
        required: false
        description: Page size, max 100, default 20.
        schema:
          type: string
        example: "20"

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/BillResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/position/query-position-lever:
    get:
      tags: 
       -  Future Trading-Position
      summary: Get Position Tier
      description: "Frequency limit: 10 times/s"
      parameters:
      - name: productType
        in: query
        required: true
        description: Product type.
        schema:
          type: string
          enum:
            - "USDT-FUTURES"
            - "COIN-FUTURES"
            - "USDC-FUTURES"
            - "SUSDT-FUTURES"
            - "SCOIN-FUTURES"
            - "SUSDC-FUTURES"
        example: "USDT-FUTURES"
    
      - name: symbol
        in: query
        required: false
        description: trading pair
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/PositionTierResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/position/single-position:
    get:
      tags: 
       -  Future Trading-Position
      summary: Get Single Position
      description: "Frequency limit: 10 times/UID,Returns position information of a single symbol, response including estimated liquidation price."
      parameters:
      - name: productType
        in: query
        required: true
        description: Product type.
        schema:
          type: string
          enum:
            - "USDT-FUTURES"
            - "COIN-FUTURES"
            - "USDC-FUTURES"
            - "SUSDT-FUTURES"
            - "SCOIN-FUTURES"
            - "SUSDC-FUTURES"
        example: "USDT-FUTURES"
    
      - name: symbol
        in: query
        required: false
        description: trading pair
        schema:
          type: string
      - name: marginCoin
        in: query
        required: false
        description: margin coin
        schema:
          type: string
          example: "USDT"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/SinglePositionResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/position/all-position:
    get:
      tags: 
       -  Future Trading-Position
      summary: Get All Position
      description: "Frequency limit: 10 times/UID,Returns position information of based on ProductType."
      parameters:
      - name: productType
        in: query
        required: true
        description: Product type.
        schema:
          type: string
          enum:
            - "USDT-FUTURES"
            - "COIN-FUTURES"
            - "USDC-FUTURES"
            - "SUSDT-FUTURES"
            - "SCOIN-FUTURES"
            - "SUSDC-FUTURES"
        example: "USDT-FUTURES"
    
      - name: symbol
        in: query
        required: false
        description: trading pair
        schema:
          type: string
      - name: marginCoin
        in: query
        required: false
        description: margin coin
        schema:
          type: string
          example: "USDT"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/SinglePositionResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/position/history-position:
    get:
      tags: 
       -  Future Trading-Position
      summary: Get History Position
      description: "Frequency limit: 10 times/UID,Check position history (Only check the data within 3 months)."
      parameters:
        - name: symbol
          in: query
          description: The trading pair symbol (e.g., `BTCUSDT`).
          required: false
          schema:
            type: string
      
        - name: productType
          in: query
          description: The product type for futures.
          required: false
          schema:
            type: string
            enum:
              - USDT-FUTURES
              - COIN-FUTURES
              - USDC-FUTURES
              - SUSDT-FUTURES
              - SCOIN-FUTURES
              - SUSDC-FUTURES
      
        - name: idLessThan
          in: query
          description: Requests the content on the page before this ID (older data). Should be the `endId` of the corresponding interface.
          required: false
          schema:
            type: string
      
        - name: startTime
          in: query
          description: The start time in Unix timestamp (milliseconds). The time range is up to 3 months. Defaults to the last 3 months if empty.
          required: false
          schema:
            type: string
            format: int64
      
        - name: endTime
          in: query
          description: The end time in Unix timestamp (milliseconds). The time range is up to 3 months. Defaults to the last 3 months if empty.
          required: false
          schema:
            type: string
            format: int64
      
        - name: limit
          in: query
          description: The number of results to return. Default is 20, maximum is 100.
          required: false
          schema:
            type: string
            default: "20"
            enum:
              - "20"
              - "50"
              - "100"

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/HistoryPositionResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/order/place-order:
    post:
      tags: 
       -  Future Trading-Trade
      summary: Place Order
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      
      description: 'Rate limit: 10 requests/second/UID<br>Rate limit: 1 request/second/UID for copy trading traders<br><strong>Description</strong><br>Ignore the tradeSide parameter when position mode is in one-way-mode<br>In “hedge-mode”, when there is limit close order occupying the position, if the size of next market close order and limit close orders exceeds the position size, it will return an “insufficient position error” instead of cancelling the current limit order and executing the market order hedge position mode: Open long: "side"=buy, "tradeSide"=open; Close long: "side"=buy, "tradeSide"=close; Open short: "side"=sell,<br>"tradeSide"=open; Close short: "side"=sell, "tradeSide"=close; one-way position mode: "side"=buy and sell,<br>tradeSide: ignore'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlaceOrderRequest"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/order/click-backhand:
    post:
      tags: 
       -  Future Trading-Trade
      summary: Reversal
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReversalRequest"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/order/batch-place-order:
    post:
      tags: 
       -  Future Trading-Trade
      summary: Batch Order
      description: "Rate limit: 5 requests/second/UID<br>Rate limit: 1 request/second/UID for copy trading traders<br>Supports TP/SL feature. If the current underlying asset does not exist in the position, it is intended to preset the TP/SL. If the current underlying exists in the position, it is intended to modify the TP/SL<br>Ignore the tradeSide parameter when position mode is in one-way-mode"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchOrdersRequest"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/BatchPlaceResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/order/modify-order:
    post:
      tags: 
       -  Future Trading-Trade
      summary: Modify Order
      description: "Speed limit is 10 times/s for average users. Frequency limit imposed according to user ID<br>Interface for order modification, used to modify an pending order, such as its TP/SL and/or price/size.<br>Modifying size and price will cancel the old order; then create a new order asynchronously, modify the preset TPSL will not cancel the old order.<br>Modifying size and price, please pass in both, not just one of them<br>Modify the order price, size and preset TPSL according to orderId or clientOId<br>It is only allowed to modify the new status limit order. If the size, price and TPSL all is set in the request, then the TPSL will not work<br>Modify the limit order price and size, please be sure to provide newClientOid, because the orderId of the new order cannot be returned synchronously, so you need to use newClientOid to help you query order information<br>Modifying the order size needs to meet the minimum order quantity<br>If you only modify the TPSL, please do not pass price and size. If you only pass one of TP or SL, the other one will be cancelled"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModifyOrdersRequest"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/order/cancel-order:
    post:
      tags: 
       -  Future Trading-Trade
      summary: Cancel Order
      description: "Frequency limit: 10 times/1s"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelOrderRequest"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/order/batch-cancel-orders:
    post:
      tags: 
       -  Future Trading-Trade
      summary: Batch Cancel Order
      description: "Speed limit is 10 times/s for average users. Frequency limit imposed according to user ID.Order cancelling interface, can be used to cancel by product type and trading pair."
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelBatchOrderRequest"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/order/close-positions:
    post:
      tags: 
       -  Future Trading-Trade
      summary: Flash Clode Positions
      description: "Speed limit is 1 times/s"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FlashRequest"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/order/detail:
    get:
      tags: 
       -  Future Trading-Trade
      summary: Get order details
      description: "Speed limit is 1 times/s"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      
      parameters:
      - name: productType
        in: query
        required: true
        description: Product type.
        schema:
          type: string
          enum:
            - "USDT-FUTURES"
            - "COIN-FUTURES"
            - "USDC-FUTURES"
            - "SUSDT-FUTURES"
            - "SCOIN-FUTURES"
            - "SUSDC-FUTURES"
        example: "USDT-FUTURES"
    
      - name: symbol
        in: query
        required: false
        description: trading pair
        schema:
          type: string
      - name: orderId
        in: query
        required: false
        description: orer id
        schema:
          type: string
      - name: clientOid
        in: query
        required: false
        schema:
          type: string
        
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderInfoResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/order/fills:
    get:
      tags: 
       -  Future Trading-Trade
      summary: Get order fills
      description: "Speed limit is 10 times/s for average users. Frequency limit imposed according to user ID"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      
      parameters:
        - name: orderId
          in: query
          required: false
          schema:
            type: string
          description: "Order ID"
        - name: symbol
          in: query
          required: false
          schema:
            type: string
          description: "Trading pair, e.g., ETHUSDT"
        - name: productType
          in: query
          required: true
          schema:
            type: string
            enum:
              - USDT-FUTURES
              - COIN-FUTURES
              - USDC-FUTURES
              - SUSDT-FUTURES
              - SCOIN-FUTURES
              - SUSDC-FUTURES
          description: "Product type. Options include: USDT-FUTURES, COIN-FUTURES, USDC-FUTURES, SUSDT-FUTURES (USDT professional futures demo), SCOIN-FUTURES (Mixed futures demo), SUSDC-FUTURES (USDC professional futures demo)"
        - name: idLessThan
          in: query
          required: false
          schema:
            type: string
          description: "Requests the content on the page before the tradeId (older data)"
        - name: startTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: "Start time (timestamp in milliseconds). Maximum time span supported is three months. Default end time is three months if no value is set for the end time. For Managed Sub-Account, StartTime cannot be earlier than the binding time."
        - name: endTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: "End time (timestamp in milliseconds). Maximum time span supported is three months. Default start time is three months ago if no value is set for the start time."
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 100
            maximum: 100
          description: "Number of queries. Default: 100, maximum: 100."
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderFillsResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/order/fill-history:
    get:
      tags: 
       -  Future Trading-Trade
      summary: Get order fills history
      description: "Speed limit is 10 times/s for average users. Frequency limit imposed according to user ID"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      
      parameters:
        - name: orderId
          in: query
          required: false
          schema:
            type: string
          description: "Order ID"
        - name: symbol
          in: query
          required: false
          schema:
            type: string
          description: "Trading pair, e.g., ETHUSDT"
        - name: productType
          in: query
          required: true
          schema:
            type: string
            enum:
              - USDT-FUTURES
              - COIN-FUTURES
              - USDC-FUTURES
              - SUSDT-FUTURES
              - SCOIN-FUTURES
              - SUSDC-FUTURES
          description: "Product type. Options include: USDT-FUTURES, COIN-FUTURES, USDC-FUTURES, SUSDT-FUTURES (USDT professional futures demo), SCOIN-FUTURES (Mixed futures demo), SUSDC-FUTURES (USDC professional futures demo)"
        - name: idLessThan
          in: query
          required: false
          schema:
            type: string
          description: "Requests the content on the page before the tradeId (older data)"
        - name: startTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: "Start time (timestamp in milliseconds). Maximum time span supported is three months. Default end time is three months if no value is set for the end time. For Managed Sub-Account, StartTime cannot be earlier than the binding time."
        - name: endTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: "End time (timestamp in milliseconds). Maximum time span supported is three months. Default start time is three months ago if no value is set for the start time."
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 100
            maximum: 100
          description: "Number of queries. Default: 100, maximum: 100."
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderFillsResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/order/orders-pending:
    get:
      tags: 
       -  Future Trading-Trade
      summary: Get pending orders
      description: "Rate limit: 10 req/sec/UID"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      parameters:
        - name: orderId
          in: query
          required: false
          schema:
            type: string
          description: "Order ID. If both `orderId` and `clientOid` are entered, `orderId` prevails."
        - name: clientOid
          in: query
          required: false
          schema:
            type: string
          description: "Custom order ID. If both `orderId` and `clientOid` are entered, `orderId` prevails."
        - name: symbol
          in: query
          required: false
          schema:
            type: string
          description: "Trading pair, e.g., ETHUSDT"
        - name: productType
          in: query
          required: true
          schema:
            type: string
            enum:
              - USDT-FUTURES
              - COIN-FUTURES
              - USDC-FUTURES
              - SUSDT-FUTURES
              - SCOIN-FUTURES
              - SUSDC-FUTURES
          description: |
            Product type. Options include:
            - USDT-FUTURES: USDT professional futures
            - COIN-FUTURES: Mixed futures
            - USDC-FUTURES: USDC professional futures
            - SUSDT-FUTURES: USDT professional futures demo
            - SCOIN-FUTURES: Mixed futures demo
            - SUSDC-FUTURES: USDC professional futures demo
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - live
              - partially_filled
          description: |
            Order status. If not specified, all orders with a status of "live" (not filled yet) will be returned.
            - live: pending orders
            - partially_filled: Partially filled orders
        - name: idLessThan
          in: query
          required: false
          schema:
            type: string
          description: "Requests the content on the page before this ID (older data). The value should be the `endId` from the corresponding interface."
        - name: startTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: |
            Start timestamp (Unix timestamp in milliseconds, e.g., 1597026383085).
            Maximum time span supported is three months. Default end time is three months if no value is set for the end time.
        - name: endTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: |
            End timestamp (Unix timestamp in milliseconds, e.g., 1597026383085).
            Maximum time span supported is three months. Default start time is three months ago if no value is set for the start time.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: "Number of queries. Maximum: 100, default: 100."
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderPendingResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/order/orders-history:
    get:
      tags: 
       -  Future Trading-Trade
      summary: Get Orders History
      description: "Rate limit: 10 req/sec/UID.Get history order(It only supports to get the data within 90days. The older data can be downloaded from web)"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      parameters:
      - name: orderId
        in: query
        required: false
        schema:
          type: string
        description: >
          Order ID. If both `orderId` and `clientOid` are entered, `orderId` prevails.
    
      - name: clientOid
        in: query
        required: false
        schema:
          type: string
        description: >
          Customize order ID. If both `orderId` and `clientOid` are entered, `orderId` prevails.
    
      - name: symbol
        in: query
        required: false
        schema:
          type: string
        description: >
          Trading pair, e.g., `ETHUSDT`.
    
      - name: productType
        in: query
        required: true
        schema:
          type: string
          enum: 
            - USDT-FUTURES
            - COIN-FUTURES
            - USDC-FUTURES
            - SUSDT-FUTURES
            - SCOIN-FUTURES
            - SUSDC-FUTURES
        description: >
          Product type. Available values:
          - `USDT-FUTURES`: USDT professional futures
          - `COIN-FUTURES`: Mixed futures
          - `USDC-FUTURES`: USDC professional futures
          - `SUSDT-FUTURES`: USDT professional futures demo
          - `SCOIN-FUTURES`: Mixed futures demo
          - `SUSDC-FUTURES`: USDC professional futures demo
    
      - name: idLessThan
        in: query
        required: false
        schema:
          type: string
        description: >
          Requests the content on the page before this ID (older data); the value input should be the `endId` of the previous request response.
    
      - name: orderSource
        in: query
        required: false
        schema:
          type: string
          enum:
            - normal
            - market
            - profit_market
            - loss_market
            - trader_delegate
            - trader_profit
            - trader_loss
            - reverse
            - trader_reverse
            - profit_limit
            - loss_limit
            - liquidation
            - delivery_close_long
            - delivery_close_short
            - pos_profit_limit
            - pos_profit_market
            - pos_loss_limit
            - pos_loss_market
        description: >
          Order source. Possible values include:
          - `normal`: Normal order
          - `market`: Market order
          - `profit_market`: Market TP order
          - `loss_market`: Market SL order
          - `trader_delegate`: Elite trade order
          - `trader_profit`: Trader takes profit
          - `trader_loss`: Trader stops loss
          - `reverse`: Reversed orders
          - `trader_reverse`: Reversed elite trades
          - `profit_limit`: Take-profit limit order
          - `loss_limit`: Stop-loss limit order
          - `liquidation`: Liquidation order
          - `delivery_close_long`: Close long positions
          - `delivery_close_short`: Close short positions
          - `pos_profit_limit`: Position take-profit limit order
          - `pos_profit_market`: Position take-profit market order
          - `pos_loss_limit`: Position stop-loss limit order
          - `pos_loss_market`: Position stop-loss market order
    
      - name: startTime
        in: query
        required: false
        schema:
          type: string
          format: date-time
        description: >
          Start timestamp in Unix milliseconds, e.g., 1597026383085.
          (For Managed Sub-Account, the `startTime` cannot be earlier than the binding time).
    
      - name: endTime
        in: query
        required: false
        schema:
          type: string
          format: date-time
        description: >
          End timestamp in Unix milliseconds, e.g., 1597026383085.
    
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          default: 100
        description: >
          Number of queries. Maximum: 100, default: 100.
    
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderPendingResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/order/cancel-all-orders:
    post:
      tags: 
       -  Future Trading-Trade
      summary: Cancel All Order
      description: "Frequency limit: 10 times/1s"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelAllOrderRequest"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/order/plan-sub-orders:
    get:
      tags: 
       -  Future Trading-Triggers
      summary: Get trigger executed futures orders
      description: "Frequency limit: 10 times/1s"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      
      parameters:
      - name: planType
        in: query
        required: true
        schema:
          type: string
          enum:
            - normal_plan
            - track_plan
        description: |
          Trigger order type. Possible values:
          - `normal_plan`: average trigger order
          - `track_plan`: trailing stop order
    
      - name: planOrderId
        in: query
        required: true
        schema:
          type: string
        description: "Trigger order ID."
    
      - name: productType
        in: query
        required: true
        schema:
          type: string
          enum:
            - USDT-FUTURES
            - COIN-FUTURES
            - USDC-FUTURES
            - SUSDT-FUTURES
            - SCOIN-FUTURES
            - SUSDC-FUTURES
        description: |
          Product type. Possible values:
          - `USDT-FUTURES`: USDT professional futures
          - `COIN-FUTURES`: Mixed futures
          - `USDC-FUTURES`: USDC professional futures
          - `SUSDT-FUTURES`: USDT professional futures demo
          - `SCOIN-FUTURES`: Mixed futures demo
          - `SUSDC-FUTURES`: USDC professional futures demo

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/SubOrderResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/order/place-tpsl-order:
    post:
      tags: 
       -  Future Trading-Triggers
      summary: Stop-profit and stop-loss plan orders
      description: "Frequency limit: 10 times/1s"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TPSLRequest"

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/order/place-plan-order:
    post:
      tags: 
       -  Future Trading-Triggers
      summary: Place Trigger Order
      description: "Frequency limit: 10 times/1s"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlacePlanRequest"

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/order/modify-tpsl-order:
    post:
      tags: 
       -  Future Trading-Triggers
      summary: Modify the stop-profit and stop-loss plan order
      description: "Frequency limit: 10 times/1s"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModifyTPSLRequest"

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/order/modify-plan-order:
    post:
      tags: 
       -  Future Trading-Triggers
      summary: Modify Trigger Order
      description: "Frequency limit: 10 times/1s"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModifyPlanRequest"

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/order/orders-plan-pending:
    get:
      tags: 
       -  Future Trading-Triggers
      summary: Get Pending Trigger Order
      description: "Frequency limit: 10 times/1s"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      parameters:
      - name: orderId
        in: query
        description: "Trigger order ID. If both orderId and clientOid are provided, orderId prevails."
        required: false
        schema:
          type: string
    
      - name: clientOid
        in: query
        description: "Customized trigger order ID. If both orderId and clientOid are provided, orderId prevails."
        required: false
        schema:
          type: string
    
      - name: symbol
        in: query
        description: "Trading pair, e.g., ETHUSDT."
        required: false
        schema:
          type: string
    
      - name: planType
        in: query
        description: "Trigger order type."
        required: true
        schema:
          type: string
          enum:
            - normal_plan
            - track_plan
            - profit_loss
    
      - name: productType
        in: query
        description: |
          Product type options:
          - USDT-FUTURES: USDT professional futures
          - COIN-FUTURES: Mixed futures
          - USDC-FUTURES: USDC professional futures
          - SUSDT-FUTURES: USDT professional futures demo
          - SCOIN-FUTURES: Mixed futures demo
          - SUSDC-FUTURES: USDC professional futures demo
        required: true
        schema:
          type: string
          enum:
            - USDT-FUTURES
            - COIN-FUTURES
            - USDC-FUTURES
            - SUSDT-FUTURES
            - SCOIN-FUTURES
            - SUSDC-FUTURES
    
      - name: idLessThan
        in: query
        description: "Requests the content on the page before this ID (older data). The value input should be the endId of the corresponding interface."
        required: false
        schema:
          type: string
    
      - name: startTime
        in: query
        description: "Start timestamp in Unix timestamp format (milliseconds). E.g., 1597026383085."
        required: false
        schema:
          type: string
    
      - name: endTime
        in: query
        description: "End timestamp in Unix timestamp format (milliseconds). E.g., 1597026383085."
        required: false
        schema:
          type: string
    
      - name: limit
        in: query
        description: "Number of queries (default: 100, maximum: 100)."
        required: false
        schema:
          type: string
          default: "100"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderPendingResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/order/cancel-plan-order:
    post:
      tags: 
       -  Future Trading-Triggers
      summary: Cancel Trigger Order
      description: "Frequency limit: 10 times/1s"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TriggerOrderRequest"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /mix/order/orders-plan-history:
    get:
      tags: 
       -  Future Trading-Triggers
      summary: Get History Trigger Order
      description: "Frequency limit: 10 times/1s"
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      - PassphraseAuth: []
      - TimestampAuth: []
      parameters:
        - name: orderId
          in: query
          description: Order ID. Either `orderId` or `clientOid` is required.
          required: false
          schema:
            type: string
        - name: clientOid
          in: query
          description: Customized order ID. Either `orderId` or `clientOid` is required.
          required: false
          schema:
            type: string
        - name: planType
          in: query
          description: Type of order plan (e.g., trigger order, trailing stop order).
          required: true
          schema:
            type: string
            enum:
              - normal_plan
              - track_plan
              - profit_loss
        - name: planStatus
          in: query
          description: Status of the trigger order.
          required: false
          schema:
            type: string
            enum:
              - executed
              - fail_trigger
              - cancelled
        - name: symbol
          in: query
          description: Trading pair, e.g., ETHUSDT.
          required: false
          schema:
            type: string
        - name: productType
          in: query
          description: Product type for the futures.
          required: true
          schema:
            type: string
            enum:
              - USDT-FUTURES
              - COIN-FUTURES
              - USDC-FUTURES
              - SUSDT-FUTURES
              - SCOIN-FUTURES
              - SUSDC-FUTURES
        - name: idLessThan
          in: query
          description: Requests content before this ID (older data).
          required: false
          schema:
            type: string
        - name: startTime
          in: query
          description: Start timestamp in milliseconds (e.g., 1597026383085).
          required: false
          schema:
            type: integer
            format: int64
        - name: endTime
          in: query
          description: End timestamp in milliseconds (e.g., 1597026383085).
          required: false
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          description: Number of queries to retrieve (default is 100, max is 100).
          required: false
          schema:
            type: integer
            default: 100
            maximum: 100
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
               allOf:
                - $ref: "#/components/schemas/GeneralResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/OrderPendingResponse"
                
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    
        
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: ACCESS-KEY
      description: Your API key for authentication

    SignatureAuth:
      type: apiKey
      in: header
      name: ACCESS-SIGN
      description: Signature for the request, generated based on the API secret and request parameters

    PassphraseAuth:
      type: apiKey
      in: header
      name: ACCESS-PASSPHRASE
      description: Passphrase for additional security

    TimestampAuth:
      type: apiKey
      in: header
      name: ACCESS-TIMESTAMP
      description: Timestamp for the request in Unix milliseconds
  schemas:
    ErrorResponse:
      type: object
      properties:
        msg:
          type: string
          example: "Invalid content type"
        code:
          type: integer
          example: 40007
    GeneralResponse:
      type: object
      properties:
        code:
          type: string
          example: "0000"
        msg:
          type: string
          example: "success"
        requestTime:
          type: number
          example: 1695808949356
    CoinInfo:
      type: object
      properties:
        coinId:
          type: string
          example: "1"
        coin:
          type: string
          example: "BTC"
        transfer:
          type: boolean
          example: true
        chains:
          type: array
          items:
            $ref: '#/components/schemas/Chain'
    Chain:
      type: object
      properties:
        chain:
          type: string
          example: "BTC"
        needTag:
          type: boolean
          example: false
        withdrawable:
          type: boolean
          example: true
        rechargeable:
          type: boolean
          example: true
        withdrawFee:
          type: string
          format: double
          example: "0.005"
        extraWithdrawFee:
          type: string
          format: double
          example: "0"
        depositConfirm:
          type: integer
          example: 1
        withdrawConfirm:
          type: integer
          example: 1
        minDepositAmount:
          type: string
          format: double
          example: "0.001"
        minWithdrawAmount:
          type: string
          format: double
          example: "0.001"
        browserUrl:
          type: string
          format: uri
          example: "https://blockchair.com/bitcoin/testnet/transaction/"
        contractAddress:
          type: string
          example: "0xdac17f958d2ee523a2206206994597c13d831ec7"
        withdrawStep:
          type: string
          example: "0"
        withdrawMinScale:
          type: integer
          example: 8
        congestion:
          type: string
          example: "normal"
    SymbolInfo:
      type: object
      properties:
        symbol:
          type: string
          example: "BTCUSDT"
        baseCoin:
          type: string
          example: "BTC"
        quoteCoin:
          type: string
          example: "USDT"
        minTradeAmount:
          type: string
          format: double
          example: "0.0001"
        maxTradeAmount:
          type: string
          format: double
          example: "10000"
        takerFeeRate:
          type: string
          format: double
          example: "0.001"
        makerFeeRate:
          type: string
          format: double
          example: "0.001"
        pricePrecision:
          type: integer
          example: 4
        quantityPrecision:
          type: integer
          example: 8
        quotePrecision:
          type: integer
          example: 4
        minTradeUSDT:
          type: string
          format: double
          example: "5"
        status:
          type: string
          example: "online"
        buyLimitPriceRatio:
          type: string
          format: double
          example: "0.05"
        sellLimitPriceRatio:
          type: string
          format: double
          example: "0.05"
        orderQuantity:
          type: string
          format: double
          example: "100"
        areaSymbol:
          type: string
          example: "no"
    VIPFeeInfo:
      type: object
      properties:
        level:
          type: integer
          example: 1
        dealAmount:
          type: string
          format: double
          example: "1000000"
        assetAmount:
          type: string
          format: double
          example: "50000"
        takerFeeRate:
          type: string
          format: double
          example: "0"
        makerFeeRate:
          type: string
          format: double
          example: "0"
        btcWithdrawAmount:
          type: string
          format: double
          example: "300"
        usdtWithdrawAmount:
          type: string
          format: double
          example: "5000000"
    TickerInfo:
      type: object
      properties:
        symbol:
          type: string
          description: Trading pair
          example: "BTCUSDT"
        high24h:
          type: string
          format: double
          description: 24h highest price
          example: "40000"
        open:
          type: string
          format: double
          description: 24h open price
          example: "39000"
        lastPr:
          type: string
          format: double
          description: Latest price
          example: "39500"
        low24h:
          type: string
          format: double
          description: 24h lowest price
          example: "38000"
        quoteVolume:
          type: string
          format: double
          description: Trading volume in quote currency
          example: "5000000"
        baseVolume:
          type: string
          format: double
          description: Trading volume in base currency
          example: "130"
        usdtVolume:
          type: string
          format: double
          description: Trading volume in USDT
          example: "3000000"
        bidPr:
          type: string
          format: double
          description: Bid 1 price
          example: "39400"
        askPr:
          type: string
          format: double
          description: Ask 1 price
          example: "39600"
        bidSz:
          type: string
          format: double
          description: Buying 1 amount
          example: "1.5"
        askSz:
          type: string
          format: double
          description: Selling 1 amount
          example: "1.2"
        openUtc:
          type: string
          format: double
          description: UTC±00:00 Entry price
          example: "39000"
        ts:
          type: string
          description: Current time Unix millisecond timestamp
          example: "1690196141868"
        changeUtc24h:
          type: string
          format: double
          description: Change at UTC+0, 0.01 means 1%
          example: "0.02"
        change24h:
          type: string
          format: double
          description: 24-hour change, 0.01 means 1%
          example: "0.03"
    MergeDepth:
      type: object
      properties:
        asks:
          type: array
          description: List of ask orders
          items:
            $ref: '#/components/schemas/Order'
        bids:
          type: array
          description: List of bid orders
          items:
            $ref: '#/components/schemas/Order'
        ts:
          type: string
          description: Current time Unix millisecond timestamp
          example: "1622102974025"
        scale:
          type: string
          description: Scale level used in the response
          example: "0.1"
        precision:
          type: string
          description: Price precision level
          example: "scale0"
        isMaxPrecision:
          type: string
          description: Indicates if this is the maximum precision
          example: "YES"
    Order:
      type: array
      items:
        type: string
        example: ["38084.5", "0.0039"]
    OrderBook:
      type: object
      properties:
        asks:
          type: array
          description: List of ask orders
          items:
            $ref: '#/components/schemas/Order'
        bids:
          type: array
          description: List of bid orders
          items:
            $ref: '#/components/schemas/Order'
        ts:
          type: string
          description: Current time Unix millisecond timestamp
          example: "1622102974025"
    Candles:
      type: array
      description: An entry in chart data containing timestamp, open, high, low, close prices, volume, and quote volume
      items:
        type: string
      example:
        - "1656604800000"     # Timestamp in Unix milliseconds
        - "37834.5"           # Open price
        - "37849.5"           # High price
        - "37773.5"           # Low price
        - "37773.5"           # Close price
        - "428.3462"          # Volume
        - "16198849.1079"     # Quote volume
        - "16198849.1079"     # Additional quote volume
    Trade:
      type: object
      properties:
        symbol:
          type: string
          description: Trading pair, e.g., "BFTUSDT"
          example: "BFTUSDT"
        tradeId:
          type: string
          description: Unique identifier for the trade
          example: "1"
        side:
          type: string
          description: The side of the trade, either "buy" or "sell"
          enum:
            - buy
            - sell
          example: "buy"
        price:
          type: string
          description: Price at which the trade occurred
          example: "2.38735"
        size:
          type: string
          description: Size of the trade
          example: "2470.6224"
        ts:
          type: string
          description: Timestamp of the trade in Unix milliseconds
          example: "1622097282536"
    OrderRequest:
      type: object
      properties:
        symbol:
          type: string
          description: Trading pair name, e.g., BTCUSDT. All symbols can be returned by the Get Symbol Info interface.
          example: "BTCUSDT"
        side:
          type: string
          enum:
            - buy
            - sell
          description: Order direction.
          example: "buy"
        orderType:
          type: string
          enum:
            - limit
            - market
          description: Order type.
          example: "limit"
        force:
          type: string
          enum:
            - gtc
            - post_only
            - fok
            - ioc
          description: Execution strategy (invalid when orderType is market).
          example: "gtc"
        price:
          type: string
          description: Limit price. The decimal places of price and the price step can be returned by the Get Symbol Info interface.
          example: "38000.5"
        size:
          type: string
          description: Amount. For Limit and Market-Sell orders, it represents the number of base coins. For Market-Buy orders, it represents the number of quote coins. The decimal places of amount can be obtained through the Get Symbol Info interface.
          example: "0.5"
        clientOid:
          type: string
          description: Customized order ID. The idempotency time is 6 hours, only valid when orders are unfilled. It's invalid when tpslType is tpsl.
          example: "order123"
        triggerPrice:
          type: string
          description: SPOT TP/SL trigger price, only required in SPOT TP/SL order.
          example: "37900"
        tpslType:
          type: string
          enum:
            - normal
            - tpsl
          description: Order type. Default is normal.
          example: "normal"
        requestTime:
          type: string
          format: int64
          description: Request time in Unix millisecond timestamp.
          example: "1690196141868"
        receiveWindow:
          type: string
          format: int64
          description: Valid time window in Unix millisecond timestamp. If set, the request is valid only when the time range between the timestamp in the request and the time that server received the request is within receiveWindow.
          example: "60000"  # 1 minute
        stpMode:
          type: string
          enum:
            - none
            - cancel_taker
            - cancel_maker
            - cancel_both
          description: STP Mode (Self Trade Prevention). Default is none.
          example: "none"
        presetTakeProfitPrice:
          type: string
          description: Take profit price. It's invalid when tpslType is tpsl. The decimal places of price and the price step can be returned by the Get Symbol Info interface.
          example: "38500"
        executeTakeProfitPrice:
          type: string
          description: Take profit execute price. It's invalid when tpslType is tpsl. The decimal places of price and the price step can be returned by the Get Symbol Info interface.
          example: "38400"
        presetStopLossPrice:
          type: string
          description: Stop loss price. It's invalid when tpslType is tpsl. The decimal places of price and the price step can be returned by the Get Symbol Info interface.
          example: "37700"
        executeStopLossPrice:
          type: string
          description: Stop loss execute price. It's invalid when tpslType is tpsl. The decimal places of price and the price step can be returned by the Get Symbol Info interface.
          example: "37800"
      required:
        - symbol
        - side
        - orderType
        - force
        - size
    OrderResponse:
      type: object
      properties:
        orderId:
          type: string
          example: "1001"
        clientOid:
          type: string
          example: "121211212122"
    OrderUpdateRequest:
      type: object
      properties:
        symbol:
          type: string
          description: Trading pair name, e.g., BTCUSDT. All symbols can be returned by the Get Symbol Info interface.
          example: "BTCUSDT"
        price:
          type: string
          description: Limit price. The decimal places of price and the price step can be returned by the Get Symbol Info interface.
          example: "38000.5"
        size:
          type: string
          description: Amount, representing the number of base coins.
          example: "0.5"
        clientOid:
          type: string
          description: Client Order ID. Either orderId or clientOid is required.
          example: "order123"
        orderId:
          type: string
          description: Order ID. Either orderId or clientOid is required.
          example: "xxxxxxxxxxxxxxx"
        newClientOid:
          type: string
          description: New customized order ID. The idempotency time is 6 hours, only valid when orders are unfilled.
          example: "newOrder123"
        presetTakeProfitPrice:
          type: string
          description: Take profit price. The decimal places of price and the price step can be returned by the Get Symbol Info interface.
          example: "38500"
        executeTakeProfitPrice:
          type: string
          description: Take profit execute price. The decimal places of price and the price step can be returned by the Get Symbol Info interface.
          example: "38400"
        presetStopLossPrice:
          type: string
          description: Stop loss price. The decimal places of price and the price step can be returned by the Get Symbol Info interface.
          example: "37700"
        executeStopLossPrice:
          type: string
          description: Stop loss execute price. The decimal places of price and the price step can be returned by the Get Symbol Info interface.
          example: "37800"
      required:
        - symbol
        - price
        - size
      oneOf:
        - required:
            - orderId
        - required:
            - clientOid
    OrderUpdateResponse:
      type: object
      properties:
        orderId:
          type: string
          description: Unique identifier for the order.
          example: "xxxxxxxxxxxxxxx"
        clientOid:
          type: string
          nullable: true
          description: Custom order ID assigned by the client.
          example: null
        success:
          type: string
          description: Indicates if the request was successful.
          example: "success"
        msg:
          type: string
          nullable: true
          description: Additional message, if any.
          example: null
      required:
        - orderId
        - success    
    BatchOrderRequest:
      type: array
      items:
        type: object
        properties:
          orderId:
            type: string
            description: Unique identifier for the order.
            example: "xxxxxxxxxxxxxxxxx"
          clientOid:
            type: string
            nullable: true
            description: Custom order ID assigned by the client. Can be empty.
            example: ""
          symbol:
            type: string
            description: Trading pair name, e.g., BTCUSDT.
            example: "BTCUSDT"
          price:
            type: string
            description: Price at which the order was placed.
            example: "3.17"
          size:
            type: string
            description: Amount of the order.
            example: "5"
        required:
          - orderId
          - symbol
          - price
          - size
    CancelRequest:
      type: object
      properties:
        symbol:
          type: string
          description: Trading pair name, e.g. BTCUSDT. Not required when tpslType is 'tpsl'.
        tpslType:
          type: string
          description: |
            Order type, default: 'normal'. 'normal' for spot orders, 'tpsl' for spot TP/SL orders.
        orderId:
          type: string
          description: Order ID. Required when tpslType is 'tpsl'. Either orderId or clientOid is required.
        clientOid:
          type: string
          description: Client Order ID. Either orderId or clientOid is required.

      required:
        - symbol
    BatchPlaceRequest:
      type: object
      properties:
        symbol:
          type: string
          description: Trading pair name, e.g. BTCUSDT. Not required when batchMode is 'multiple'.
        batchMode:
          type: string
          description: Batch order mode. 'single' for single currency mode (default), 'multiple' for cross-currency mode. If in single mode, the symbol in orderList will be ignored. In multiple mode, the symbol in orderList is required.
          enum: [single, multiple]
        orderList:
          type: array
          description: 'Collection of placing orders, maximum length: 50.'
          items:
            type: object
            properties:
              symbol:
                type: string
                description: Trading pair name, e.g. BTCUSDT. Not required when batchMode is 'single'.
              side:
                type: string
                description: Order direction. Can be 'buy' or 'sell'.
                enum: [buy, sell]
              orderType:
                type: string
                description: Order type. Can be 'limit' for limit orders or 'market' for market orders.
                enum: [limit, market]
              force:
                type: string
                description: Execution strategy. This is invalid when orderType is 'market'.
                enum: [gtc, post_only, fok, ioc]
              price:
                type: string
                description: Limit price. The decimal places of price and the price step can be returned by the Get Symbol Info interface.
              size:
                type: string
                description: Amount. For limit and market-sell orders, it represents the number of base coins. For market-buy orders, it represents the number of quote coins. The decimal places of amount can be obtained through the Get Symbol Info interface.
                example: "5"
              clientOid:
                type: string
                description: Custom order ID. The idempotency time is 6 hours, only valid when orders are unfilled.
              stpMode:
                type: string
                description: STP mode. Default is 'none'.
                enum: [none, cancel_taker, cancel_maker, cancel_both]
              presetTakeProfitPrice:
                type: string
                description: Take profit price. The decimal places of price and the price step can be returned by the Get Symbol Info interface.
              executeTakeProfitPrice:
                type: string
                description: Take profit execute price. The decimal places of price and the price step can be returned by the Get Symbol Info interface.
              presetStopLossPrice:
                type: string
                description: Stop loss price. The decimal places of price and the price step can be returned by the Get Symbol Info interface.
              executeStopLossPrice:
                type: string
                description: Stop loss execute price. The decimal places of price and the price step can be returned by the Get Symbol Info interface.
            required:
              - side
              - orderType
              - force
              - size

      required:
        - orderList

      example:
        symbol: "BTCUSDT"
        batchMode: "single"
        orderList:
          - symbol: "BTCUSDT"
            side: "buy"
            orderType: "limit"
            force: "gtc"
            price: "3.17"
            size: "5"
            clientOid: "customOrderId123"
            stpMode: "none"
            presetTakeProfitPrice: "4.00"
            executeTakeProfitPrice: "4.00"
            presetStopLossPrice: "2.00"
            executeStopLossPrice: "2.00"
    BatchPlaceResponse:
      type: object
      properties:
        successList:
          type: array
          description: List of successfully processed orders.
          items:
            $ref: '#/components/schemas/SuccessOrder'
        failureList:
          type: array
          description: List of failed orders.
          items:
            $ref: '#/components/schemas/FailureOrder'
      example:
        successList:
          - orderId: "121211212122"
            clientOid: "1"
        failureList:
          - orderId: "121211212122"
            clientOid: "1"
            errorMsg: "clientOrderId duplicate"
    SuccessOrder:
      type: object
      properties:
        orderId:
          type: string
          description: Unique identifier for the order.
        clientOid:
          type: string
          description: Client-specified order ID.
      required:
        - orderId
        - clientOid
      example:
        orderId: "121211212122"
        clientOid: "1"
    FailureOrder:
      type: object
      properties:
        orderId:
          type: string
          description: Unique identifier for the order that failed.
        clientOid:
          type: string
          description: Client-specified order ID.
        errorMsg:
          type: string
          description: Error message explaining why the order failed.
      required:
        - orderId
        - clientOid
        - errorMsg
      example:
        orderId: "121211212122"
        clientOid: "1"
        errorMsg: "clientOrderId duplicate"
    BatchCancelRequest:
      type: object
      properties:
        symbol:
          type: string
          description: Trading pair name, e.g. BTCUSDT
        batchMode:
          type: string
          enum: [single, multiple]
          description: Batch order mode. Default is single.
        orderList:
          type: array
          description: 'Collection of placing orders, maximum length: 50'
          items:
            type: object
            properties:
              orderId:
                type: string
                description: Unique identifier for the order.
              symbol:
                type: string
                description: Trading pair name, e.g. BTCUSDT.
              clientOid:
                type: string
                description: Client Order ID.
            required:
              - orderId
              - symbol
              - clientOid
      required:
        - orderList
      example:
        symbol: "BTCUSDT"
        batchMode: "multiple"
        orderList:
          - orderId: "121211212122"
            symbol: "BTCUSDT"
            clientOid: "121211212122"
    OrderInfoResponse:
      type: object
      properties:
        userId:
          type: string
          description: User identifier.
        symbol:
          type: string
          description: Trading pair name, e.g. BTCUSDT.
        orderId:
          type: string
          description: Unique identifier for the order.
        clientOid:
          type: string
          description: Custom order ID.
        price:
          type: string
          description: Limit price (0 for market orders).
        size:
          type: string
          description: Amount of base currency for the order.
        orderType:
          type: string
          description: Type of order (e.g., market).
        side:
          type: string
          description: Direction of the order (buy/sell).
        status:
          type: string
          description: Current status of the order (e.g., filled).
        priceAvg:
          type: string
          description: Average price at which the order was filled.
        baseVolume:
          type: string
          description: Volume of base currency for the order.
        quoteVolume:
          type: string
          description: Volume of quote currency for the order.
        enterPointSource:
          type: string
          description: Source of the order entry (e.g., API).
        feeDetail:
          type: string
          description: JSON string detailing fee information.
        orderSource:
          type: string
          description: Source of the order (e.g., market).
        cancelReason:
          type: string
          description: Reason for order cancellation (if applicable).
        cTime:
          type: string
          description: Creation time of the order in Unix milliseconds.
        uTime:
          type: string
          description: Last update time of the order in Unix milliseconds.
      required:
        - userId
        - symbol
        - orderId
        - clientOid
        - price
        - size
        - orderType
        - side
        - status
        - priceAvg
        - baseVolume
        - quoteVolume
        - enterPointSource
        - feeDetail
        - orderSource
        - cTime
        - uTime
    TradeFillsResponse:
      type: object
      properties:
        userId:
          type: string
          description: User identifier.
        symbol:
          type: string
          description: Trading pair (e.g., BTCUSDT).
        orderId:
          type: string
          description: Unique identifier for the order.
        tradeId:
          type: string
          description: Unique identifier for the trade.
        orderType:
          type: string
          description: Type of the order (e.g., market, limit).
        side:
          type: string
          description: Direction of the order (buy/sell).
        priceAvg:
          type: string
          description: Average price at which the order was executed.
        size:
          type: string
          description: Size of the order.
        amount:
          type: string
          description: Amount involved in the trade.
        feeDetail:
          type: object
          properties:
            deduction:
              type: string
              description: Indicates if a deduction occurred (e.g., yes/no).
            feeCoin:
              type: string
              description: The coin used for the fee.
            totalDeductionFee:
              type: string
              description: Total deduction fee applied.
            totalFee:
              type: string
              description: Total fee charged for the trade.
        tradeScope:
          type: string
          description: Scope of the trade (e.g., taker, maker).
        cTime:
          type: string
          description: Creation time of the order (Unix millisecond timestamp).
        uTime:
          type: string
          description: Last update time of the order (Unix millisecond timestamp).
    PlanOrderRequest:
      type: object
      properties:
        symbol:
          type: string
          description: Trading pair name (e.g., BTCUSDT).
          example: "BTCUSDT"
        side:
          type: string
          description: Direction of the order.
          enum:
            - "buy"
            - "sell"
          example: "buy"
        triggerPrice:
          type: string
          description: Trigger price for the order.
          example: "30000"
        orderType:
          type: string
          description: Type of order.
          enum:
            - "limit"
            - "market"
          example: "limit"
        executePrice:
          type: string
          description: Execution price (required when orderType is limit).
          example: "29950"
        planType:
          type: string
          description: Order type plan.
          enum:
            - "amount"
            - "total"
          default: "amount"
          example: "amount"
        size:
          type: string
          description: Quantity to buy.
          example: "0.5"
        triggerType:
          type: string
          description: Trigger type for the order.
          enum:
            - "fill_price"
            - "mark_price"
          example: "mark_price"
        clientOid:
          type: string
          description: Client customized ID, only valid when orders are unfilled.
          example: "custom_order_id"
        force:
          type: string
          description: Execution strategy.
          default: "gtc"
          enum:
            - "gtc"
            - "post_only"
            - "fok"
            - "ioc"
          example: "gtc"
        stpMode:
          type: string
          description: STP Mode.
          default: "none"
          enum:
            - "none"
            - "cancel_taker"
            - "cancel_maker"
            - "cancel_both"
          example: "none"
    ModifyOrderRequest:
      type: object
      required:
        - triggerPrice
        - orderType
        - size
      properties:
        orderId:
          type: string
          description: Either 'orderId' or 'clientOid' is required.
          example: "1234567890"
        clientOid:
          type: string
          description: Either 'orderId' or 'clientOid' is required.
          example: "custom_order_id"
        triggerPrice:
          type: string
          description: Trigger price.
          example: "30000"
        orderType:
          type: string
          description: Type of order.
          enum:
            - "limit"
            - "market"
          example: "limit"
        executePrice:
          type: string
          description: Execution price (required when orderType is limit).
          example: "29950"
        size:
          type: string
          description: Quantity to buy. If `planType=amount`, the quote currency is the base coin. If `planType=total`, the quote currency is the quote coin.
          example: "0.5"
    CurrentPlanResponse:
      type: object
      properties:
        nextFlag:
          type: boolean
          description: Indicates if there are more records to fetch.
          example: false
        idLessThan:
          type: string
          description: Requests the content on the page before this ID (older data).
          example: "1"
        orderList:
          type: array
          description: Collection of order details.
          items:
            type: object
            properties:
              orderId:
                type: string
                description: Unique identifier for the order.
                example: "121211212122"
              clientOid:
                type: string
                description: Client-defined order ID.
                example: "121211212122"
              symbol:
                type: string
                description: Trading pair name, e.g., TRXUSDT.
                example: "TRXUSDT"
              size:
                type: string
                description: Quantity of the asset to buy.
                example: "151"
              executePrice:
                type: string
                description: Price at which the order will execute.
                example: "0.041572"
              triggerPrice:
                type: string
                description: Price at which the order will be triggered.
                example: "0.041572"
              status:
                type: string
                description: Current status of the order.
                example: "not_trigger"
              orderType:
                type: string
                description: Type of order.
                enum:
                  - "limit"
                  - "market"
                example: "limit"
              side:
                type: string
                description: Order direction.
                enum:
                  - "buy"
                  - "sell"
                example: "buy"
              planType:
                type: string
                description: Specifies the type of order amount.
                enum:
                  - "amount"
                  - "total"
                example: "amount"
              triggerType:
                type: string
                description: Type of trigger for the order.
                enum:
                  - "fill_price"
                  - "mark_price"
                example: "fill_price"
              enterPointSource:
                type: string
                description: Source of the order entry.
                example: "API"
              uTime:
                type: string
                description: Unix timestamp in milliseconds when the order was last updated.
                example: "1668134576563"
              cTime:
                type: string
                description: Unix timestamp in milliseconds when the order was created.
                example: "1668134576563"
    PlanSubOrderResponse:
      type: object
      properties:
        orderId:
          type: string
          description: Unique identifier for the order.
          example: "xxxxxxxxxxxxx"
        price:
          type: string
          description: The price of the order.
          example: "0.4188"
        type:
          type: string
          description: Type of order.
          enum:
            - "limit"
            - "market"
          example: "limit"
        status:
          type: string
          description: Current status of the order.
          example: "success"
    AccountResponse:
      type: object
      properties:
        userId:
          type: string
          description: User ID.
        inviterId:
          type: string
          description: Inviter's user ID.
        channelCode:
          type: string
          description: Affiliate referral code.
        channel:
          type: string
          description: Affiliate channel.
        ips:
          type: string
          description: IP whitelist.
        authorities:
          type: array
          items:
            type: string
            enum:
              - "readonly"
              - "coor"
              - "cpor"
              - "stor"
              - "smor"
              - "ttor"
              - "wtor"
              - "taxr"
              - "chor"
              - "p2pr"
              - "coow"
              - "cpow"
              - "stow"
              - "smow"
              - "ttow"
              - "wtow"
              - "wwow"
              - "chow"
              - "p2p"
          description: Permissions for the user.
        parentId:
          type: integer
          description: Main account user ID.
        traderType:
          type: string
          description: Indicates if the user is a trader.
          enum:
            - "trader"
            - "not_trader"
        regisTime:
          type: string
          description: Registration time in Unix millisecond timestamp.
    AccountAssetsResponse:
      type: object
      properties:
        coin:
          type: string
          description: "Token name, e.g., USDT."
        available:
          type: string
          description: "Available balance of the coin."
        frozen:
          type: string
          description: "Amount frozen for orders or other actions."
        locked:
          type: string
          description: "Amount locked and unavailable for trading."
        limitAvailable:
          type: string
          description: "Available amount within the specified limit."
        uTime:
          type: string
          description: "Last update time as a Unix timestamp."
    SubAccountAssetsResponse:
      type: object
      properties:
        userId:
          type: integer
          description: "User ID"
        assetsList:
          type: array
          items:
            $ref: '#/components/schemas/AssetDetail'
    AssetDetail:
      type: object
      properties:
        coin:
          type: string
          description: "Token name, e.g., BTC or ETH."
        available:
          type: string
          description: "Available balance of the coin."
        limitAvailable:
          type: string
          description: "Available amount within the specified limit."
        frozen:
          type: string
          description: "Amount frozen for orders or other actions."
        locked:
          type: string
          description: "Amount locked and unavailable for trading."
        uTime:
          type: string
          description: "Last update time as a Unix timestamp."
    ModifyRequest:
      type: object
      properties:
        accountType:
          type: string
          enum: ["spot","funding","coin-futures","usdt-futures","usdc-futures"]
        coin:
          type: string
          example: "USDT"
    AccountBillResponse:
      type: object
      properties:
        cTime:
          type: string
          format: int64
          description: "Creation time of the billing entry, Unix millisecond timestamp."
        coin:
          type: string
          description: "Token name, e.g., USDT."
        groupType:
          type: string
          enum: ["deposit", "withdraw", "transaction", "transfer", "other"]
          description: "Billing type."
        businessType:
          type: string
          enum: ["deposit", "withdraw", "buy", "sell", "deduction of handling fee", "transfer-in", "transfer-out", "rebate rewards", "airdrop rewards", "USDT contract rewards", "mix contract rewards", "system lock", "user lock"]
          description: "Type of business related to the billing entry."
        size:
          type: string
          description: "The quantity involved in this transaction."
        balance:
          type: string
          description: "Remaining balance after the transaction."
        fees:
          type: string
          description: "Fees associated with the transaction."
        billId:
          type: string
          description: "Unique identifier for the billing entry."
    TransferRequest:
      type: object
      properties:
        fromType:
          type: string
          enum: ["spot", "p2p", "coin_futures", "usdt_futures", "usdc_futures", "crossed_margin", "isolated_margin"]
          description: "Source account type for the transfer."
        toType:
          type: string
          enum: ["spot", "p2p", "coin_futures", "usdt_futures", "usdc_futures", "crossed_margin", "isolated_margin"]
          description: "Destination account type for the transfer."
        amount:
          type: string
          description: "Amount to transfer."
        coin:
          type: string
          description: "Currency of the transfer, e.g., USDT."
        symbol:
          type: string
          description: "Required when transferring to or from an account type that is a leveraged position-by-position account."
        clientOid:
          type: string
          description: "Custom order ID. Must be unique; duplicate clientOids will return results of the existing clientOid transfer."
    TransferResponse:
      type: object
      properties:
        transferId:
          type: string
          example: "123456"
        clientOid:
          type: string
          example: "x123"
    SubTransferRequest:
      type: object
      properties:
        fromType:
          type: string
          enum: ["spot", "p2p", "coin_futures", "usdt_futures", "usdc_futures", "crossed_margin", "isolated_margin"]
          description: "Source account type for the transfer."
        toType:
          type: string
          enum: ["spot", "p2p", "coin_futures", "usdt_futures", "usdc_futures", "crossed_margin", "isolated_margin"]
          description: "Destination account type for the transfer."
        amount:
          type: string
          description: "Amount to transfer."
        coin:
          type: string
          description: "Currency of the transfer, e.g., USDT."
        symbol:
          type: string
          description: "Required when transferring to or from an account type that is a leveraged position-by-position account."
        clientOid:
          type: string
          description: "Custom order ID. Must be unique; duplicate clientOids will return results of the existing clientOid transfer."
        fromUserId:
          type: string
          description: Outgoing Account UID
        toUserId:
          type: string
          description: Incoming Account UID
    WithdrawRequest:
      type: object
      required:
        - coin
        - transferType
        - address
        - size
      properties:
        coin:
          type: string
          description: Coin name (e.g., USDT). All available coins can be retrieved from the Get Coin Info interface.
        transferType:
          type: string
          enum: [on_chain, internal_transfer]
          description: Type of withdrawal. Options include 'on_chain' for on-chain withdrawal and 'internal_transfer' for internal transfers.
        address:
          type: string
          description: Withdrawal address. For 'on_chain', it represents the chain address. For 'internal_transfer', it could be UID, email, or mobile, based on innerToType.
        chain:
          type: string
          description: Chain network (e.g., erc20, trc20). This is required if the transferType is 'on_chain'. Chain names are available via the Get Coin Info interface.
        innerToType:
          type: string
          enum: [email, mobile, uid]
          description: Address type for internal withdrawals (default is 'uid').
        areaCode:
          type: string
          description: Required when innerToType is 'mobile' to specify the phone's country/region code.
        tag:
          type: string
          description: Address tag for specific coins like EOS, where this field is needed.
        size:
          type: string
          description: Amount to withdraw. For Bitcoin Lightning Network withdrawals, this should equal the invoice's deposit amount and exclude fees. Decimal precision details are available via the Get Coin Info interface.
        remark:
          type: string
          description: Optional note for the withdrawal request.
        clientOid:
          type: string
          description: Unique client-defined ID for tracking the withdrawal request.
    MainSubTransferResponse:
      type: object
      properties:
        coin:
          type: string
          description: The token name (e.g., USDT)
        status:
          type: string
          description: The transfer status (e.g., Successful)
        toType:
          type: string
          description: The account type to which the transfer is made (e.g., usdt_futures)
        fromType:
          type: string
          description: The account type from which the transfer is made (e.g., spot)
        size:
          type: string
          description: The amount transferred (e.g., 1020.00000000)
        ts:
          type: string
          format: int64
          description: Timestamp of the transfer in Unix milliseconds (e.g., 1691476360467)
        clientOid:
          type: string
          description: Client's unique custom order ID for the transfer
        transferId:
          type: string
          description: Unique ID for the transfer
        fromUserId:
          type: string
          description: ID of the user initiating the transfer
        toUserId:
          type: string
          description: ID of the user receiving the transfer
    TransferRecordResponse:
      type: object
      properties:
        coin:
          type: string
          description: Token name (e.g., BTC)
        status:
          type: string
          description: Transfer status (e.g., Successful)
        toType:
          type: string
          description: Account type to which the funds are transferred (e.g., usdt_futures)
        toSymbol:
          type: string
          description: Symbol of the account receiving the transfer, if applicable (e.g., BTC/USD)
        fromType:
          type: string
          description: Account type from which the funds are transferred (e.g., spot)
        fromSymbol:
          type: string
          description: Symbol of the account transferring the funds, if applicable (e.g., BTC/USD)
        size:
          type: string
          description: Transfer amount (e.g., 1000.00000000)
        ts:
          type: string
          format: int64
          description: Timestamp of the transfer in Unix milliseconds (e.g., 1631070374488)
        clientOid:
          type: string
          description: Unique client order ID for the transfer
        transferId:
          type: string
          description: Unique transfer ID
      required:
        - coin
        - status
        - toType
        - fromType
        - size
        - ts
        - clientOid
        - transferId
    DepositResponse:
      type: object
      properties:
        address:
          type: string
          description: "Deposit address"
        chain:
          type: string
          description: "Chain name"
        coin:
          type: string
          description: "Token name"
        tag:
          type: string
          description: "Tag associated with the address, required for some coins"
        url:
          type: string
          description: "URL of the blockchain address"
    SubaccountDepositResponse:
      type: object
      properties:
        orderId:
          type: string
          description: "Unique order ID"
        tradeId:
          type: string
          description: "Unique trade ID"
        coin:
          type: string
          description: "Coin name, e.g., USDT"
        size:
          type: string
          description: "Amount of the transfer"
        status:
          type: string
          description: "Status of the transfer, e.g., success"
        toAddress:
          type: string
          description: "Destination address"
        dest:
          type: string
          enum:
            - "on_chain"
            - "internal_transfer"
          description: "Transfer destination type"
        chain:
          type: string
          description: "Blockchain network, e.g., erc20"
        fromAddress:
          type: string
          description: "Source address"
        cTime:
          type: string
          description: "Creation time in Unix millisecond timestamp"
        uTime:
          type: string
          description: "Update time in Unix millisecond timestamp"
      required:
        - orderId
        - tradeId
        - coin
        - size
        - status
        - toAddress
        - dest
        - chain
        - fromAddress
        - cTime
        - uTime
    WithdrawResponse:
      type: object
      properties:
        orderId:
          type: string
          description: Unique order ID
        tradeId:
          type: string
          description: Unique trade ID
        coin:
          type: string
          description: Coin name (e.g., USDT)
        dest:
          type: string
          description: Destination of the transfer (e.g., external, internal)
        clientOid:
          type: string
          description: Client customized ID
        type:
          type: string
          description: The type of transaction (e.g., withdraw)
        tag:
          type: string
          description: Tag for certain coins, such as EOS
        size:
          type: string
          description: Transaction amount
        fee:
          type: string
          description: Transaction fee (can be negative in case of refund)
        status:
          type: string
          description: Transaction status (e.g., success, failed)
        toAddress:
          type: string
          description: Recipient address
        fromAddress:
          type: string
          description: Sender address
        confirm:
          type: string
          description: Number of confirmations required for the transaction
        chain:
          type: string
          description: Blockchain network (e.g., ERC20, TRC20)
        cTime:
          type: string
          format: int64
          description: Creation timestamp (Unix millisecond timestamp)
        uTime:
          type: string
          format: int64
          description: Last updated timestamp (Unix millisecond timestamp)
      required:
        - orderId
        - tradeId
        - coin
        - dest
        - type
        - size
        - status
        - toAddress
        - fromAddress
        - confirm
        - chain
        - cTime
        - uTime
    VIPFeeResponse:
      type: object
      properties:
        level:
          type: string
          description: The level of the transaction (e.g., "1")
        dealAmount:
          type: string
          description: The deal amount involved in the transaction
        assetAmount:
          type: string
          description: The asset amount available for the transaction
        takerFeeRate:
          type: string
          description: The taker fee rate applied to the transaction
        makerFeeRate:
          type: string
          description: The maker fee rate applied to the transaction
        btcWithdrawAmount:
          type: string
          description: The amount of BTC withdrawn
        usdtWithdrawAmount:
          type: string
          description: The amount of USDT withdrawn
      required:
        - level
        - dealAmount
        - assetAmount
        - takerFeeRate
        - makerFeeRate
        - btcWithdrawAmount
        - usdtWithdrawAmount
    InterestResponse:
      type: object
      properties:
        coin:
          type: string
          description: The coin name (e.g., USDT)
        historyInterestRateList:
          type: array
          description: A list of historical interest rates for the specified coin
          items:
            type: object
            properties:
              ts:
                type: string
                description: Timestamp of the record (Unix millisecond timestamp)
              annualInterestRate:
                type: string
                description: The annual interest rate for the given timestamp
              dailyInterestRate:
                type: string
                description: The daily interest rate for the given timestamp
            required:
              - ts
              - annualInterestRate
              - dailyInterestRate
      required:
        - coin
        - historyInterestRateList
    ExchangeResponse:
      type: object
      properties:
        coin:
          type: string
          description: The coin name (e.g., BTC)
        exchangeRateList:
          type: array
          description: A list of exchange rates for the specified coin
          items:
            type: object
            properties:
              tier:
                type: string
                description: The tier of the exchange rate
              minAmount:
                type: string
                description: The minimum amount for the exchange rate tier
              maxAmount:
                type: string
                description: The maximum amount for the exchange rate tier
              exchangeRate:
                type: string
                description: The exchange rate for the given tier
            required:
              - tier
              - minAmount
              - maxAmount
              - exchangeRate
      required:
        - coin
        - exchangeRateList
    DiscountResponse:
      type: object
      properties:
        coin:
          type: string
          description: The coin name (e.g., BTC)
        userLimit:
          type: string
          description: The user's limit for the coin
        totalLimit:
          type: string
          description: The total limit for the coin
        discountRateList:
          type: array
          description: A list of discount rates based on tiers and amounts
          items:
            type: object
            properties:
              tier:
                type: string
                description: The tier of the discount rate
              minAmount:
                type: string
                description: The minimum amount for the discount rate tier
              maxAmount:
                type: string
                description: The maximum amount for the discount rate tier
              discountRate:
                type: string
                description: The discount rate for the given tier
            required:
              - tier
              - minAmount
              - maxAmount
              - discountRate
      required:
        - coin
        - userLimit
        - totalLimit
        - discountRateList
    Asks:
      type: object
      properties:
        price:
          type: number
          description: "Price at which the ask is placed"
        quantity:
          type: number
          description: "Quantity available at the ask price"
    Bids:
      type: object
      properties:
        price:
          type: number
          description: "Price at which the bid is placed"
        quantity:
          type: number
          description: "Quantity available at the bid price"
    DepthResponse:
      type: object
      properties:
        ts:
          type: string
          description: "Timestamp of the data"
        scale:
          type: string
          description: "Price accuracy scale"
        precision:
          type: string
          description: "Quotation precision"
        isMaxPrecision:
          type: string
          description: "Whether the precision is at its maximum value"
        asks:
          type: array
          items:
            $ref: "#/components/schemas/Asks"
        bids:
          type: array
          items:
            $ref: "#/components/schemas/Bids"
    FutureTickerInfo:
      type: object
      properties:
        symbol:
          type: string
          description: "The trading symbol (e.g., ETHUSD_231229)"
        lastPr:
          type: string
          description: "The last traded price"
        askPr:
          type: string
          description: "The current ask price"
        bidPr:
          type: string
          description: "The current bid price"
        bidSz:
          type: string
          description: "The quantity available at the bid price"
        askSz:
          type: string
          description: "The quantity available at the ask price"
        high24h:
          type: string
          description: "The highest price in the last 24 hours"
        low24h:
          type: string
          description: "The lowest price in the last 24 hours"
        ts:
          type: string
          description: "Timestamp of the market data"
        change24h:
          type: string
          description: "The percentage change in the last 24 hours"
        baseVolume:
          type: string
          description: "Base currency volume in the last 24 hours"
        quoteVolume:
          type: string
          description: "Quote currency volume in the last 24 hours"
        usdtVolume:
          type: string
          description: "USDT volume in the last 24 hours"
        openUtc:
          type: string
          description: "Opening price in UTC"
        changeUtc24h:
          type: string
          description: "The 24-hour change in UTC"
        indexPrice:
          type: string
          description: "The current index price"
        fundingRate:
          type: string
          description: "The funding rate"
        holdingAmount:
          type: string
          description: "The total amount of assets held"
        deliveryStartTime:
          type: string
          description: "The start time for delivery"
        deliveryTime:
          type: string
          description: "The delivery time"
        deliveryStatus:
          type: string
          description: "The current delivery status (e.g., delivery_normal)"
        open24h:
          type: string
          description: "The open price in the last 24 hours"
        markPrice:
          type: string
          description: "The mark price"
    FutureFillsInfo:
      type: object
      properties:
        tradeId:
          type: string
          description: "The unique identifier for the trade"
        price:
          type: string
          description: "The price at which the trade was executed"
        size:
          type: string
          description: "The amount of the asset traded"
        side:
          type: string
          description: "The side of the trade (e.g., 'buy' or 'sell')"
        ts:
          type: string
          description: "Timestamp of when the trade occurred"
        symbol:
          type: string
          description: "The trading pair (e.g., BTCUSDT)"
    FutureFillHistoryInfo:
      type: object
      properties:
        tradeId:
          type: string
          example: "1"
        price:
          type: string
          example: "26372.5"
        size:
          type: string
          example: "9.25"
        side:
          type: string
          example: "Sell"
        ts:
          type: string
          example: "1695865151000"
        symbol:
          type: string
          example: "BTCUSDT"
    InterestsResponse:
      type: object
      properties:
        openInterestList:
          type: array
          items:
            type: object
            properties:
              symbol:
                type: string
                example: "BTCUSDT"
              size:
                type: string
                example: "34278.06"
    FundingTimeResponse:
      type: object
      properties:
        symbol:
          type: string
          example: "BTCUSDT"
        nextFundingTime:
          type: string
          example: "1695801600000"
        ratePeriod:
          type: string
          example: "8"
    SymbolPriceResponse:
      type: object
      properties:
        symbol:
          type: string
          example: "BTCUSDT"
        price:
          type: string
          example: "26242"
        indexPrice:
          type: string
          example: "34867"
        markPrice:
          type: string
          example: "25555"
        ts:
          type: string
          example: "1695793390482"
    FundingRateResponse:
      type: object
      properties:
        symbol:
          type: string
          example: "BTCUSDT"
        fundingRate:
          type: string
          example: "0.0007"
        fundingTime:  
          type: string
          example: "1695715200000"
    ContractConfigResponse:
      type: object
      properties:
        symbol:
          type: string
          example: "BTCUSDT"
        baseCoin:
          type: string
          example: "BTC"
        quoteCoin:
          type: string
          example: "USDT"
        buyLimitPriceRatio:
          type: string
          example: "0.9"
        sellLimitPriceRatio:
          type: string
          example: "0.9"
        feeRateUpRatio:
          type: string
          example: "0.1"
        makerFeeRate:
          type: string
          example: "0.0004"
        takerFeeRate:
          type: string
          example: "0.0006"
        openCostUpRatio:
          type: string
          example: "0.1"
        supportMarginCoins:
          type: array
          items:
            type: string
          example: ["USDT"]
        minTradeNum:
          type: string
          example: "0.01"
        priceEndStep:
          type: string
          example: "1"
        volumePlace:
          type: string
          example: "2"
        pricePlace:
          type: string
          example: "1"
        sizeMultiplier:
          type: string
          example: "0.01"
        symbolType:
          type: string
          example: "perpetual"
        minTradeUSDT:
          type: string
          example: "5"
        maxSymbolOrderNum:
          type: string
          example: "999999"
        maxProductOrderNum:
          type: string
          example: "999999"
        maxPositionNum:
          type: string
          example: "150"
        symbolStatus:
          type: string
          example: "normal"
        offTime:
          type: string
          example: "-1"
        limitOpenTime:
          type: string
          example: "-1"
        deliveryTime:
          type: string
          example: ""
        deliveryStartTime:
          type: string
          example: ""
        launchTime:
          type: string
          example: ""
        fundInterval:
          type: string
          example: "8"
        minLever:
          type: string
          example: "1"
        maxLever:
          type: string
          example: "125"
        posLimit:
          type: string
          example: "0.05"
        maintainTime:
          type: string
          example: "1680165535278"
    FutureAccountResponse:
      type: object
      properties:
        marginCoin:
          type: string
          example: "USDT"
        locked:
          type: string
          example: "0"
        available:
          type: string
          example: "13168.86110692"
        crossedMaxAvailable:
          type: string
          example: "13168.86110692"
        isolatedMaxAvailable:
          type: string
          example: "13168.86110692"
        maxTransferOut:
          type: string
          example: "13168.86110692"
        accountEquity:
          type: string
          example: "13178.86110692"
        usdtEquity:
          type: string
          example: "13178.861106922"
        btcEquity:
          type: string
          example: "0.344746495477"
        crossedRiskRate:
          type: string
          example: "0"
        crossedMarginLeverage:
          type: string
          example: "20"
        isolatedLongLever:
          type: string
          example: "20"
        isolatedShortLever:
          type: string
          example: "20"
        marginMode:
          type: string
          example: "crossed"
        posMode:
          type: string
          example: "hedge_mode"
        unrealizedPL:
          type: string
          example: ""
        coupon:
          type: string
          example: "0"
    FutureAccountsResponse:
      type: object
      properties:
        marginCoin:
          type: string
          example: "USDT"
        locked:
          type: string
          example: "0.31876482"
        available:
          type: string
          example: "10575.26735771"
        crossedMaxAvailable:
          type: string
          example: "10580.56434289"
        isolatedMaxAvailable:
          type: string
          example: "10580.56434289"
        maxTransferOut:
          type: string
          example: "10572.92904289"
        accountEquity:
          type: string
          example: "10582.90265771"
        usdtEquity:
          type: string
          example: "10582.902657719473"
        btcEquity:
          type: string
          example: "0.204885807029"
        crossedRiskRate:
          type: string
          example: "0"
        unrealizedPL:
          type: string
          example: ""
        coupon:
          type: string
          example: "0"
        unionTotalMagin:
          type: string
          example: "111.1"
        unionAvailable:
          type: string
          example: "1111.1"
        unionMm:
          type: string
          example: "111"
        assetList:
          type: array
          items:
            type: object
            properties:
              coin:
                type: string
                example: "BTC"
              balance:
                type: string
                example: "1.2"
    InterestHistoryResponse:
      type: object
      properties:
        nextSettleTime:
          type: string
          format: timestamp
          description: Next settlement time in Unix milliseconds format
          example: "1725876300000"
        borrowAmount:
          type: string
          description: Total amount borrowed
          example: "0"
        borrowLimit:
          type: string
          description: Maximum borrowing limit
          example: "600000"
        interestList:
          type: array
          items:
            type: object
            properties:
              coin:
                type: string
                description: Coin type
                example: "USDT"
              liability:
                type: string
                description: Current liability in the specified coin
                example: "100"
              interestFreeLimit:
                type: string
                description: Interest-free borrowing limit
                example: "100"
              interestLimit:
                type: string
                description: Maximum interest-bearing limit
                example: "500"
              hourInterestRate:
                type: string
                description: Hourly interest rate
                example: "0.12"
              interest:
                type: string
                description: Accumulated interest
                example: "0.12"
              cTime:
                type: string
                format: timestamp
                description: Creation time in Unix milliseconds format
                example: "1725848567893"
        endId:
          type: string
          description: End identifier for pagination
          example: "xxxxxxxxxxxxxxx"
    IsolatedRequest:
      type: object
      properties:
        symbol:
          type: string
          description: Trading pair
          example: "BTCUSDT"
        autoMargin:
          type: string
          description: Auto margin flag
          enum: ["on", "off"]
          example: "on"
        marginCoin:
          type: string
          description: Margin coin (must be capitalized)
          example: "USDT"
        holdSide:
          type: string
          description: Position direction (no need in cross margin mode)
          enum: ["long", "short"]
          example: "long"
        amount:
          type: string
          description: Margin amount; positive means increase, and negative means decrease
          example: "100"
    LeverageRequest:
      type: object
      properties:
        symbol:
          type: string
          description: Trading pair
          example: "BTCUSDT"
        productType:
          type: string
          description: Product type
          enum:
            - "USDT-FUTURES"
            - "COIN-FUTURES"
            - "USDC-FUTURES"
            - "SUSDT-FUTURES"
            - "SCOIN-FUTURES"
            - "SUSDC-FUTURES"
          example: "USDT-FUTURES"
        marginCoin:
          type: string
          description: Margin coin (must be capitalized)
          example: "USDT"
        leverage:
          type: string
          description: Leverage
          example: "20"
        holdSide:
          type: string
          description: Position direction (ignored in crossed margin mode)
          enum:
            - "long"
            - "short"
          example: "long"
    LeverageResponse:
      type: object
      properties:
        symbol:
          type: string
          description: Trading pair
          example: "BTCUSDT"
        marginCoin:
          type: string
          description: Margin coin (e.g., USDT)
          example: "USDT"
        longLeverage:
          type: string
          description: Leverage for long positions
          example: "25"
        shortLeverage:
          type: string
          description: Leverage for short positions
          example: "20"
        crossMarginLeverage:
          type: string
          description: Leverage in crossed margin mode
          example: "20"
        marginMode:
          type: string
          description: Margin mode
          enum:
            - "crossed"
            - "isolated"
          example: "crossed"
    SetMarginRequest:
      type: object
      properties:
        symbol:
          type: string
          description: Trading pair
          example: "BTCUSDT"
        productType:
          type: string
          description: Product type
          enum:
            - "USDT-FUTURES"
            - "COIN-FUTURES"
            - "USDC-FUTURES"
            - "SUSDT-FUTURES"
            - "SCOIN-FUTURES"
            - "SUSDC-FUTURES"
          example: "USDT-FUTURES"
        marginCoin:
          type: string
          description: Margin coin (must be capitalized)
          example: "USDT"
        holdSide:
          type: string
          description: Position direction
          enum:
            - "long"
            - "short"
          example: "long"
        amount:
          type: string
          description: Margin amount, positive means increase, negative means decrease
          example: "100"
    SetAssetRequest:
      type: object
      properties:
        productType:
          type: string
          description: Product type
          enum:
            - "USDT-FUTURES"
            - "COIN-FUTURES"
            - "USDC-FUTURES"
            - "SUSDT-FUTURES"
            - "SCOIN-FUTURES"
            - "SUSDC-FUTURES"
          example: "USDT-FUTURES"
        assetMode:
          type: string
          enum: ["single","union"]
    MarginRequest:
      type: object
      properties:
        symbol:
          type: string
          description: Trading pair. e.g. BTCUSDT
          example: "BTCUSDT"
        productType:
          type: string
          description: Product type
          enum:
            - "USDT-FUTURES"
            - "COIN-FUTURES"
            - "USDC-FUTURES"
            - "SUSDT-FUTURES"
            - "SCOIN-FUTURES"
            - "SUSDC-FUTURES"
          example: "USDT-FUTURES"
        marginCoin:
          type: string
          description: Margin coin, must be capitalized
          example: "USDT"
        marginMode:
          type: string
          description: Margin mode.
          enum:
            - "isolated"
            - "crossed"
          example: "isolated"
    MarginResponse:
      type: object
      properties:
        symbol:
          type: string
          description: Trading pair.
          example: "BTCUSDT"
        marginCoin:
          type: string
          description: Margin coin.
          example: "USDT"
        longLeverage:
          type: string
          description: Leverage for long positions.
          example: "25"
        shortLeverage:
          type: string
          description: Leverage for short positions.
          example: "20"
        marginMode:
          type: string
          description: Margin mode.
          enum:
            - "isolated"
            - "crossed"
          example: "isolated" 
    PositionRequest:
      type: object
      properties:
        productType:
          type: string
          description: Product type.
          enum:
            - "USDT-FUTURES"
            - "COIN-FUTURES"
            - "USDC-FUTURES"
            - "SUSDT-FUTURES"
            - "SCOIN-FUTURES"
            - "SUSDC-FUTURES"
          example: "USDT-FUTURES"
        posMode:
          type: string
          description: Position mode.
          enum:
            - "one_way_mode"
            - "hedge_mode"
          example: "hedge_mode"
    PositionResponse:
      type: object
      properties:
        posMode:
          type: string
          description: Position mode.
          enum:
            - "one_way_mode"
            - "hedge_mode"
          example: "hedge_mode"
    Bill:
      type: object
      properties:
        billId:
          type: string
          description: The ID of the bill.
          example: "1"
        symbol:
          type: string
          description: The trading pair, e.g., "BTCUSDT".
          example: "BTCUSDT"
        amount:
          type: string
          description: The amount of the bill, negative values represent a deduction.
          example: "-0.004992"
        fee:
          type: string
          description: The fee associated with the bill.
          example: "0"
        feeByCoupon:
          type: string
          description: The fee paid using a coupon, if any.
          example: ""
        businessType:
          type: string
          description: The type of business action related to the bill.
          example: "contract_settle_fee"
        coin:
          type: string
          description: The currency used in the transaction.
          example: "USDT"
        balance:
          type: string
          description: The balance after the transaction.
          example: "232.21"
        cTime:
          type: string
          description: The time when the bill was created in Unix timestamp format (milliseconds).
          example: "1695715200654"
      required:
        - billId
        - symbol
        - amount
        - businessType
        - coin
        - balance
        - cTime
    BillResponse:
      type: array
      items:
        $ref: '#/components/schemas/Bill'
    PositionTierResponse:
      type: object
      properties:
        symbol:
          type: string
          description: The trading pair symbol, e.g., "BTCUSDT".
          example: "BTCUSDT"
        level:
          type: string
          description: The leverage level for the trade.
          example: "1"
        startUnit:
          type: string
          description: The starting unit for the leverage range.
          example: "0"
        endUnit:
          type: string
          description: The ending unit for the leverage range.
          example: "50000"
        leverage:
          type: string
          description: The leverage ratio for the position.
          example: "125"
        keepMarginRate:
          type: string
          description: The margin rate required to maintain the position.
          example: "0.004"
      required:
        - symbol
        - level
        - startUnit
        - endUnit
        - leverage
        - keepMarginRate
    SinglePositionResponse:
      type: object
      properties:
        marginCoin:
          type: string
          description: The margin coin used in the position.
          example: "USDT"
        symbol:
          type: string
          description: The trading pair symbol.
          example: "BTCUSDT"
        holdSide:
          type: string
          description: The position direction.
          enum:
            - "long"
            - "short"
          example: "long"
        openDelegateSize:
          type: string
          description: The size of the open delegate (in terms of position size).
          example: "0.01"
        marginSize:
          type: string
          description: The total margin size used for the position.
          example: "9.6695050093373343"
        available:
          type: string
          description: The available margin for the position.
          example: "0.01"
        locked:
          type: string
          description: The locked margin for the position.
          example: "0.09"
        total:
          type: string
          description: The total margin for the position.
          example: "0.01"
        leverage:
          type: string
          description: The leverage applied to the position.
          example: "20"
        achievedProfits:
          type: string
          description: The profits achieved from the position.
          example: "0"
        openPriceAvg:
          type: string
          description: The average open price of the position.
          example: "25000"
        marginMode:
          type: string
          description: The margin mode (isolated or crossed).
          enum:
            - "isolated"
            - "crossed"
          example: "isolated"
        posMode:
          type: string
          description: The position mode, either "hedge_mode" or "one_way_mode".
          enum:
            - "hedge_mode"
            - "one_way_mode"
          example: "hedge_mode"
        unrealizedPL:
          type: string
          description: The unrealized profit or loss for the position.
          example: "1"
        liquidationPrice:
          type: string
          description: The liquidation price of the position.
          example: "24144.1124161806977798"
        keepMarginRate:
          type: string
          description: The margin rate required to maintain the position.
          example: "0.004"
        markPrice:
          type: string
          description: The current market price of the asset.
          example: "25100"
        breakEvenPrice:
          type: string
          description: The break-even price for the position.
          example: "24778.97"
        totalFee:
          type: string
          description: The total fees associated with the position.
          example: "1.45"
        deductedFee:
          type: string
          description: The deducted fees from the total fees.
          example: "0.388"
        marginRatio:
          type: string
          description: The margin ratio for the position.
          example: "0.1082149545822005"
        assetMode:
          type: string
          description: The asset mode (e.g., "single").
          example: "single"
        cTime:
          type: string
          description: The creation time of the position (timestamp in milliseconds).
          example: "1691382137448"
        uTime:
          type: string
          description: The last update time of the position (timestamp in milliseconds).
          example: "1691382137999"
      required:
        - marginCoin
        - symbol
        - holdSide
        - openDelegateSize
        - marginSize
        - available
        - locked
        - total
        - leverage
        - openPriceAvg
        - marginMode
        - posMode
        - unrealizedPL
        - liquidationPrice
        - keepMarginRate
        - markPrice
        - breakEvenPrice
        - totalFee
        - deductedFee
        - marginRatio
        - assetMode
        - cTime
        - uTime
    Position:
      type: object
      properties:
        positionId:
          type: string
          description: Unique identifier for the position.
          example: "xxxxxxxxxxx"
        marginCoin:
          type: string
          description: The margin coin used in the position.
          example: "USDT"
        symbol:
          type: string
          description: The trading pair symbol.
          example: "BTCUSDT"
        holdSide:
          type: string
          description: The position direction (e.g., long or short).
          example: "long"
        openAvgPrice:
          type: string
          description: The average price at which the position was opened.
          example: "32000"
        closeAvgPrice:
          type: string
          description: The average price at which the position was closed.
          example: "32500"
        marginMode:
          type: string
          description: The margin mode for the position (isolated or crossed).
          example: "isolated"
        openTotalPos:
          type: string
          description: The total position size when the position was opened.
          example: "0.01"
        closeTotalPos:
          type: string
          description: The total position size when the position was closed.
          example: "0.01"
        pnl:
          type: string
          description: The profit and loss from the position.
          example: "14.1"
        netProfit:
          type: string
          description: The net profit from the position after all costs.
          example: "12.1"
        totalFunding:
          type: string
          description: The total funding fee for the position.
          example: "0.1"
        openFee:
          type: string
          description: The fee when opening the position.
          example: "0.01"
        closeFee:
          type: string
          description: The fee when closing the position.
          example: "0.01"
        cTime:
          type: string
          description: The timestamp when the position was created.
          example: "1988824171000"
        uTime:
          type: string
          description: The timestamp when the position was last updated.
          example: "1988824171000"
    HistoryPositionResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/Position'
        endId:
          type: string
          description: The end ID for pagination, indicating older data.
          example: "23423432423423234"
    PlaceOrderRequest:
      type: object
      properties:
        symbol:
          type: string
          description: The trading pair symbol, e.g., "ETHUSDT".
          example: "ETHUSDT"
        productType:
          type: string
          description: The product type (e.g., USDT-FUTURES, COIN-FUTURES).
          enum:
            - "USDT-FUTURES"
            - "COIN-FUTURES"
            - "USDC-FUTURES"
            - "SUSDT-FUTURES"
            - "SCOIN-FUTURES"
            - "SUSDC-FUTURES"
          example: "USDT-FUTURES"
        marginMode:
          type: string
          description: The position mode.
          enum:
            - "isolated"
            - "crossed"
          example: "isolated"
        marginCoin:
          type: string
          description: The margin coin, e.g., "USDT" (capitalized).
          example: "USDT"
        size:
          type: string
          description: The amount of the base coin.
          example: "0.5"
        price:
          type: string
          description: The price of the order (required for limit orders).
          example: "3200"
        side:
          type: string
          description: The trade side.
          enum:
            - "buy"
            - "sell"
          example: "buy"
        tradeSide:
          type: string
          description: The trade type (only required in hedge mode).
          enum:
            - "open"
            - "close"
          example: "open"
        orderType:
          type: string
          description: The type of order.
          enum:
            - "limit"
            - "market"
          example: "limit"
        force:
          type: string
          description: Order expiration date.
          enum:
            - "ioc"
            - "fok"
            - "gtc"
            - "post_only"
          example: "gtc"
        clientOid:
          type: string
          description: A customized order ID.
          example: "custom-order-id-123"
        reduceOnly:
          type: string
          description: Whether to reduce the position only (YES or NO).
          enum:
            - "YES"
            - "NO"
          example: "NO"
        presetStopSurplusPrice:
          type: string
          description: The take-profit price. If empty, no take-profit is set.
          example: "3500"
        presetStopLossPrice:
          type: string
          description: The stop-loss price. If empty, no stop-loss is set.
          example: "3100"
        stpMode:
          type: string
          description: Self Trade Prevention (STP) mode.
          enum:
            - "none"
            - "cancel_taker"
            - "cancel_maker"
            - "cancel_both"
          example: "none"

      required:
        - symbol
        - productType
        - marginMode
        - marginCoin
        - size
        - side
        - orderType
    ReversalRequest:
      type: object
      properties:
        symbol:
          type: string
          description: The trading pair symbol, e.g., "ETHUSDT".
          example: "ETHUSDT"
        marginCoin:
          type: string
          description: The margin coin, e.g., "USDT".
          example: "USDT"
        productType:
          type: string
          description: The product type.
          enum:
            - "USDT-FUTURES"
            - "COIN-FUTURES"
            - "USDC-FUTURES"
            - "SUSDT-FUTURES"
            - "SCOIN-FUTURES"
            - "SUSDC-FUTURES"
          example: "USDT-FUTURES"
        size:
          type: string
          description: The amount of the base coin.
          example: "0.5"
        side:
          type: string
          description: The order direction.
          enum:
            - "buy"
            - "sell"
          example: "buy"
        tradeSide:
          type: string
          description: The direction of the trade. Required for open and close positions in hedge mode.
          enum:
            - "Open"
            - "Close"
          example: "Open"
        clientOid:
          type: string
          description: A customized order ID.
          example: "custom-order-id-123"
        
      required:
        - symbol
        - marginCoin
        - productType
        - size
    BatchOrdersRequest:
      type: object
      properties:
        symbol:
          type: string
          description: The trading pair symbol, e.g., "BTCUSDT".
          example: "BTCUSDT"
        productType:
          type: string
          description: The product type.
          enum:
            - "USDT-FUTURES"
            - "COIN-FUTURES"
            - "USDC-FUTURES"
            - "SUSDT-FUTURES"
            - "SCOIN-FUTURES"
            - "SUSDC-FUTURES"
          example: "USDT-FUTURES"
        marginMode:
          type: string
          description: The margin mode for the order.
          enum:
            - "isolated"
            - "crossed"
          example: "crossed"
        marginCoin:
          type: string
          description: The margin coin used, e.g., "USDT".
          example: "USDT"
        orderList:
          type: array
          description: List of orders with details.
          items:
            type: object
            properties:
              size:
                type: string
                description: The amount for the order.
                example: "1"
              side:
                type: string
                description: The order direction.
                enum:
                  - "buy"
                  - "sell"
                example: "buy"
              tradeSide:
                type: string
                description: Specifies whether the trade is opening or closing a position.
                enum:
                  - "open"
                  - "close"
                example: "open"
              orderType:
                type: string
                description: The type of order.
                enum:
                  - "limit"
                  - "market"
                example: "market"
              force:
                type: string
                description: Order expiration type.
                enum:
                  - "gtc"
                  - "ioc"
                  - "fok"
                  - "post_only"
                example: "gtc"
              clientOid:
                type: string
                description: Custom order ID.
                example: "123456"
              reduceOnly:
                type: string
                description: Whether to reduce the position only, applicable in one-way mode.
                enum:
                  - "YES"
                  - "NO"
                example: "NO"
              presetStopSurplusPrice:
                type: string
                description: The take-profit price.
                example: "20000"
              presetStopLossPrice:
                type: string
                description: The stop-loss price.
                example: "10000"
          minItems: 1
      required:
        - symbol
        - productType
        - marginMode
        - marginCoin
        - orderList
    ModifyOrdersRequest:
      type: object
      properties:
        orderId:
          type: string
          description: Order ID. Either `orderId` or `clientOid` is required. If both are provided, `orderId` takes precedence.
          example: "123456789"
        clientOid:
          type: string
          description: Custom order ID. Either `orderId` or `clientOid` is required. If both are provided, `orderId` takes precedence.
          example: "custom-oid-123"
        symbol:
          type: string
          description: Trading pair, e.g., "ETHUSDT".
          example: "ETHUSDT"
        productType:
          type: string
          description: Type of product for futures trading.
          enum:
            - "USDT-FUTURES"
            - "COIN-FUTURES"
            - "USDC-FUTURES"
            - "SUSDT-FUTURES"
            - "SCOIN-FUTURES"
            - "SUSDC-FUTURES"
          example: "USDT-FUTURES"
        newClientOid:
          type: string
          description: New custom order ID for the modified order.
          example: "new-custom-oid-456"
        newSize:
          type: string
          description: Updated amount for the transaction. The amount remains unchanged if this field is left blank.
          example: "2"
        newPrice:
          type: string
          description: Modified price for placing new orders.
          example: "2500"
        newPresetStopSurplusPrice:
          type: string
          description: Updated take-profit value. If the original order has a take-profit set and this field is empty, the original value is retained.
          example: "3000"
        newPresetStopLossPrice:
          type: string
          description: Updated stop-loss value. If the original order has a stop-loss set and this field is empty, the original value is retained.
          example: "1500"
      required:
        - symbol
        - productType
        - newClientOid
      description: Request schema for modifying an existing order.
    CancelOrderRequest:
      type: object
      properties:
        symbol:
          type: string
          description: Trading pair, e.g., "ETHUSDT".
          example: "BTCUSDT"
        productType:
          type: string
          description: Type of futures product.
          enum:
            - "USDT-FUTURES"
            - "COIN-FUTURES"
            - "USDC-FUTURES"
            - "SUSDT-FUTURES"
            - "SCOIN-FUTURES"
            - "SUSDC-FUTURES"
          example: "USDT-FUTURES"
        marginCoin:
          type: string
          description: Margin coin, which must be capitalized.
          example: "USDT"
        orderId:
          type: string
          description: Order ID. Either `orderId` or `clientOid` is required. If both are present, `orderId` prevails.
          example: "123456789"
        clientOid:
          type: string
          description: Custom order ID. Either `orderId` or `clientOid` is required. If both are present, `orderId` prevails.
          example: "custom-oid-123"
      required:
        - symbol
        - productType
      description: Query parameters for retrieving or modifying a specific order based on trading pair, product type, and optional identifiers.
    CancelBatchOrderRequest:
      type: object
      properties:
        symbol:
          type: string
          description: "Trading symbol, e.g., BTCUSDT."
        productType:
          type: string
          description: "The type of product, e.g., usdt-futures."
        marginCoin:
          type: string
          description: "The margin currency used, e.g., USDT."
        orderIdList:
          type: array
          description: "List of order IDs."
          items:
            type: object
            properties:
              orderId:
                type: string
                description: "Unique identifier for the order."
          example:
            - orderId: "121211212122"
      required:
        - symbol
        - productType
        - marginCoin
        - orderIdList
    FlashRequest:
      type: object
      properties:
        symbol:
          type: string
        holdSide:
          type: string
          enum: ["long","short"]
        productType:
          type: string
          description: Type of futures product.
          enum:
            - "USDT-FUTURES"
            - "COIN-FUTURES"
            - "USDC-FUTURES"
            - "SUSDT-FUTURES"
            - "SCOIN-FUTURES"
            - "SUSDC-FUTURES"
          example: "USDT-FUTURES"
    OrderFillsResponse:
      type: object
      properties:
        fillList:
          type: array
          description: "List of trade fill details."
          items:
            type: object
            properties:
              tradeId:
                type: string
                description: "Unique identifier for the trade."
              symbol:
                type: string
                description: "Trading pair, e.g., ethusdt."
              orderId:
                type: string
                description: "Unique identifier for the order."
              price:
                type: string
                description: "Price at which the trade occurred."
              baseVolume:
                type: string
                description: "Base volume of the trade."
              feeDetail:
                type: array
                description: "Details of fees applied to the trade."
                items:
                  type: object
                  properties:
                    deduction:
                      type: string
                      description: "Whether fee deduction was applied, e.g., 'yes' or 'no'."
                    feeCoin:
                      type: string
                      description: "The coin in which the fee was charged."
                    totalDeductionFee:
                      type: string
                      description: "Total fee deducted."
                    totalFee:
                      type: string
                      description: "Total fee amount."
              side:
                type: string
                description: "Side of the trade, e.g., 'buy' or 'sell'."
              quoteVolume:
                type: string
                description: "Quote volume of the trade."
              profit:
                type: string
                description: "Profit from the trade."
              enterPointSource:
                type: string
                description: "Source of the entry point, e.g., 'api'."
              tradeSide:
                type: string
                description: "Trade side, e.g., 'open' or 'close'."
              posMode:
                type: string
                description: "Position mode, e.g., 'hedge_mode'."
              tradeScope:
                type: string
                description: "Scope of the trade, e.g., 'taker'."
              cTime:
                type: string
                format: date-time
                description: "Creation time of the trade in milliseconds."
        endId:
          type: string
          description: "The ID of the last trade in the list."
      required:
        - fillList
        - endId
    OrderPendingResponse:
      type: object
      properties:
        entrustedList:
          type: array
          description: "List of entrusted orders with detailed information."
          items:
            type: object
            properties:
              symbol:
                type: string
                description: "Trading pair, e.g., ethusdt."
              size:
                type: string
                description: "Size of the order."
              orderId:
                type: string
                description: "Unique identifier for the order."
              clientOid:
                type: string
                description: "Custom order ID provided by the client."
              baseVolume:
                type: string
                description: "Base volume of the order."
              fee:
                type: string
                description: "Fee associated with the order."
              price:
                type: string
                description: "Price at which the order was placed."
              priceAvg:
                type: string
                description: "Average price at which the order was filled."
              status:
                type: string
                description: "Current status of the order, e.g., 'partially_filled'."
              side:
                type: string
                description: "Order side, e.g., 'buy' or 'sell'."
              force:
                type: string
                description: "Time-in-force setting for the order, e.g., 'gtc'."
              totalProfits:
                type: string
                description: "Total profits from the order."
              posSide:
                type: string
                description: "Position side, e.g., 'long' or 'short'."
              marginCoin:
                type: string
                description: "The coin used for margin, e.g., 'usdt'."
              quoteVolume:
                type: string
                description: "Quote volume of the order."
              leverage:
                type: string
                description: "Leverage applied to the order."
              marginMode:
                type: string
                description: "Margin mode, e.g., 'cross' or 'isolated'."
              enterPointSource:
                type: string
                description: "Source of the entry point, e.g., 'api'."
              tradeSide:
                type: string
                description: "Trade side, e.g., 'open' or 'close'."
              posMode:
                type: string
                description: "Position mode, e.g., 'hedge_mode'."
              orderType:
                type: string
                description: "Type of the order, e.g., 'limit' or 'market'."
              orderSource:
                type: string
                description: "Source of the order, e.g., 'normal'."
              cTime:
                type: string
                format: date-time
                description: "Creation time of the order in milliseconds."
              uTime:
                type: string
                format: date-time
                description: "Last update time of the order in milliseconds."
              presetStopSurplusPrice:
                type: string
                description: "Preset stop surplus price."
              presetStopLossPrice:
                type: string
                description: "Preset stop loss price."
        endId:
          type: string
          description: "The ID of the last entrusted order in the list."
      required:
        - entrustedList
        - endId
    CancelAllOrderRequest:
      type: object
      properties:
        symbol:
          type: string
          description: "Trading pair, e.g., ETHUSDT."
        productType:
          type: string
          enum:
            - USDT-FUTURES
            - COIN-FUTURES
            - USDC-FUTURES
            - SUSDT-FUTURES
            - SCOIN-FUTURES
            - SUSDC-FUTURES
          description: |
            Product type. Possible values include:
            - `USDT-FUTURES`: USDT professional futures
            - `COIN-FUTURES`: Mixed futures
            - `USDC-FUTURES`: USDC professional futures
            - `SUSDT-FUTURES`: USDT professional futures demo
            - `SCOIN-FUTURES`: Mixed futures demo
            - `SUSDC-FUTURES`: USDC professional futures demo
        marginCoin:
          type: string
          pattern: '^[A-Z]+$'
          description: "Margin coin, must be capitalized."
        requestTime:
          type: string
          format: date-time
          description: "Request time in Unix millisecond timestamp format."
        receiveWindow:
          type: string
          format: date-time
          description: "Valid window period in Unix millisecond timestamp format."
      required:
        - productType
    SubOrderResponse:
      type: object
      properties:
        orderId:
          type: string
          description: "Unique identifier for the order."
        price:
          type: string
          format: decimal
          description: "Price of the order."
        type:
          type: string
          enum:
            - limit
            - market
          description: "Type of the order, e.g., 'limit' or 'market'."
        status:
          type: string
          enum:
            - success
            - pending
            - failed
          description: "Current status of the order."
      required:
        - orderId
        - price
        - type
        - status
    TPSLRequest:
      type: object
      properties:
        marginCoin:
          type: string
          description: "Margin currency (capitalized)."
        productType:
          type: string
          description: "Product type."
          enum:
            - usdt-futures
            - coin-futures
            - usdc-futures
            - susdt-futures
            - scoin-futures
            - susdc-futures
        symbol:
          type: string
          description: "Trading pair, e.g., ETHUSDT."
        planType:
          type: string
          description: "Take profit and stop loss type."
          enum:
            - profit_plan
            - loss_plan
            - moving_plan
            - pos_profit
            - pos_loss
        triggerPrice:
          type: string
          description: "Trigger price."
        triggerType:
          type: string
          description: "Trigger type."
          enum:
            - fill_price
            - mark_price
        executePrice:
          type: string
          description: |
            Execution price. If it is 0 or not filled in, it means market price execution.
            If it is greater than 0, it means limit price execution.
            Do not fill in this parameter when planType is 'moving_plan', as it only executes at market price.
        holdSide:
          type: string
          description: |
            Two-way position options: (long: long position, short: short position).
            One-way position options: (buy: long position, sell: short position).
          enum:
            - long
            - short
            - buy
            - sell
        size:
          type: string
          description: |
            Order quantity (base coin). Required when planType is 'profit_plan', 'loss_plan', or 'moving_plan' 
            and should be greater than 0. Not required for 'pos_profit' or 'pos_loss'.
        rangeRate:
          type: string
          description: |
            Callback range, required only when planType is 'moving_plan'.
        clientOid:
          type: string
          description: "Custom order ID."
        stpMode:
          type: string
          description: "STP Mode, default is 'none'."
          enum:
            - none
            - cancel_taker
            - cancel_maker
            - cancel_both
      required:
        - marginCoin
        - productType
        - symbol
        - planType
        - triggerPrice
        - holdSide
    PlacePlanRequest:
      type: object
      properties:
        planType:
          type: string
          description: |
            Trigger order type.
            Options: normal_plan (average trigger order), track_plan (trailing stop order).
          enum: [normal_plan, track_plan]
        symbol:
          type: string
          description: "Trading pair, e.g., ETHUSDT."
        productType:
          type: string
          description: |
            Product type options.
            - USDT-FUTURES: USDT professional futures
            - COIN-FUTURES: Mixed futures
            - USDC-FUTURES: USDC professional futures
            - SUSDT-FUTURES: USDT professional futures demo
            - SCOIN-FUTURES: Mixed futures demo
            - SUSDC-FUTURES: USDC professional futures demo
          enum: [USDT-FUTURES, COIN-FUTURES, USDC-FUTURES, SUSDT-FUTURES, SCOIN-FUTURES, SUSDC-FUTURES]
        marginMode:
          type: string
          description: |
            Position mode.
            Options: isolated (isolated margin), cross (cross margin).
          enum: [isolated, cross]
        marginCoin:
          type: string
          description: "Margin coin (must be capitalized)."
        size:
          type: string
          description: "Order amount."
        price:
          type: string
          description: |
            Strike price.
            Required when placing a limit trigger order, must be empty for trailing stop orders.
        callbackRatio:
          type: string
          description: |
            Callback rate for trailing stop orders only.
            Required for trailing stop orders, cannot exceed 10.
        triggerPrice:
          type: string
          description: "Trigger price for trigger or trailing stop orders."
        triggerType:
          type: string
          description: |
            Trigger type options.
            Required for trigger and trailing stop orders.
            - mark_price: mark price
            - fill_price: filled price
          enum: [mark_price, fill_price]
        side:
          type: string
          description: "Order direction: Buy or Sell."
          enum: [Buy, Sell]
        tradeSide:
          type: string
          description: |
            Direction in hedge mode position.
            For open positions, tradeSide should be "Open"; for close positions, "Close".
            Examples:
              - For open long, side="Buy" and tradeSide="Open".
              - For close long, side="Buy" and tradeSide="Close".
          enum: [Open, Close]
        orderType:
          type: string
          description: |
            Order type.
            For trailing stop orders, must be market. For ordinary trigger orders, can be limit or market.
          enum: [limit, market]
        clientOid:
          type: string
          description: "Custom order ID."
        reduceOnly:
          type: string
          description: |
            Whether to reduce position only.
            Options: YES, NO. Default: NO.
            Only applicable in one-way position mode, must be empty or "no" in hedge mode.
          enum: [YES, NO]
        stopSurplusTriggerPrice:
          type: string
          description: "Take-profit trigger price, empty if not set."
        stopSurplusExecutePrice:
          type: string
          description: |
            Take-profit strike price. Required if stopSurplusTriggerPrice is set.
            Must be empty for trailing stop orders.
        stopSurplusTriggerType:
          type: string
          description: |
            Take-profit trigger type, defaults to transaction price.
            Options:
              - fill_price: filled price
              - mark_price: mark price
              - index_price: index price
            Required if stopSurplusTriggerPrice is set.
          enum: [fill_price, mark_price, index_price]
        stopLossTriggerPrice:
          type: string
          description: "Stop-loss trigger price, empty if not set."
        stopLossExecutePrice:
          type: string
          description: |
            Stop-loss strike price. Required if stopLossTriggerPrice is set.
            Must be empty for trailing stop orders.
        stopLossTriggerType:
          type: string
          description: |
            Stop-loss trigger type, defaults to transaction price.
            Options:
              - fill_price: filled price
              - mark_price: mark price
              - index_price: index price
            Required if stopLossTriggerPrice is set.
          enum: [fill_price, mark_price, index_price]
        stpMode:
          type: string
          description: |
            STP Mode, default is 'none'.
            Options:
              - none: no STP setting
              - cancel_taker: cancel taker order
              - cancel_maker: cancel maker order
              - cancel_both: cancel both taker and maker orders
          enum: [none, cancel_taker, cancel_maker, cancel_both]
      required:
        - planType
        - symbol
        - productType
        - marginMode
        - marginCoin
        - size
        - triggerPrice
        - triggerType
        - side
        - orderType
    ModifyTPSLRequest:
      type: object
      properties:
        orderId:
          type: string
          description: |
            Take profit and stop loss order number. Either `orderId` or `clientOid` must be provided.
        clientOid:
          type: string
          description: |
            Take profit and stop loss client order number. Either `orderId` or `clientOid` must be provided.
        marginCoin:
          type: string
          description: "Margin currency."
        productType:
          type: string
          description: |
            Product type options.
            - usdt-futures: USDT professional futures
            - coin-futures: Mixed futures
            - usdc-futures: USDC professional futures
            - susdt-futures: USDT professional futures demo
            - scoin-futures: Mixed futures demo
            - susdc-futures: USDC professional futures demo
          enum: [usdt-futures, coin-futures, usdc-futures, susdt-futures, scoin-futures, susdc-futures]
        symbol:
          type: string
          description: "Trading pair, e.g., ETHUSDT."
        triggerPrice:
          type: string
          description: "Trigger price."
        triggerType:
          type: string
          description: |
            Trigger type.
            Options:
              - fill_price: transaction price
              - mark_price: mark price
          enum: [fill_price, mark_price]
        executePrice:
          type: string
          description: |
            Execution price.
            - If 0 or not provided, it means market price execution.
            - If greater than 0, it means limit price execution.
            - When `planType` is `moving_plan`, it is fixed to the market price.
        size:
          type: string
          description: "Order quantity."
        rangeRate:
          type: string
          description: |
            Callback range. Required only for trailing stop orders.
      required:
        - marginCoin
        - productType
        - symbol
        - triggerPrice
        - size
    ModifyPlanRequest:
      type: object
      properties:
        planType:
          type: string
          description: |
            Trigger order type.
            - normal_plan: average trigger order
            - track_plan: trailing stop order
          enum: [normal_plan, track_plan]
        orderId:
          type: string
          description: "Order ID for the trigger order."
        clientOid:
          type: string
          description: "Client order ID for the trigger order."
        symbol:
          type: string
          description: "Trading pair, e.g., ETHUSDT."
        productType:
          type: string
          description: |
            Product type options.
            - usdt-futures: USDT professional futures
            - coin-futures: Mixed futures
            - usdc-futures: USDC professional futures
            - susdt-futures: USDT professional futures demo
            - scoin-futures: Mixed futures demo
            - susdc-futures: USDC professional futures demo
          enum: [usdt-futures, coin-futures, usdc-futures, susdt-futures, scoin-futures, susdc-futures]
        newSize:
          type: string
          description: "New order size."
        newPrice:
          type: string
          description: "New price for the order."
        newCallbackRatio:
          type: string
          description: "New callback ratio (required for trailing stop orders)."
        newTriggerPrice:
          type: string
          description: "New trigger price."
        newTriggerType:
          type: string
          description: "New trigger type."
          enum: [fill_price, mark_price]
        newStopSurplusExecutePrice:
          type: string
          description: "New stop surplus execution price."
        newStopSurplusTriggerPrice:
          type: string
          description: "New stop surplus trigger price."
        newStopSurplusTriggerType:
          type: string
          description: "New stop surplus trigger type."
          enum: [fill_price, mark_price]
        newStopLossExecutePrice:
          type: string
          description: "New stop loss execution price."
        newStopLossTriggerPrice:
          type: string
          description: "New stop loss trigger price."
        newStopLossTriggerType:
          type: string
          description: "New stop loss trigger type."
          enum: [fill_price, mark_price]
      required:
        - planType
        - orderId
        - clientOid
        - symbol
        - productType
        - newSize
        - newPrice
        - newTriggerPrice
        - newTriggerType
    OrderIdItem:
      type: object
      properties:
        orderId:
          type: string
          description: "Trigger order ID. If both orderId and clientOid are provided, orderId prevails."
          example: "123"
        clientOid:
          type: string
          description: "Customized trigger order ID. If both orderId and clientOid are provided, orderId prevails."
          example: "321"
      required:
        - orderId
        - clientOid
    TriggerOrderRequest:
      type: object
      properties:
        orderIdList:
          type: array
          items:
            $ref: '#/components/schemas/OrderIdItem'
          description: "List of order IDs and client OIDs."
        symbol:
          type: string
          description: "Trading pair, e.g., ETHUSDT."
          example: "ETHUSDT"
        productType:
          type: string
          description: |
            Product type options:
            - USDT-FUTURES: USDT professional futures
            - COIN-FUTURES: Mixed futures
            - USDC-FUTURES: USDC professional futures
            - SUSDT-FUTURES: USDT professional futures demo
            - SCOIN-FUTURES: Mixed futures demo
            - SUSDC-FUTURES: USDC professional futures demo
          example: "usdt-futures"
        marginCoin:
          type: string
          description: "Margin currency."
          example: "USDT"
      required:
        - orderIdList
        - symbol
        - productType
        - marginCoin

        
    
          
          
  